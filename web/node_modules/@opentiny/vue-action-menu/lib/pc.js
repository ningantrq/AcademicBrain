import { defineComponent, $prefix, setup as _setup } from "@opentiny/vue-common";
import { renderless, api } from "@opentiny/vue-renderless/action-menu/vue";
import "@opentiny/vue-theme/action-menu/index.css";
import Dropdown from "@opentiny/vue-dropdown";
import DropdownMenu from "@opentiny/vue-dropdown-menu";
import DropdownItem from "@opentiny/vue-dropdown-item";
import { t } from "@opentiny/vue-locale";
import { resolveComponent, openBlock, createElementBlock, createElementVNode, Fragment, renderList, normalizeClass, createVNode, withCtx, renderSlot, normalizeStyle, createBlock, createCommentVNode } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  name: $prefix + "ActionMenu",
  components: {
    TinyDropdown: Dropdown,
    TinyDropdownMenu: DropdownMenu,
    TinyDropdownItem: DropdownItem
  },
  emits: ["more-click", "item-click", "visible-change"],
  props: {
    options: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    maxShowNum: {
      type: Number,
      default: 2
    },
    moreText: {
      type: String,
      default: t("ui.actionMenu.moreText")
    },
    spacing: {
      type: [String, Number],
      default: "5px"
    },
    textField: {
      type: String,
      default: "label"
    },
    popperClass: {
      type: String,
      default: ""
    },
    popperAppendToBody: {
      type: Boolean,
      default: false
    },
    trigger: {
      type: String,
      default: "hover"
    },
    suffixIcon: Object,
    showIcon: {
      type: Boolean,
      default: true
    }
  },
  setup: function setup(props, context) {
    return _setup({
      props,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  class: "tiny-action-menu"
};
var _hoisted_2 = {
  class: "tiny-action-menu__wrap"
};
var _hoisted_3 = {
  key: 0,
  class: "tiny-action-menu__item"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_tiny_dropdown_item = resolveComponent("tiny-dropdown-item");
  var _component_tiny_dropdown_menu = resolveComponent("tiny-dropdown-menu");
  var _component_tiny_dropdown = resolveComponent("tiny-dropdown");
  return openBlock(), createElementBlock("div", _hoisted_1, [createElementVNode("ul", _hoisted_2, [(openBlock(true), createElementBlock(
    Fragment,
    null,
    renderList(_ctx.state.visibleOptions, function(visableItem, index) {
      return openBlock(), createElementBlock(
        "li",
        {
          key: index,
          class: normalizeClass(["tiny-action-menu__item", "tiny-action-menu__item-visable", {
            "is-disabled": visableItem.disabled
          }])
        },
        [createVNode(_component_tiny_dropdown_item, {
          "item-data": visableItem,
          label: visableItem[_ctx.textField],
          "text-field": _ctx.textField,
          disabled: visableItem.disabled,
          icon: visableItem.icon,
          onItemClick: _ctx.handleItemClick
        }, {
          default: withCtx(function(_ref) {
            var itemData = _ref.itemData;
            return [renderSlot(_ctx.$slots, "item", {
              data: itemData
            })];
          }),
          _: 2
          /* DYNAMIC */
        }, 1032, ["item-data", "label", "text-field", "disabled", "icon", "onItemClick"]), createElementVNode(
          "span",
          {
            class: "tiny-action-menu__item-line",
            style: normalizeStyle({
              margin: "0 " + _ctx.state.spacing
            })
          },
          null,
          4
          /* STYLE */
        )],
        2
        /* CLASS */
      );
    }),
    128
    /* KEYED_FRAGMENT */
  )), _ctx.state.moreOptions.length ? (openBlock(), createElementBlock("li", _hoisted_3, [createVNode(_component_tiny_dropdown, {
    title: _ctx.moreText,
    trigger: _ctx.trigger,
    "suffix-icon": _ctx.suffixIcon,
    "show-icon": _ctx.showIcon,
    onItemClick: _ctx.handleItemClick,
    onHandleClick: _ctx.handleMoreClick,
    onVisibleChange: _ctx.visibleChange
  }, {
    dropdown: withCtx(function() {
      return [createVNode(_component_tiny_dropdown_menu, {
        "text-field": _ctx.textField,
        "popper-class": _ctx.popperClass
      }, {
        default: withCtx(function() {
          return [(openBlock(true), createElementBlock(
            Fragment,
            null,
            renderList(_ctx.state.moreOptions, function(item, index) {
              return openBlock(), createBlock(_component_tiny_dropdown_item, {
                key: index,
                "item-data": item,
                label: item[_ctx.textField],
                disabled: item.disabled
              }, {
                default: withCtx(function(_ref2) {
                  var itemData = _ref2.itemData;
                  return [renderSlot(_ctx.$slots, "item", {
                    data: itemData
                  })];
                }),
                _: 2
                /* DYNAMIC */
              }, 1032, ["item-data", "label", "disabled"]);
            }),
            128
            /* KEYED_FRAGMENT */
          ))];
        }),
        _: 3
        /* FORWARDED */
      }, 8, ["text-field", "popper-class"])];
    }),
    _: 3
    /* FORWARDED */
  }, 8, ["title", "trigger", "suffix-icon", "show-icon", "onItemClick", "onHandleClick", "onVisibleChange"])])) : createCommentVNode("v-if", true)])]);
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  pc as default
};
