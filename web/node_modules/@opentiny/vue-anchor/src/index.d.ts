export declare const anchorProps: {
    isAffix: {
        type: BooleanConstructor;
        default: boolean;
    };
    links: {
        type: ArrayConstructor;
        default: () => never[];
    };
    containerId: {
        type: StringConstructor;
        default: string;
    };
    markClass: {
        type: StringConstructor;
        default: string;
    };
    type: {
        type: StringConstructor;
        default: string;
    };
};
declare const _default: import("@vue/runtime-core").DefineComponent<{
    isAffix: {
        type: BooleanConstructor;
        default: boolean;
    };
    links: {
        type: ArrayConstructor;
        default: () => never[];
    };
    containerId: {
        type: StringConstructor;
        default: string;
    };
    markClass: {
        type: StringConstructor;
        default: string;
    };
    type: {
        type: StringConstructor;
        default: string;
    };
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    isAffix: {
        type: BooleanConstructor;
        default: boolean;
    };
    links: {
        type: ArrayConstructor;
        default: () => never[];
    };
    containerId: {
        type: StringConstructor;
        default: string;
    };
    markClass: {
        type: StringConstructor;
        default: string;
    };
    type: {
        type: StringConstructor;
        default: string;
    };
}>>, {
    type: string;
    markClass: string;
    links: unknown[];
    isAffix: boolean;
    containerId: string;
}, {}>;
export default _default;
