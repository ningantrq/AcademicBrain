declare const _default: import("@vue/runtime-core").DefineComponent<{
    modelValue: {};
    placeholder: {
        type: StringConstructor;
        default: string;
    };
    size: StringConstructor;
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    props: {
        type: ObjectConstructor;
        default: () => {
            label: string;
            value: string;
        };
    };
    fetchJcr: {
        type: FunctionConstructor;
    };
    fetchRegion: {
        type: FunctionConstructor;
    };
    fetchRep: {
        type: FunctionConstructor;
    };
    fetchOffice: {
        type: FunctionConstructor;
    };
    popperClass: StringConstructor;
    popperAppendToBody: {
        type: BooleanConstructor;
        default: boolean;
    };
}, {
    t: (this: any, path: any, options?: any) => any;
    vm: any;
    f: (props: any, attrs?: {}) => {};
    a: (attrs: any, filters: any, include: any) => {};
    d: (props: any) => void;
    dp: (props: any) => void;
    gcls: (key: any) => any;
}, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    modelValue: {};
    placeholder: {
        type: StringConstructor;
        default: string;
    };
    size: StringConstructor;
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    props: {
        type: ObjectConstructor;
        default: () => {
            label: string;
            value: string;
        };
    };
    fetchJcr: {
        type: FunctionConstructor;
    };
    fetchRegion: {
        type: FunctionConstructor;
    };
    fetchRep: {
        type: FunctionConstructor;
    };
    fetchOffice: {
        type: FunctionConstructor;
    };
    popperClass: StringConstructor;
    popperAppendToBody: {
        type: BooleanConstructor;
        default: boolean;
    };
}>>, {
    props: Record<string, any>;
    disabled: boolean;
    popperAppendToBody: boolean;
    placeholder: string;
}, {}>;
export default _default;
