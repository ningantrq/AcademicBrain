declare const _default: import("@vue/runtime-core").DefineComponent<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            WARP_CLS: string;
            ITEM_CLS: string;
        };
    };
    autofocus: BooleanConstructor;
    clearable: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    customItem: StringConstructor;
    debounce: {
        type: NumberConstructor;
        default: () => number;
    };
    disabled: BooleanConstructor;
    fetchSuggestions: FunctionConstructor;
    hideLoading: BooleanConstructor;
    highlightFirstItem: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    label: StringConstructor;
    maxlength: NumberConstructor;
    minlength: NumberConstructor;
    modelValue: StringConstructor;
    name: StringConstructor;
    placeholder: StringConstructor;
    placement: {
        type: StringConstructor;
        default: () => string;
    };
    popperAppendToBody: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    popperClass: StringConstructor;
    popperOptions: ObjectConstructor;
    prefixIcon: (ObjectConstructor | StringConstructor)[];
    selectWhenUnmatched: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    size: StringConstructor;
    suffixIcon: (ObjectConstructor | StringConstructor)[];
    triggerOnFocus: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    valueKey: {
        type: StringConstructor;
        default: () => string;
    };
    displayOnly: {
        type: BooleanConstructor;
        default: boolean;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            WARP_CLS: string;
            ITEM_CLS: string;
        };
    };
    autofocus: BooleanConstructor;
    clearable: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    customItem: StringConstructor;
    debounce: {
        type: NumberConstructor;
        default: () => number;
    };
    disabled: BooleanConstructor;
    fetchSuggestions: FunctionConstructor;
    hideLoading: BooleanConstructor;
    highlightFirstItem: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    label: StringConstructor;
    maxlength: NumberConstructor;
    minlength: NumberConstructor;
    modelValue: StringConstructor;
    name: StringConstructor;
    placeholder: StringConstructor;
    placement: {
        type: StringConstructor;
        default: () => string;
    };
    popperAppendToBody: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    popperClass: StringConstructor;
    popperOptions: ObjectConstructor;
    prefixIcon: (ObjectConstructor | StringConstructor)[];
    selectWhenUnmatched: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    size: StringConstructor;
    suffixIcon: (ObjectConstructor | StringConstructor)[];
    triggerOnFocus: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    valueKey: {
        type: StringConstructor;
        default: () => string;
    };
    displayOnly: {
        type: BooleanConstructor;
        default: boolean;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    disabled: boolean;
    tiny_mode_root: boolean;
    _constants: Record<string, any>;
    placement: string;
    popperAppendToBody: boolean;
    autofocus: boolean;
    clearable: boolean;
    displayOnly: boolean;
    valueKey: string;
    triggerOnFocus: boolean;
    selectWhenUnmatched: boolean;
    debounce: number;
    hideLoading: boolean;
    highlightFirstItem: boolean;
}, {}>;
export default _default;
