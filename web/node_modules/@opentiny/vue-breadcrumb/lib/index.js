function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
import { defineComponent, $prefix, $setup, $props } from "@opentiny/vue-common";
import PcTemplate from "./pc.js";
import "@opentiny/vue-theme/breadcrumb/index.css";
var template = function template2(mode) {
  var _process$env;
  typeof process === "object" ? (_process$env = process.env) == null ? void 0 : _process$env.TINY_MODE : null;
  return PcTemplate;
};
var $constants = {
  EVENT_NAME: {
    breadcrumbItemSelect: "breadcrumbItemSelect"
  }
};
var breadcrumbProps = _extends({}, $props, {
  _constants: {
    type: Object,
    default: function _default() {
      return $constants;
    }
  },
  separator: {
    type: String,
    default: ">"
  },
  separatorIcon: {
    type: Object
  },
  textField: {
    type: String,
    default: "label"
  },
  options: {
    type: Array,
    default: function _default2() {
      return [];
    }
  }
});
var Breadcrumb = defineComponent({
  name: $prefix + "Breadcrumb",
  props: breadcrumbProps,
  setup: function setup(props, context) {
    return $setup({
      props,
      context,
      template
    });
  }
});
var version = "3.13.0";
Breadcrumb.install = function(Vue) {
  Vue.component(Breadcrumb.name, Breadcrumb);
};
Breadcrumb.version = version;
export {
  Breadcrumb as default
};
