import { renderless, api } from "@opentiny/vue-renderless/button-group/vue";
import { defineComponent, props, setup as _setup } from "@opentiny/vue-common";
import Popover from "@opentiny/vue-popover";
import Button from "@opentiny/vue-button";
import { iconPopup, iconWriting } from "@opentiny/vue-icon";
import { resolveComponent, openBlock, createElementBlock, normalizeClass, renderSlot, Fragment, renderList, createElementVNode, normalizeStyle, toDisplayString, createBlock, resolveDynamicComponent, createCommentVNode, createVNode, withCtx, createTextVNode } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  emits: ["change", "edit", "update:modelValue"],
  props: [].concat(props, ["size", "data", "plain", "modelValue", "disabled", "valueField", "textField", "showMore", "showEdit", "border"]),
  components: {
    TinyPopover: Popover,
    TinyButton: Button,
    IconPopup: iconPopup(),
    IconWriting: iconWriting()
  },
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  key: 0,
  class: "tiny-group-item"
};
var _hoisted_2 = ["onClick"];
var _hoisted_3 = {
  key: 2
};
var _hoisted_4 = {
  key: 1,
  class: "tiny-group-item show-more"
};
var _hoisted_5 = {
  key: 2
};
var _hoisted_6 = {
  key: 0,
  class: "tiny-group-item__more"
};
var _hoisted_7 = {
  class: "more-list"
};
var _hoisted_8 = ["onClick"];
var _hoisted_9 = {
  key: 1,
  class: "tiny-group-item__edit"
};
var _hoisted_10 = {
  key: 1,
  class: "tiny-button-group--empty"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_tiny_button = resolveComponent("tiny-button");
  var _component_icon_popup = resolveComponent("icon-popup");
  var _component_tiny_popover = resolveComponent("tiny-popover");
  var _component_icon_writing = resolveComponent("icon-writing");
  return openBlock(), createElementBlock(
    "div",
    {
      class: normalizeClass(["tiny-button-group", [_ctx.size ? "tiny-button-group--" + _ctx.size : "", _ctx.border ? "" : "tiny-button-group--borderless"]])
    },
    [renderSlot(_ctx.$slots, "default", {}, function() {
      return [_ctx.data.length > 0 ? (openBlock(), createElementBlock(
        Fragment,
        {
          key: 0
        },
        [!(_ctx.showMore && _ctx.showMore > 0) ? (openBlock(), createElementBlock("ul", _hoisted_1, [(openBlock(true), createElementBlock(
          Fragment,
          null,
          renderList(_ctx.data, function(node, index) {
            return openBlock(), createElementBlock(
              "li",
              {
                key: index,
                class: normalizeClass({
                  active: _ctx.state.value === node[_ctx.valueField]
                })
              },
              [createElementVNode("button", {
                class: normalizeClass(_ctx.getItemClass(node)),
                style: normalizeStyle({
                  height: _ctx.size === "medium" ? "42px" : _ctx.size === "small" ? "32px" : _ctx.size === "mini" ? "24px" : "",
                  "line-height": _ctx.size === "medium" ? "40px" : _ctx.size === "small" ? "30px" : _ctx.size === "mini" ? "22px" : ""
                }),
                type: "button",
                onClick: function onClick($event) {
                  return _ctx.handleClick(node);
                }
              }, toDisplayString(node[_ctx.textField]), 15, _hoisted_2), node.sup ? (openBlock(), createElementBlock(
                "span",
                {
                  key: 0,
                  class: normalizeClass(["tiny-group-item__sup", {
                    "tiny-group-item__sup-text": !node.sup.slot && !node.sup.icon && node.sup.text,
                    "tiny-group-item__sup-icon": !node.sup.slot && node.sup.icon
                  }, typeof node.sup.class === "string" ? node.sup.class : ""].concat(Array.isArray(node.sup.class) ? node.sup.class : []))
                },
                [node.sup.slot ? renderSlot(_ctx.$slots, node.sup.slot, {
                  key: 0,
                  sup: node.sup
                }) : node.sup.icon ? (openBlock(), createBlock(resolveDynamicComponent(node.sup.icon), {
                  key: 1
                })) : node.sup.text ? (openBlock(), createElementBlock(
                  "span",
                  _hoisted_3,
                  toDisplayString(node.sup.text),
                  1
                  /* TEXT */
                )) : createCommentVNode("v-if", true)],
                2
                /* CLASS */
              )) : createCommentVNode("v-if", true)],
              2
              /* CLASS */
            );
          }),
          128
          /* KEYED_FRAGMENT */
        ))])) : (openBlock(), createElementBlock("ul", _hoisted_4, [(openBlock(true), createElementBlock(
          Fragment,
          null,
          renderList(_ctx.state.buttonData, function(node, index) {
            return openBlock(), createElementBlock(
              "li",
              {
                key: index,
                class: normalizeClass({
                  active: _ctx.state.value === node[_ctx.valueField]
                })
              },
              [createVNode(_component_tiny_button, {
                class: normalizeClass(_ctx.getItemClass(node)),
                onClick: function onClick($event) {
                  return _ctx.handleClick(node);
                }
              }, {
                default: withCtx(function() {
                  return [createTextVNode(
                    toDisplayString(node[_ctx.textField]),
                    1
                    /* TEXT */
                  )];
                }),
                _: 2
                /* DYNAMIC */
              }, 1032, ["class", "onClick"]), node.sup ? (openBlock(), createElementBlock(
                "span",
                {
                  key: 0,
                  class: normalizeClass(["tiny-group-item__sup", {
                    "tiny-group-item__sup-text": !node.sup.slot && !node.sup.icon && node.sup.text,
                    "tiny-group-item__sup-icon": !node.sup.slot && node.sup.icon
                  }, typeof node.sup.class === "string" ? node.sup.class : ""].concat(Array.isArray(node.sup.class) ? node.sup.class : []))
                },
                [node.sup.slot ? renderSlot(_ctx.$slots, node.sup.slot, {
                  key: 0,
                  sup: node.sup
                }) : node.sup.icon ? (openBlock(), createBlock(resolveDynamicComponent(node.sup.icon), {
                  key: 1
                })) : node.sup.text ? (openBlock(), createElementBlock(
                  "span",
                  _hoisted_5,
                  toDisplayString(node.sup.text),
                  1
                  /* TEXT */
                )) : createCommentVNode("v-if", true)],
                2
                /* CLASS */
              )) : createCommentVNode("v-if", true)],
              2
              /* CLASS */
            );
          }),
          128
          /* KEYED_FRAGMENT */
        )), _ctx.data.length > _ctx.showMore ? (openBlock(), createElementBlock("li", _hoisted_6, [createVNode(_component_tiny_popover, {
          "visible-arrow": false,
          width: "200",
          "popper-class": "tiny-group-item__more-popover"
        }, {
          reference: withCtx(function() {
            return [createVNode(_component_tiny_button, {
              class: "more-button"
            }, {
              default: withCtx(function() {
                return [createVNode(_component_icon_popup)];
              }),
              _: 1
              /* STABLE */
            })];
          }),
          default: withCtx(function() {
            return [createElementVNode("ul", _hoisted_7, [(openBlock(true), createElementBlock(
              Fragment,
              null,
              renderList(_ctx.state.moreData, function(moreNode, index) {
                return openBlock(), createElementBlock("li", {
                  key: index,
                  class: normalizeClass({
                    active: _ctx.state.value === moreNode[_ctx.valueField],
                    "more-item": true
                  }),
                  onClick: function onClick($event) {
                    return _ctx.moreNodeClick(moreNode);
                  }
                }, toDisplayString(moreNode[_ctx.textField]), 11, _hoisted_8);
              }),
              128
              /* KEYED_FRAGMENT */
            ))])];
          }),
          _: 1
          /* STABLE */
        })])) : createCommentVNode("v-if", true), _ctx.showEdit ? (openBlock(), createElementBlock("li", _hoisted_9, [createVNode(_component_tiny_button, {
          onClick: _cache[0] || (_cache[0] = function($event) {
            return _ctx.$emit("edit");
          }),
          class: "edit-button"
        }, {
          default: withCtx(function() {
            return [createVNode(_component_icon_writing)];
          }),
          _: 1
          /* STABLE */
        })])) : createCommentVNode("v-if", true)]))],
        64
        /* STABLE_FRAGMENT */
      )) : (openBlock(), createElementBlock("span", _hoisted_10, " 暂无数据 "))];
    })],
    2
    /* CLASS */
  );
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  pc as default
};
