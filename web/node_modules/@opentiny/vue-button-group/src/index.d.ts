import type { PropType } from 'vue';
import type { IButtonGroupNode } from '@opentiny/vue-renderless/types/button-group.type';
export declare const buttonGroupProps: {
    size: StringConstructor;
    data: {
        type: PropType<IButtonGroupNode[]>;
        default: () => never[];
    };
    plain: BooleanConstructor;
    modelValue: (StringConstructor | NumberConstructor)[];
    disabled: BooleanConstructor;
    valueField: {
        type: StringConstructor;
        default: string;
    };
    textField: {
        type: StringConstructor;
        default: string;
    };
    showMore: NumberConstructor;
    showEdit: {
        type: BooleanConstructor;
        default: boolean;
    };
    border: {
        type: BooleanConstructor;
        default: boolean;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
};
declare const _default: import("@vue/runtime-core").DefineComponent<{
    size: StringConstructor;
    data: {
        type: PropType<IButtonGroupNode[]>;
        default: () => never[];
    };
    plain: BooleanConstructor;
    modelValue: (StringConstructor | NumberConstructor)[];
    disabled: BooleanConstructor;
    valueField: {
        type: StringConstructor;
        default: string;
    };
    textField: {
        type: StringConstructor;
        default: string;
    };
    showMore: NumberConstructor;
    showEdit: {
        type: BooleanConstructor;
        default: boolean;
    };
    border: {
        type: BooleanConstructor;
        default: boolean;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    size: StringConstructor;
    data: {
        type: PropType<IButtonGroupNode[]>;
        default: () => never[];
    };
    plain: BooleanConstructor;
    modelValue: (StringConstructor | NumberConstructor)[];
    disabled: BooleanConstructor;
    valueField: {
        type: StringConstructor;
        default: string;
    };
    textField: {
        type: StringConstructor;
        default: string;
    };
    showMore: NumberConstructor;
    showEdit: {
        type: BooleanConstructor;
        default: boolean;
    };
    border: {
        type: BooleanConstructor;
        default: boolean;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    data: IButtonGroupNode[];
    disabled: boolean;
    tiny_mode_root: boolean;
    border: boolean;
    textField: string;
    valueField: string;
    plain: boolean;
    showEdit: boolean;
}, {}>;
export default _default;
