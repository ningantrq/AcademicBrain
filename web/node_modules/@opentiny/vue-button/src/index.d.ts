export declare const buttonProps: {
    type: {
        type: StringConstructor;
        default: string;
    };
    tabindex: {
        type: StringConstructor;
        default: string;
    };
    icon: {
        type: (ObjectConstructor | StringConstructor)[];
        default: string;
    };
    text: {
        type: StringConstructor;
        default: string;
    };
    resetTime: {
        type: NumberConstructor;
        default: number;
    };
    nativeType: {
        type: StringConstructor;
        default: string;
    };
    size: {
        type: StringConstructor;
        default: string;
        validator(val: string): boolean;
    };
    round: BooleanConstructor;
    plain: BooleanConstructor;
    circle: BooleanConstructor;
    loading: BooleanConstructor;
    disabled: BooleanConstructor;
    autofocus: BooleanConstructor;
    customClass: {
        type: StringConstructor;
        default: string;
    };
    banner: {
        type: BooleanConstructor;
        default: boolean;
    };
    ghost: BooleanConstructor;
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
};
declare const _default: import("@vue/runtime-core").DefineComponent<{
    type: {
        type: StringConstructor;
        default: string;
    };
    tabindex: {
        type: StringConstructor;
        default: string;
    };
    icon: {
        type: (ObjectConstructor | StringConstructor)[];
        default: string;
    };
    text: {
        type: StringConstructor;
        default: string;
    };
    resetTime: {
        type: NumberConstructor;
        default: number;
    };
    nativeType: {
        type: StringConstructor;
        default: string;
    };
    size: {
        type: StringConstructor;
        default: string;
        validator(val: string): boolean;
    };
    round: BooleanConstructor;
    plain: BooleanConstructor;
    circle: BooleanConstructor;
    loading: BooleanConstructor;
    disabled: BooleanConstructor;
    autofocus: BooleanConstructor;
    customClass: {
        type: StringConstructor;
        default: string;
    };
    banner: {
        type: BooleanConstructor;
        default: boolean;
    };
    ghost: BooleanConstructor;
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    type: {
        type: StringConstructor;
        default: string;
    };
    tabindex: {
        type: StringConstructor;
        default: string;
    };
    icon: {
        type: (ObjectConstructor | StringConstructor)[];
        default: string;
    };
    text: {
        type: StringConstructor;
        default: string;
    };
    resetTime: {
        type: NumberConstructor;
        default: number;
    };
    nativeType: {
        type: StringConstructor;
        default: string;
    };
    size: {
        type: StringConstructor;
        default: string;
        validator(val: string): boolean;
    };
    round: BooleanConstructor;
    plain: BooleanConstructor;
    circle: BooleanConstructor;
    loading: BooleanConstructor;
    disabled: BooleanConstructor;
    autofocus: BooleanConstructor;
    customClass: {
        type: StringConstructor;
        default: string;
    };
    banner: {
        type: BooleanConstructor;
        default: boolean;
    };
    ghost: BooleanConstructor;
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    text: string;
    type: string;
    disabled: boolean;
    tiny_mode_root: boolean;
    size: string;
    tabindex: string;
    round: boolean;
    icon: string | Record<string, any>;
    circle: boolean;
    resetTime: number;
    nativeType: string;
    plain: boolean;
    loading: boolean;
    autofocus: boolean;
    customClass: string;
    banner: boolean;
    ghost: boolean;
}, {}>;
export default _default;
