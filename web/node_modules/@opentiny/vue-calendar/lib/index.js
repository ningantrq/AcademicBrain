function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
import { defineComponent, $prefix, $props, $setup } from "@opentiny/vue-common";
import PcTemplate from "./pc.js";
import "@opentiny/vue-theme/calendar/index.css";
var template = function template2(mode) {
  var _process$env;
  typeof process === "object" ? (_process$env = process.env) == null ? void 0 : _process$env.TINY_MODE : null;
  return PcTemplate;
};
var Calendar = defineComponent({
  name: $prefix + "Calendar",
  props: _extends({}, $props, {
    /**
     * @property {String} [mode='month'] - 显示模式，month|year 可选
     */
    mode: {
      type: String,
      default: "month",
      validator: function validator(value) {
        return Boolean(~["month", "year"].indexOf(value));
      }
    },
    /**
     * @property {Number} [year=getFullYear()] - 指定年份，默认今年
     */
    year: {
      type: Number,
      default: function _default() {
        return (/* @__PURE__ */ new Date()).getFullYear();
      }
    },
    /**
     * @property {Number} [month=getMonth()] - 指定月份，默认当月
     */
    month: {
      type: Number,
      default: function _default2() {
        return (/* @__PURE__ */ new Date()).getMonth() + 1;
      }
    },
    /**
     * @property {Array} events - 事件列表
     * @example
     * [{ time: 1534297845236, title: '消息', content: '这是一条消息', type: 'primary' },
     * { time: 1534297845236, title: '消息', content: '还有', type: 'info' }]
     * type 类型： warning、error、info、success
     */
    events: Array,
    /**
     * @property {Boolean} [showSelected=false] - 显示选中的日期
     */
    showSelected: Boolean
  }),
  setup: function setup(props, context) {
    return $setup({
      props,
      context,
      template
    });
  }
});
var version = "3.13.0";
Calendar.install = function(Vue) {
  Vue.component(Calendar.name, Calendar);
};
Calendar.version = version;
export {
  Calendar as default
};
