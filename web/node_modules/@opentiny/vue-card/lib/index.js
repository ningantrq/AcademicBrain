function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
import { renderless, api } from "@opentiny/vue-renderless/card/vue";
import { defineComponent, $prefix, $props, setup as _setup } from "@opentiny/vue-common";
import Dropdown from "@opentiny/vue-dropdown";
import DropdownMenu from "@opentiny/vue-dropdown-menu";
import DropdownItem from "@opentiny/vue-dropdown-item";
import Checkbox from "@opentiny/vue-checkbox";
import Radio from "@opentiny/vue-radio";
import { IconEllipsis } from "@opentiny/vue-icon";
import { resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, createVNode, createCommentVNode, withCtx, renderSlot, toDisplayString, normalizeStyle, Fragment, renderList, withModifiers, createBlock, resolveDynamicComponent } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var classes = {
  "card": "overflow-hidden bg-color-bg-1 border hover:shadow",
  "size-large": "rounded-lg min-w-[theme(spacing.54)]",
  "size-medium": "rounded-lg min-w-[theme(spacing.54)]",
  "size-small": "rounded-lg min-w-[theme(spacing.54)]",
  "size-mini": "rounded min-w-[theme(spacing.54)]",
  "size-large-padding": "p-4",
  "size-medium-padding": "p-3",
  "size-small-padding": "p-3",
  "size-mini-padding": "p-2",
  "size-large-width": "w-144",
  "size-medium-width": "w-96",
  "size-small-width": "w-72",
  "size-mini-width": "w-44",
  "status-success": "border-color-success",
  "status-warning": "border-color-warning",
  "status-alerting": "border-color-alert",
  "status-danger": "border-color-error",
  "status-default": "border-color-border-separator",
  "title": "text-base sm:text-sm mb-3 leading-5.5 text-color-text-primary mr-2",
  "checkbox": "relative left-1 pt-3 sm:pt-3.5 pl-2 [&_[data-tag=tiny-checkbox]]:p-0 [&_[data-tag=tiny-checkbox]>span>span]:p-0 [&_[data-tag=tiny-checkbox]>span:nth-child(2)]:hidden",
  "radio": "relative left-0 sm:left-3 pt-0 sm:pt-3 [&_[role=radio]_span_span]:pr-0",
  "logo": "flex mb-3 py-2 w-full justify-center items-center aspect-[5_/_2] overflow-hidden",
  "main": "text-sm sm:text-xs text-color-text-secondary overflow-y-auto",
  "footer": "p-3 border-t border-t-color-border-separator",
  "options": "w-full px-3 h-11 flex items-center justify-around text-color-text-primary border-t border-t-color-border-separator"
};
var $constants = {
  CARD_GROUP: "CardGroup"
};
var _sfc_main = defineComponent({
  name: $prefix + "Card",
  emits: ["icon-click", "update:modelValue", "change"],
  components: {
    TinyDropdown: Dropdown,
    TinyDropdownMenu: DropdownMenu,
    TinyDropdownItem: DropdownItem,
    TinyCheckbox: Checkbox,
    TinyRadio: Radio,
    IconEllipsis: IconEllipsis()
  },
  props: _extends({}, $props, {
    _constants: {
      type: Object,
      default: function _default() {
        return $constants;
      }
    },
    modelValue: {},
    src: String,
    title: String,
    customClass: String,
    height: String,
    label: {},
    autoWidth: {
      type: Boolean,
      default: false
    },
    options: {
      type: Array,
      default: function _default2() {
        return [];
      }
    },
    iconMore: {
      type: [Object, String],
      default: function _default3() {
        return IconEllipsis();
      }
    },
    size: {
      type: String,
      default: "medium"
    },
    status: {
      type: String,
      default: "default"
    },
    checkType: {
      type: String,
      default: ""
    },
    type: {
      type: String,
      default: "text"
    },
    disabled: {
      type: Boolean,
      default: false
    }
  }),
  setup: function setup(props, context) {
    return _setup({
      props,
      context,
      renderless,
      api,
      classes,
      mono: true
    });
  }
});
var _hoisted_1 = /* @__PURE__ */ createElementVNode(
  "span",
  null,
  null,
  -1
  /* HOISTED */
);
var _hoisted_2 = {
  key: 2,
  "data-tag": "tiny-card-image"
};
var _hoisted_3 = ["src"];
var _hoisted_4 = {
  key: 3,
  "data-tag": "tiny-card-vadio"
};
var _hoisted_5 = ["src"];
var _hoisted_6 = ["src"];
var _hoisted_7 = {
  key: 0,
  "data-tag": "tiny-card-footer",
  class: "w-full"
};
var _hoisted_8 = ["onClick"];
var _hoisted_9 = {
  key: 0,
  class: "ml-1 align-middle"
};
var _hoisted_10 = {
  key: 0,
  class: "ml-1 align-middle"
};
var _hoisted_11 = {
  key: 0,
  class: "ml-1 text-color-text-primary"
};
var _hoisted_12 = ["onClick"];
var _hoisted_13 = {
  key: 0
};
function _sfc_render(_ctx, _cache, $props2, $setup, $data, $options) {
  var _component_tiny_checkbox = resolveComponent("tiny-checkbox");
  var _component_tiny_radio = resolveComponent("tiny-radio");
  var _component_tiny_dropdown_item = resolveComponent("tiny-dropdown-item");
  var _component_tiny_dropdown_menu = resolveComponent("tiny-dropdown-menu");
  var _component_tiny_dropdown = resolveComponent("tiny-dropdown");
  return openBlock(), createElementBlock(
    "div",
    {
      "data-tag": "tiny-card",
      class: normalizeClass(_ctx.m(_ctx.gcls("card"), _ctx.gcls("size-" + _ctx.state.size), _ctx.gcls("status-" + _ctx.state.status), _ctx.gcls(!_ctx.state.autoWidth && "size-" + _ctx.state.size + "-width"), _ctx.state.itemChecked ? "border-color-brand" : "", _ctx.state.disabled ? "bg-color-bg-2" : "", _ctx.state.customClass)),
      onClick: _cache[3] || (_cache[3] = function($event) {
        return _ctx.$emit("click", $event);
      })
    },
    [createElementVNode(
      "div",
      {
        "data-tag": "tiny-card-body",
        class: normalizeClass([_ctx.state.type === "text" ? "flex" : "block"])
      },
      [_ctx.state.checkType === "checkbox" && _ctx.state.type === "text" ? (openBlock(), createElementBlock(
        "div",
        {
          key: 0,
          "data-tag": "tiny-card-checkbox",
          class: normalizeClass(_ctx.gcls("checkbox"))
        },
        [createVNode(_component_tiny_checkbox, {
          modelValue: _ctx.state.model,
          "onUpdate:modelValue": _cache[0] || (_cache[0] = function($event) {
            return _ctx.state.model = $event;
          }),
          label: _ctx.label,
          disabled: _ctx.state.disabled,
          onChange: _ctx.handleChange
        }, null, 8, ["modelValue", "label", "disabled", "onChange"])],
        2
        /* CLASS */
      )) : createCommentVNode("v-if", true), _ctx.state.checkType === "radio" && _ctx.state.type === "text" ? (openBlock(), createElementBlock(
        "div",
        {
          key: 1,
          "data-tag": "tiny-card-radio",
          class: normalizeClass(_ctx.gcls("radio"))
        },
        [createVNode(_component_tiny_radio, {
          modelValue: _ctx.state.model,
          "onUpdate:modelValue": _cache[1] || (_cache[1] = function($event) {
            return _ctx.state.model = $event;
          }),
          label: _ctx.label,
          disabled: _ctx.state.disabled,
          onChange: _ctx.handleChange
        }, {
          default: withCtx(function() {
            return [_hoisted_1];
          }),
          _: 1
          /* STABLE */
        }, 8, ["modelValue", "label", "disabled", "onChange"])],
        2
        /* CLASS */
      )) : createCommentVNode("v-if", true), _ctx.state.type === "image" ? (openBlock(), createElementBlock("div", _hoisted_2, [createElementVNode("img", {
        src: _ctx.src,
        class: "w-full aspect-video bg-cover"
      }, null, 8, _hoisted_3)])) : createCommentVNode("v-if", true), _ctx.state.type === "video" ? (openBlock(), createElementBlock("div", _hoisted_4, [createElementVNode("video", {
        class: "w-full aspect-video",
        src: _ctx.src,
        controls: ""
      }, null, 8, _hoisted_5)])) : createCommentVNode("v-if", true), createElementVNode(
        "div",
        {
          "data-tag": "tiny-card-logo",
          class: normalizeClass(["flex-1", _ctx.gcls("size-" + _ctx.state.size + "-padding")])
        },
        [_ctx.state.type === "logo" ? (openBlock(), createElementBlock(
          "div",
          {
            key: 0,
            class: normalizeClass(_ctx.gcls("logo"))
          },
          [createElementVNode("img", {
            src: _ctx.src,
            class: "bg-contain"
          }, null, 8, _hoisted_6)],
          2
          /* CLASS */
        )) : createCommentVNode("v-if", true), _ctx.title || _ctx.slots.title ? (openBlock(), createElementBlock(
          "div",
          {
            key: 1,
            "data-tag": "tiny-card-title",
            class: normalizeClass(["flex items-start", [_ctx.state.type === "logo" && "text-center justify-center mb-1"]])
          },
          [renderSlot(_ctx.$slots, "title-left"), renderSlot(_ctx.$slots, "title", {}, function() {
            return [createElementVNode(
              "p",
              {
                class: normalizeClass(_ctx.gcls("title"))
              },
              toDisplayString(_ctx.title),
              3
              /* TEXT, CLASS */
            )];
          }), renderSlot(_ctx.$slots, "title-right")],
          2
          /* CLASS */
        )) : createCommentVNode("v-if", true), createElementVNode(
          "div",
          {
            "data-tag": "tiny-card-main",
            class: normalizeClass(_ctx.m(_ctx.gcls("main"), _ctx.state.type === "logo" ? "text-center pb-2" : "")),
            style: normalizeStyle({
              height: _ctx.state.height
            })
          },
          [renderSlot(_ctx.$slots, "default")],
          6
          /* CLASS, STYLE */
        )],
        2
        /* CLASS */
      )],
      2
      /* CLASS */
    ), _ctx.state.effectOptions.length || _ctx.slots.footer ? (openBlock(), createElementBlock("div", _hoisted_7, [_ctx.slots.footer ? (openBlock(), createElementBlock(
      "div",
      {
        key: 0,
        class: normalizeClass(_ctx.gcls("footer"))
      },
      [renderSlot(_ctx.$slots, "footer")],
      2
      /* CLASS */
    )) : createCommentVNode("v-if", true), _ctx.state.effectOptions.length ? (openBlock(), createElementBlock(
      "div",
      {
        key: 1,
        class: normalizeClass(_ctx.gcls("options"))
      },
      [(openBlock(true), createElementBlock(
        Fragment,
        null,
        renderList(_ctx.state.effectOptions.slice(0, _ctx.state.sliceNum), function(item, index) {
          return openBlock(), createElementBlock("div", {
            class: normalizeClass(["cursor-pointer", [item.disabled ? "text-color-text-disabled cursor-not-allowed" : ""]]),
            key: item.text + index,
            onClick: withModifiers(function($event) {
              return _ctx.handelIconClick(item, index, $event);
            }, ["stop"])
          }, [(openBlock(), createBlock(resolveDynamicComponent(item.icon), {
            class: normalizeClass(["w-4 h-4", [item.disabled ? "fill-color-icon-disabled" : ""]])
          }, null, 8, ["class"])), item.text ? (openBlock(), createElementBlock(
            "span",
            _hoisted_9,
            toDisplayString(item.text),
            1
            /* TEXT */
          )) : createCommentVNode("v-if", true)], 10, _hoisted_8);
        }),
        128
        /* KEYED_FRAGMENT */
      )), _ctx.state.effectOptions.length === _ctx.state.iconNum ? (openBlock(), createElementBlock(
        "div",
        {
          key: 0,
          class: normalizeClass(["cursor-pointer", [_ctx.state.effectOptions[_ctx.state.sliceNum].disabled ? "text-color-text-disabled cursor-not-allowed" : ""]]),
          onClick: _cache[2] || (_cache[2] = withModifiers(function($event) {
            return _ctx.handelIconClick(_ctx.state.effectOptions[_ctx.state.sliceNum], _ctx.state.sliceNum, $event);
          }, ["stop"]))
        },
        [(openBlock(), createBlock(resolveDynamicComponent(_ctx.state.effectOptions[_ctx.state.sliceNum].icon), {
          class: normalizeClass(["w-4 h-4", [_ctx.state.effectOptions[_ctx.state.sliceNum].disabled ? "fill-color-icon-disabled" : ""]])
        }, null, 8, ["class"])), _ctx.state.effectOptions[_ctx.state.sliceNum].text ? (openBlock(), createElementBlock(
          "span",
          _hoisted_10,
          toDisplayString(_ctx.state.effectOptions[_ctx.state.sliceNum].text),
          1
          /* TEXT */
        )) : createCommentVNode("v-if", true)],
        2
        /* CLASS */
      )) : createCommentVNode("v-if", true), _ctx.state.effectOptions.length > _ctx.state.iconNum ? (openBlock(), createBlock(_component_tiny_dropdown, {
        key: 1,
        "show-self-icon": ""
      }, {
        dropdown: withCtx(function() {
          return [createVNode(_component_tiny_dropdown_menu, {
            placement: "bottom"
          }, {
            default: withCtx(function() {
              return [(openBlock(true), createElementBlock(
                Fragment,
                null,
                renderList(_ctx.state.effectOptions.slice(_ctx.state.sliceNum), function(item, index) {
                  return openBlock(), createBlock(
                    _component_tiny_dropdown_item,
                    {
                      key: item.text + index
                    },
                    {
                      default: withCtx(function() {
                        return [createElementVNode("div", {
                          onClick: withModifiers(function($event) {
                            return _ctx.handelIconClick(item, index + _ctx.state.sliceNum, $event);
                          }, ["stop"]),
                          class: normalizeClass(["px-2", item.disabled ? "text-color-text-disabled cursor-not-allowed" : ""])
                        }, [(openBlock(), createBlock(resolveDynamicComponent(item.icon), {
                          class: normalizeClass(["w-4 h-4", [item.disabled ? "fill-color-icon-disabled" : ""]])
                        }, null, 8, ["class"])), item.text ? (openBlock(), createElementBlock(
                          "span",
                          _hoisted_13,
                          toDisplayString(item.text),
                          1
                          /* TEXT */
                        )) : createCommentVNode("v-if", true)], 10, _hoisted_12)];
                      }),
                      _: 2
                      /* DYNAMIC */
                    },
                    1024
                    /* DYNAMIC_SLOTS */
                  );
                }),
                128
                /* KEYED_FRAGMENT */
              ))];
            }),
            _: 1
            /* STABLE */
          })];
        }),
        default: withCtx(function() {
          return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.iconMore), {
            class: "w-4 h-4"
          })), _ctx.state.effectOptions[0].text ? (openBlock(), createElementBlock(
            "span",
            _hoisted_11,
            toDisplayString(_ctx.t("ui.base.more")),
            1
            /* TEXT */
          )) : createCommentVNode("v-if", true)];
        }),
        _: 1
        /* STABLE */
      })) : createCommentVNode("v-if", true)],
      2
      /* CLASS */
    )) : createCommentVNode("v-if", true)])) : createCommentVNode("v-if", true)],
    2
    /* CLASS */
  );
}
var Card = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
var version = "3.13.0";
Card.model = {
  prop: "modelValue",
  event: "update:modelValue"
};
Card.install = function(Vue) {
  Vue.component(Card.name, Card);
};
Card.version = version;
export {
  Card as default
};
