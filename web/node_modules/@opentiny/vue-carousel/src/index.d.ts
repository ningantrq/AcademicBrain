declare const _default: import("@vue/runtime-core").DefineComponent<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            CHILD_NAME: string;
        };
    };
    initialIndex: {
        type: NumberConstructor;
        default: number;
    };
    height: StringConstructor;
    trigger: {
        type: StringConstructor;
        default: string;
    };
    autoplay: {
        type: BooleanConstructor;
        default: boolean;
    };
    interval: {
        type: NumberConstructor;
        default: number;
    };
    loop: {
        type: BooleanConstructor;
        default: boolean;
    };
    indicatorPosition: StringConstructor;
    arrow: {
        type: StringConstructor;
        default: string;
    };
    type: {
        type: StringConstructor;
        default: string;
        validator: (value: string) => boolean;
    };
    showTitle: {
        type: BooleanConstructor;
        default: boolean;
    };
    aspectRatio: {
        type: StringConstructor;
        default: string;
    };
    indicatorStyle: {
        type: StringConstructor;
        default: string;
        validator: (value: string) => boolean;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            CHILD_NAME: string;
        };
    };
    initialIndex: {
        type: NumberConstructor;
        default: number;
    };
    height: StringConstructor;
    trigger: {
        type: StringConstructor;
        default: string;
    };
    autoplay: {
        type: BooleanConstructor;
        default: boolean;
    };
    interval: {
        type: NumberConstructor;
        default: number;
    };
    loop: {
        type: BooleanConstructor;
        default: boolean;
    };
    indicatorPosition: StringConstructor;
    arrow: {
        type: StringConstructor;
        default: string;
    };
    type: {
        type: StringConstructor;
        default: string;
        validator: (value: string) => boolean;
    };
    showTitle: {
        type: BooleanConstructor;
        default: boolean;
    };
    aspectRatio: {
        type: StringConstructor;
        default: string;
    };
    indicatorStyle: {
        type: StringConstructor;
        default: string;
        validator: (value: string) => boolean;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    type: string;
    tiny_mode_root: boolean;
    _constants: Record<string, any>;
    trigger: string;
    arrow: string;
    aspectRatio: string;
    showTitle: boolean;
    initialIndex: number;
    autoplay: boolean;
    interval: number;
    indicatorStyle: string;
    loop: boolean;
}, {}>;
export default _default;
