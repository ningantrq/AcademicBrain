import type { ICascaderPanelApi } from '@opentiny/vue-renderless/types/cascader-panel.type';
declare const _default: import("@vue/runtime-core").DefineComponent<{
    modelValue: {};
    options: ArrayConstructor;
    props: ObjectConstructor;
    border: {
        type: BooleanConstructor;
        default: boolean;
    };
    renderLabel: FunctionConstructor;
}, ICascaderPanelApi, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, ("update:modelValue" | "close" | "change" | "expand-change" | "active-item-change")[], "update:modelValue" | "close" | "change" | "expand-change" | "active-item-change", import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    modelValue: {};
    options: ArrayConstructor;
    props: ObjectConstructor;
    border: {
        type: BooleanConstructor;
        default: boolean;
    };
    renderLabel: FunctionConstructor;
}>> & {
    onChange?: ((...args: any[]) => any) | undefined;
    onClose?: ((...args: any[]) => any) | undefined;
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
    "onExpand-change"?: ((...args: any[]) => any) | undefined;
    "onActive-item-change"?: ((...args: any[]) => any) | undefined;
}, {
    border: boolean;
}, {}>;
export default _default;
