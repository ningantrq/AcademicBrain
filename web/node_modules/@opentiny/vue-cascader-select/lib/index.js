function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
import { $prefix, $props, $setup } from "@opentiny/vue-common";
import MobileFirstTemplate from "./mobile-first.js";
var $constants = {};
var template = function template2() {
  return MobileFirstTemplate;
};
var CascaderSelect = {
  name: $prefix + "CascaderSelect",
  props: _extends({}, $props, {
    _constants: {
      type: Object,
      default: function _default() {
        return $constants;
      }
    },
    modelValue: Array,
    options: Array,
    visible: Boolean,
    cycleRoll: Boolean,
    valueType: {
      type: String,
      default: "number"
    },
    valueField: {
      type: String,
      default: "id"
    },
    textField: {
      type: String,
      default: "label"
    },
    disabled: Function,
    textColor: {
      type: Object,
      default: function _default2() {
        return {};
      }
    }
  }),
  setup: function setup(props, context) {
    return $setup({
      props,
      context,
      template
    });
  }
};
var version = "3.13.0";
CascaderSelect.model = {
  prop: "modelValue",
  event: "update:modelValue"
};
CascaderSelect.install = function(Vue) {
  Vue.component(CascaderSelect.name, CascaderSelect);
};
CascaderSelect.version = version;
export {
  CascaderSelect as default
};
