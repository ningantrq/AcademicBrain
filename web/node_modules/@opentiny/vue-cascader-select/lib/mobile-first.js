import { renderless, api } from "@opentiny/vue-renderless/cascader-select/vue";
import { defineComponent, props, setup as _setup } from "@opentiny/vue-common";
import ActionSheet from "@opentiny/vue-action-sheet";
import Button from "@opentiny/vue-button";
import { resolveComponent, openBlock, createBlock, withCtx, createElementVNode, withModifiers, normalizeClass, createElementBlock, Fragment, renderList, renderSlot, normalizeProps, guardReactiveProps, createTextVNode, toDisplayString, createVNode } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  emits: ["update:modelValue", "update:visible"],
  props: [].concat(props, ["modelValue", "options", "visible", "cycleRoll", "valueType", "valueField", "textField", "disabled", "textColor"]),
  components: {
    TinyActionSheet: ActionSheet,
    TinyButton: Button
  },
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = ["onTouchend", "onTouchmove"];
var _hoisted_2 = ["date-status", "data-option"];
var _hoisted_3 = {
  class: "w-full h-11 mt-4 flex justify-center items-center"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_tiny_button = resolveComponent("tiny-button");
  var _component_tiny_action_sheet = resolveComponent("tiny-action-sheet");
  return openBlock(), createBlock(_component_tiny_action_sheet, {
    "data-tag": "tiny-mobile-cascader-select",
    "content-class": "rounded-t-lg bg-white",
    visible: _ctx.state.actionSheetVisible,
    "onUpdate:visible": _cache[2] || (_cache[2] = function($event) {
      return _ctx.state.actionSheetVisible = $event;
    })
  }, {
    default: withCtx(function() {
      return [createElementVNode("div", {
        class: "w-full h-max rounded-t-lg bg-white select-none overflow-hidden",
        onClick: _cache[1] || (_cache[1] = withModifiers(function() {
        }, ["stop"]))
      }, [createElementVNode(
        "div",
        {
          ref: "selectPanel",
          class: normalizeClass(["w-full h-max grid", {
            "grid-cols-1": _ctx.state.selectorCount === 1
          }, {
            "grid-cols-2": _ctx.state.selectorCount === 2
          }, {
            "grid-cols-3": _ctx.state.selectorCount === 3
          }])
        },
        [(openBlock(true), createElementBlock(
          Fragment,
          null,
          renderList(_ctx.state.selectorCount, function(v, i) {
            return openBlock(), createElementBlock("div", {
              key: "s" + i,
              class: "h-40",
              style: {
                "transform": "translate3d(0, 0, 0)"
              },
              onTouchstart: _cache[0] || (_cache[0] = withModifiers(function() {
                return _ctx.handleTouchstart && _ctx.handleTouchstart.apply(_ctx, arguments);
              }, ["prevent"])),
              onTouchend: withModifiers(function($event) {
                return _ctx.handleTouchend($event, i);
              }, ["prevent"]),
              onTouchmove: withModifiers(function($event) {
                return _ctx.throttledHandleTouchmove($event, i);
              }, ["prevent"])
            }, [(openBlock(true), createElementBlock(
              Fragment,
              null,
              renderList(_ctx.state["selector" + i].visibleOptions, function(option, j) {
                var _ctx$m, _ctx$m2, _ctx$m3, _ctx$m4;
                return openBlock(), createElementBlock("div", {
                  "data-tag": "tiny-mobile-cs-option",
                  "date-status": _ctx.statusOpt(option),
                  "data-option": option[_ctx.valueField],
                  key: "s" + i + "o" + j,
                  class: normalizeClass(_ctx.m("w-full h-8 flex justify-center items-center cursor-pointer relative", {
                    "text-xs": _ctx.styleOpt(option) === 2
                  }, {
                    "text-sm": _ctx.styleOpt(option) === 1
                  }, {
                    "text-base": _ctx.styleOpt(option) === 0
                  }, (_ctx$m = {}, _ctx$m[_ctx.textColor.third || "text-color-icon-placeholder"] = _ctx.styleOpt(option) === 2, _ctx$m), (_ctx$m2 = {}, _ctx$m2[_ctx.textColor.second || "text-color-icon-secondary"] = _ctx.styleOpt(option) === 1, _ctx$m2), (_ctx$m3 = {}, _ctx$m3[_ctx.textColor.first || "text-color-icon-focus"] = _ctx.styleOpt(option) === 0, _ctx$m3), (_ctx$m4 = {}, _ctx$m4[_ctx.textColor.disabled || "text-color-icon-disabled"] = _ctx.statusOpt(option) === "disabled", _ctx$m4)))
                }, [renderSlot(_ctx.$slots, "option", normalizeProps(guardReactiveProps({
                  i,
                  j,
                  option
                })), function() {
                  return [createTextVNode(
                    toDisplayString(option[_ctx.textField]),
                    1
                    /* TEXT */
                  )];
                })], 10, _hoisted_2);
              }),
              128
              /* KEYED_FRAGMENT */
            ))], 40, _hoisted_1);
          }),
          128
          /* KEYED_FRAGMENT */
        ))],
        2
        /* CLASS */
      ), createElementVNode("div", _hoisted_3, [createVNode(_component_tiny_button, {
        type: "primary",
        size: "large",
        "button-class": _ctx.m("h-10 sm:h-10 mx-4 flex justify-center items-center", _ctx.state.confirmDisabled ? "bg-color-icon-disabled" : "bg-color-icon-focus"),
        disabled: _ctx.state.confirmDisabled,
        onClick: _ctx.confirm
      }, {
        default: withCtx(function() {
          return [createTextVNode(
            toDisplayString(_ctx.t("ui.button.confirm")),
            1
            /* TEXT */
          )];
        }),
        _: 1
        /* STABLE */
      }, 8, ["button-class", "disabled", "onClick"])])])];
    }),
    _: 3
    /* FORWARDED */
  }, 8, ["visible"]);
}
var mobileFirst = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  mobileFirst as default
};
