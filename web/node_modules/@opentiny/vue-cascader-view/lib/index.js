function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
import { renderless, api } from "@opentiny/vue-renderless/cascader-view/vue";
import { defineComponent, $prefix, $props, setup as _setup } from "@opentiny/vue-common";
import { iconChevronRight, iconChevronUp, iconChevronDown, iconSearch, iconOperationfaild, iconChevronLeft } from "@opentiny/vue-icon";
import Button from "@opentiny/vue-button";
import ActionSheet from "@opentiny/vue-action-sheet";
import Exception from "@opentiny/vue-exception";
import Checkbox from "@opentiny/vue-checkbox";
import { resolveComponent, openBlock, createElementBlock, withModifiers, createVNode, createCommentVNode, createElementVNode, normalizeClass, renderSlot, toDisplayString, withCtx, withDirectives, withKeys, vModelText, Fragment, renderList, vShow, createTextVNode, createBlock } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main$1 = {
  emits: ["click"],
  components: {
    TinyCheckbox: Checkbox,
    IconChevronRight: iconChevronRight()
  },
  props: ["selected", "ellipsis", "option", "textField", "textField2", "textField3", "loading"],
  computed: {
    data: function data() {
      return this.option.data || this.option;
    }
  }
};
var _hoisted_1$1 = /* @__PURE__ */ createElementVNode(
  "div",
  {
    class: "absolute left-0 right-0 top-0 bottom-0 z-10"
  },
  null,
  -1
  /* HOISTED */
);
var _hoisted_2$1 = {
  class: "flex"
};
var _hoisted_3$1 = {
  key: 0,
  class: "flex flex-none w-8 items-center justify-end ml-2"
};
var _hoisted_4$1 = {
  key: 1,
  class: "flex flex-none w-5 items-center justify-center ml-2"
};
var _hoisted_5$1 = /* @__PURE__ */ createElementVNode(
  "svg",
  {
    class: "animate-[spin_1.5s_linear_infinite] fill-current",
    viewBox: "25 25 50 50"
  },
  [/* @__PURE__ */ createElementVNode("circle", {
    class: "stroke-color-brand tiny-loading-path",
    cx: "50",
    cy: "50",
    r: "24",
    fill: "none"
  })],
  -1
  /* HOISTED */
);
var _hoisted_6$1 = [_hoisted_5$1];
function _sfc_render$1(_ctx, _cache, $props2, $setup, $data, $options) {
  var _component_tiny_checkbox = resolveComponent("tiny-checkbox");
  var _component_IconChevronRight = resolveComponent("IconChevronRight");
  return openBlock(), createElementBlock("div", {
    class: "flex items-start leading-6 cursor-pointer select-none",
    onClick: _cache[2] || (_cache[2] = function($event) {
      return _ctx.$emit("click", $event);
    })
  }, [$props2.option ? (openBlock(), createElementBlock("span", {
    key: 0,
    class: "w-11 h-11 flex-none flex items-center justify-center relative",
    onClick: _cache[0] || (_cache[0] = withModifiers(function($event) {
      return _ctx.$emit("check", $props2.option);
    }, ["stop"]))
  }, [_hoisted_1$1, createVNode(_component_tiny_checkbox, {
    "custom-class": "flex h-full w-full items-center justify-center",
    checked: !$props2.option.indeterminate && $props2.option.checked,
    indeterminate: $props2.option.indeterminate,
    disabled: $options.data.disabled
  }, null, 8, ["checked", "indeterminate", "disabled"])])) : createCommentVNode("v-if", true), createElementVNode(
    "div",
    {
      class: normalizeClass(["flex-auto flex w-full text-sm py-3", {
        "truncate": $props2.ellipsis
      }]),
      onClick: _cache[1] || (_cache[1] = withModifiers(function($event) {
        return _ctx.$emit("expand", $props2.option);
      }, ["stop"]))
    },
    [renderSlot(_ctx.$slots, "default", {}, function() {
      return [createElementVNode(
        "div",
        {
          class: normalizeClass(["flex-auto", {
            "truncate": $props2.ellipsis
          }])
        },
        [createElementVNode("div", _hoisted_2$1, [createElementVNode(
          "div",
          {
            class: normalizeClass([{
              "min-w-[theme(spacing.14)]": !$props2.textField3
            }, {
              "truncate": $props2.ellipsis
            }])
          },
          toDisplayString($options.data[$props2.textField]),
          3
          /* TEXT, CLASS */
        ), $props2.textField2 ? (openBlock(), createElementBlock(
          "div",
          {
            key: 0,
            class: normalizeClass(["ml-5 text-color-text-placeholder", {
              "truncate": $props2.ellipsis
            }])
          },
          toDisplayString($options.data[$props2.textField2]),
          3
          /* TEXT, CLASS */
        )) : createCommentVNode("v-if", true)]), $props2.textField3 ? (openBlock(), createElementBlock(
          "div",
          {
            key: 0,
            class: normalizeClass(["text-color-text-placeholder", {
              "truncate": $props2.ellipsis
            }])
          },
          toDisplayString($options.data[$props2.textField3]),
          3
          /* TEXT, CLASS */
        )) : createCommentVNode("v-if", true)],
        2
        /* CLASS */
      ), !$props2.loading && !$props2.option.isLeaf ? (openBlock(), createElementBlock("div", _hoisted_3$1, [createVNode(_component_IconChevronRight, {
        "custom-class": "w-4 h-4 fill-current"
      })])) : createCommentVNode("v-if", true), $props2.option.loading ? (openBlock(), createElementBlock("div", _hoisted_4$1, _hoisted_6$1)) : createCommentVNode("v-if", true)];
    })],
    2
    /* CLASS */
  )]);
}
var Option = /* @__PURE__ */ _export_sfc(_sfc_main$1, [["render", _sfc_render$1]]);
var $constants = {
  defaultNodeConfig: {
    lazy: false,
    load: null,
    isLeaf: "leaf",
    afterLoad: null,
    currentNodeKey: null,
    checkStrictly: false,
    checkDescendants: null,
    defaultCheckedKeys: null,
    defaultExpandedKeys: null,
    autoExpandParent: null,
    defaultExpandAll: null,
    filterNodeMethod: null
  }
};
var _sfc_main = defineComponent({
  name: $prefix + "CascaderView",
  emits: ["click", "update:text", "update:visible", "close", "update:modelValue", "search-click", "confirm"],
  components: {
    TinyOption: Option,
    TinyActionSheet: ActionSheet,
    TinyButton: Button,
    TinyException: Exception,
    IconChevronRight: iconChevronRight(),
    IconChevronUp: iconChevronUp(),
    IconChevronDown: iconChevronDown(),
    IconSearch: iconSearch(),
    IconOperationfaild: iconOperationfaild(),
    IconChevronLeft: iconChevronLeft()
  },
  props: _extends({}, $props, {
    _constants: {
      type: Object,
      default: function _default() {
        return $constants;
      }
    },
    data: {
      type: Array,
      default: function _default2() {
        return [];
      }
    },
    modelValue: [Number, String, Array],
    visible: {
      type: Boolean,
      default: false
    },
    valueField: {
      type: String,
      default: "id"
    },
    textField: {
      type: String,
      default: "label"
    },
    textField2: {
      type: String,
      default: ""
    },
    textField3: {
      type: String,
      default: ""
    },
    title: String,
    textSplit: {
      type: String,
      default: "; "
    },
    showHeader: {
      type: Boolean,
      default: true
    },
    customClass: [String, Object, Array],
    mask: {
      type: Boolean,
      default: true
    },
    ellipsis: {
      type: Boolean,
      default: false
    },
    searchConfig: {
      type: Object,
      default: function _default3() {
        return {
          options: [],
          searchMethod: null,
          openSearchSlot: false
        };
      }
    },
    childrenField: {
      type: String,
      default: "children"
    },
    nodeConfig: {
      type: Object,
      default: function _default4() {
        return $constants.defaultNodeConfig;
      }
    },
    lockScroll: {
      type: Boolean,
      default: true
    },
    emitPath: {
      type: Boolean,
      default: true
    }
  }),
  setup: function setup(props, context) {
    return _setup({
      props,
      context,
      renderless,
      api,
      mono: true
    });
  }
});
var _hoisted_1 = {
  "data-tag": "tiny-cascader-view"
};
var _hoisted_2 = /* @__PURE__ */ createElementVNode(
  "div",
  null,
  null,
  -1
  /* HOISTED */
);
var _hoisted_3 = {
  "data-tag": "search-header",
  class: "flex leading-6 pb-4 px-4 text-base items-center border-b-0.5 border-color-border-separator"
};
var _hoisted_4 = {
  class: "flex-auto flex items-center h-8 py-1 px-3 bg-color-bg-4 rounded"
};
var _hoisted_5 = ["placeholder"];
var _hoisted_6 = {
  class: "flex items-center pl-3 cursor-pointer"
};
var _hoisted_7 = {
  "data-tag": "nav-box",
  class: "h-11 flex flex-none items-center border-b-0.5 border-color-border-separator overflow-auto whitespace-nowrap scrollbar-size-0"
};
var _hoisted_8 = {
  class: "px-4 flex"
};
var _hoisted_9 = {
  key: 0,
  class: "px-2 text-color-text-placeholder flex items-center"
};
var _hoisted_10 = ["onClick"];
var _hoisted_11 = /* @__PURE__ */ createElementVNode(
  "div",
  {
    class: "flex-auto"
  },
  null,
  -1
  /* HOISTED */
);
var _hoisted_12 = {
  "data-tag": "view-footer",
  class: "flex items-center py-4 px-3 border-t border-color-bg-4 shadow-sm"
};
var _hoisted_13 = /* @__PURE__ */ createElementVNode(
  "div",
  {
    class: "flex-auto"
  },
  null,
  -1
  /* HOISTED */
);
var _hoisted_14 = {
  "data-tag": "tabs",
  class: "flex-auto"
};
var _hoisted_15 = {
  "data-tag": "search-body",
  class: "flex-auto overflow-auto flex flex-col"
};
var _hoisted_16 = {
  class: /* @__PURE__ */ normalizeClass(["flex flex-col px-4"])
};
var _hoisted_17 = {
  key: 0,
  class: "text-color-brand"
};
var _hoisted_18 = {
  class: "w-full flex justify-center items-center text-center flex-auto"
};
var _hoisted_19 = {
  class: "h-full overflow-auto scrollbar-size-0"
};
var _hoisted_20 = {
  class: "flex flex-auto px-4 items-center overflow-hidden"
};
var _hoisted_21 = {
  class: "flex-auto truncate min-w-[theme(spacing.14)]"
};
var _hoisted_22 = {
  class: "flex-none pl-4 text-right"
};
function _sfc_render(_ctx, _cache, $props2, $setup, $data, $options) {
  var _component_IconChevronLeft = resolveComponent("IconChevronLeft");
  var _component_IconSearch = resolveComponent("IconSearch");
  var _component_IconChevronRight = resolveComponent("IconChevronRight");
  var _component_IconChevronUp = resolveComponent("IconChevronUp");
  var _component_tiny_button = resolveComponent("tiny-button");
  var _component_tiny_option = resolveComponent("tiny-option");
  var _component_tiny_exception = resolveComponent("tiny-exception");
  var _component_tiny_action_sheet = resolveComponent("tiny-action-sheet");
  var _component_IconOperationfaild = resolveComponent("IconOperationfaild");
  return openBlock(), createElementBlock("div", _hoisted_1, [createVNode(_component_tiny_action_sheet, {
    ref: "actionSheet",
    title: _ctx.title,
    "lock-scroll": _ctx.lockScroll,
    mask: _ctx.mask,
    "show-header": _ctx.showHeader,
    "custom-class": _ctx.m("h-full max-h-full rounded-none text-color-text-primary pb-0", _ctx.customClass),
    visible: _ctx.visible,
    "onUpdate:visible": _cache[5] || (_cache[5] = function($event) {
      return _ctx.$emit("update:visible", $event);
    })
  }, {
    "header-left": withCtx(function() {
      return [createVNode(_component_IconChevronLeft, {
        class: "h-5 w-5 fill-color-text-primary cursor-pointer",
        onClick: _ctx.close
      }, null, 8, ["onClick"])];
    }),
    "header-right": withCtx(function() {
      return [_hoisted_2];
    }),
    "body-top": withCtx(function() {
      return [createElementVNode("div", _hoisted_3, [createElementVNode("div", _hoisted_4, [createVNode(_component_IconSearch, {
        "custom-class": "h-4 w-4",
        class: "mr-1 fill-color-icon-disabled"
      }), withDirectives(createElementVNode("input", {
        "onUpdate:modelValue": _cache[0] || (_cache[0] = function($event) {
          return _ctx.state.search.input = $event;
        }),
        class: "h-5 flex-auto text-xs bg-transparent outline-0",
        placeholder: _ctx.t("ui.select.pleaseSearch"),
        onInput: _cache[1] || (_cache[1] = function() {
          return _ctx.inputKeyword && _ctx.inputKeyword.apply(_ctx, arguments);
        }),
        onKeyup: _cache[2] || (_cache[2] = withKeys(function() {
          return _ctx.searchMethod && _ctx.searchMethod.apply(_ctx, arguments);
        }, ["enter"]))
      }, null, 40, _hoisted_5), [[vModelText, _ctx.state.search.input]])]), createElementVNode("div", _hoisted_6, [createElementVNode(
        "div",
        {
          onClick: _cache[3] || (_cache[3] = function() {
            return _ctx.searchMethod && _ctx.searchMethod.apply(_ctx, arguments);
          })
        },
        toDisplayString(_ctx.t("ui.select.search")),
        1
        /* TEXT */
      )])]), withDirectives(createElementVNode(
        "div",
        _hoisted_7,
        [createElementVNode("div", _hoisted_8, [(openBlock(true), createElementBlock(
          Fragment,
          null,
          renderList(_ctx.state.computedNavList, function(option, index) {
            return openBlock(), createElementBlock("div", {
              key: index,
              class: "flex-none flex items-center"
            }, [index !== 0 ? (openBlock(), createElementBlock("span", _hoisted_9, [createVNode(_component_IconChevronRight, {
              "custom-class": "w-4 h-4 fill-current"
            })])) : createCommentVNode("v-if", true), createElementVNode("span", {
              class: normalizeClass(["flex-none max-w-[theme(spacing.24)] truncate", {
                "text-color-brand": index === _ctx.state.level
              }, _ctx.disabledNavOption(index, option) ? "text-color-text-disabled" : "cursor-pointer"]),
              onClick: function onClick($event) {
                return _ctx.setLevel(index, option);
              }
            }, toDisplayString(option.data[_ctx.textField]), 11, _hoisted_10)]);
          }),
          128
          /* KEYED_FRAGMENT */
        )), _hoisted_11])],
        512
        /* NEED_PATCH */
      ), [[vShow, !_ctx.state.search.show]])];
    }),
    "body-bottom": withCtx(function() {
      return [createElementVNode("div", _hoisted_12, [createElementVNode("div", {
        class: "cursor-pointer pr-2",
        onClick: _cache[4] || (_cache[4] = withModifiers(function($event) {
          return _ctx.toggleCheckList(true);
        }, ["stop"]))
      }, [createElementVNode(
        "span",
        null,
        toDisplayString(_ctx.t("ui.select.selectedNum", {
          num: _ctx.state.computedCheckList.length
        })),
        1
        /* TEXT */
      ), withDirectives(createVNode(
        _component_IconChevronUp,
        {
          class: "flex-none w-4 h-4 ml-2 fill-current"
        },
        null,
        512
        /* NEED_PATCH */
      ), [[vShow, _ctx.state.computedCheckList.length]])]), _hoisted_13, createVNode(_component_tiny_button, {
        tiny_mode: "mobile-first",
        class: "flex-none ml-3 w-28",
        type: "primary",
        size: "medium",
        "reset-time": 0,
        onClick: _ctx.confirm
      }, {
        default: withCtx(function() {
          return [createTextVNode(
            toDisplayString(_ctx.t("ui.button.confirm")),
            1
            /* TEXT */
          )];
        }),
        _: 1
        /* STABLE */
      }, 8, ["onClick"])])];
    }),
    default: withCtx(function() {
      return [withDirectives(createElementVNode(
        "div",
        _hoisted_14,
        [(openBlock(true), createElementBlock(
          Fragment,
          null,
          renderList(_ctx.state.options, function(currentList, index) {
            return withDirectives((openBlock(), createElementBlock("div", {
              "data-tag": "tab-item",
              key: index,
              class: "flex flex-col px-4 overflow-auto pt-2"
            }, [(openBlock(true), createElementBlock(
              Fragment,
              null,
              renderList(currentList, function(item, index2) {
                return openBlock(), createBlock(_component_tiny_option, {
                  key: item.data[_ctx.valueField],
                  ellipsis: _ctx.ellipsis,
                  textField: _ctx.textField,
                  textField2: _ctx.textField2,
                  textField3: _ctx.textField3,
                  loading: _ctx.state.loading,
                  option: item,
                  onCheck: function onCheck($event) {
                    return _ctx.selectOption(item);
                  },
                  onExpand: _ctx.nodeExpand
                }, {
                  default: withCtx(function() {
                    return [renderSlot(_ctx.$slots, "default", {
                      item,
                      index: index2
                    })];
                  }),
                  _: 2
                  /* DYNAMIC */
                }, 1032, ["ellipsis", "textField", "textField2", "textField3", "loading", "option", "onCheck", "onExpand"]);
              }),
              128
              /* KEYED_FRAGMENT */
            ))])), [[vShow, index === _ctx.state.level]]);
          }),
          128
          /* KEYED_FRAGMENT */
        ))],
        512
        /* NEED_PATCH */
      ), [[vShow, !_ctx.state.search.show]]), createElementVNode(
        "div",
        {
          "data-tag": "search-box",
          class: normalizeClass([_ctx.state.search.show ? "flex flex-col flex-auto" : "hidden"])
        },
        [createElementVNode("div", _hoisted_15, [createElementVNode("div", _hoisted_16, [(openBlock(true), createElementBlock(
          Fragment,
          null,
          renderList(_ctx.state.search.filterOptions, function(item, index) {
            return openBlock(), createBlock(_component_tiny_option, {
              key: index,
              ellipsis: _ctx.ellipsis,
              textField: _ctx.textField,
              textField2: _ctx.textField2,
              textField3: _ctx.textField3,
              option: item.node,
              onCheck: function onCheck($event) {
                return _ctx.searchSelectHandler(item.node, index);
              }
            }, {
              default: withCtx(function() {
                return [_ctx.searchConfig.openSearchSlot ? renderSlot(_ctx.$slots, "search-item", {
                  key: 0,
                  item,
                  index
                }) : renderSlot(_ctx.$slots, "default", {
                  key: 1,
                  item,
                  index
                }, function() {
                  return [createElementVNode(
                    "div",
                    {
                      class: normalizeClass(["flex-auto", {
                        "truncate": _ctx.ellipsis
                      }])
                    },
                    [(openBlock(true), createElementBlock(
                      Fragment,
                      null,
                      renderList(_ctx.renderSearchOption(item.data[_ctx.textField]), function(text, index2) {
                        return openBlock(), createElementBlock("span", {
                          key: index2
                        }, [index2 ? (openBlock(), createElementBlock(
                          "span",
                          _hoisted_17,
                          toDisplayString(_ctx.state.search.input),
                          1
                          /* TEXT */
                        )) : createCommentVNode("v-if", true), createTextVNode(
                          toDisplayString(text),
                          1
                          /* TEXT */
                        )]);
                      }),
                      128
                      /* KEYED_FRAGMENT */
                    ))],
                    2
                    /* CLASS */
                  )];
                })];
              }),
              _: 2
              /* DYNAMIC */
            }, 1032, ["ellipsis", "textField", "textField2", "textField3", "option", "onCheck"]);
          }),
          128
          /* KEYED_FRAGMENT */
        ))]), withDirectives(createElementVNode(
          "div",
          _hoisted_18,
          [createVNode(_component_tiny_exception, {
            "component-page": "",
            type: "noresult"
          })],
          512
          /* NEED_PATCH */
        ), [[vShow, _ctx.state.search.loaded && !_ctx.state.search.filterOptions.length]])])],
        2
        /* CLASS */
      )];
    }),
    _: 3
    /* FORWARDED */
  }, 8, ["title", "lock-scroll", "mask", "show-header", "custom-class", "visible"]), createVNode(_component_tiny_action_sheet, {
    "data-tag": "selected-box",
    "custom-class": "h-3/4 text-color-text-primary",
    title: _ctx.t("ui.select.selected"),
    "show-footer": "",
    "lock-scroll": false,
    menus: _ctx.state.selected.options,
    visible: _ctx.state.selected.show,
    "onUpdate:visible": _cache[8] || (_cache[8] = function($event) {
      return _ctx.state.selected.show = $event;
    })
  }, {
    "header-left": withCtx(function() {
      return [createElementVNode(
        "div",
        {
          class: "cursor-pointer text-color-brand",
          onClick: _cache[6] || (_cache[6] = function() {
            return _ctx.clean && _ctx.clean.apply(_ctx, arguments);
          })
        },
        toDisplayString(_ctx.t("ui.datepicker.clear")),
        1
        /* TEXT */
      )];
    }),
    footer: withCtx(function() {
      return [createVNode(_component_tiny_button, {
        tiny_mode: "mobile-first",
        "custom-class": "flex-1 w-full mx-4 sm:mx-0",
        type: "primary",
        size: "medium",
        "reset-time": 0,
        onClick: _cache[7] || (_cache[7] = function($event) {
          return _ctx.toggleCheckList(false);
        })
      }, {
        default: withCtx(function() {
          return [createTextVNode(
            toDisplayString(_ctx.t("ui.button.confirm")),
            1
            /* TEXT */
          )];
        }),
        _: 1
        /* STABLE */
      })];
    }),
    default: withCtx(function() {
      return [createElementVNode("div", _hoisted_19, [(openBlock(true), createElementBlock(
        Fragment,
        null,
        renderList(_ctx.state.computedSelectedList, function(item, index) {
          return openBlock(), createBlock(
            _component_tiny_option,
            {
              key: index
            },
            {
              default: withCtx(function() {
                return [createElementVNode("div", _hoisted_20, [createElementVNode(
                  "div",
                  _hoisted_21,
                  toDisplayString(item.waitLoad ? item.data[_ctx.valueField] : item.getPathText(_ctx.textField, " / ")),
                  1
                  /* TEXT */
                ), createElementVNode("div", _hoisted_22, [createVNode(_component_IconOperationfaild, {
                  class: "w-5 h-5 fill-color-text-placeholder",
                  onClick: function onClick($event) {
                    return _ctx.removeOption(item);
                  }
                }, null, 8, ["onClick"])])])];
              }),
              _: 2
              /* DYNAMIC */
            },
            1024
            /* DYNAMIC_SLOTS */
          );
        }),
        128
        /* KEYED_FRAGMENT */
      ))])];
    }),
    _: 1
    /* STABLE */
  }, 8, ["title", "menus", "visible"])]);
}
var CascaderView = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
var version = "3.13.0";
CascaderView.model = {
  prop: "modelValue",
  event: "update:modelValue"
};
CascaderView.install = function(Vue) {
  Vue.component(CascaderView.name, CascaderView);
};
CascaderView.version = version;
export {
  CascaderView as default
};
