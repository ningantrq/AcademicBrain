declare const _default: import("@vue/runtime-core").DefineComponent<Readonly<{
    label?: any;
    props?: any;
    disabled?: any;
    tiny_mode?: any;
    tiny_mode_root?: any;
    tiny_template?: any;
    tiny_renderless?: any;
    _constants?: any;
    tiny_theme?: any;
    tiny_chart_theme?: any;
    size?: any;
    modelValue?: any;
    displayOnly?: any;
    options?: any;
    offset?: any;
    hoverExpand?: any;
    clearable?: any;
    arrowOffset?: any;
    placement?: any;
    popperClass?: any;
    popperOptions?: any;
    visibleArrow?: any;
    tip?: any;
    placeholder?: any;
    filterable?: any;
    filterMethod?: any;
    separator?: any;
    showAllLevels?: any;
    collapseTags?: any;
    debounce?: any;
    beforeFilter?: any;
    boundariesPadding?: any;
    popperAppendToBody?: any;
    autoSize?: any;
    shape?: any;
}>, {
    t: (this: any, path: any, options?: any) => any;
    vm: any;
    f: (props: any, attrs?: {}) => {};
    a: (attrs: any, filters: any, include: any) => {};
    d: (props: any) => void;
    dp: (props: any) => void;
    gcls: (key: any) => any;
}, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, ("blur" | "change" | "focus" | "update:modelValue" | "created" | "visible-change" | "expand-change" | "active-item-change" | "remove-tag")[], "blur" | "change" | "focus" | "update:modelValue" | "created" | "visible-change" | "expand-change" | "active-item-change" | "remove-tag", import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<Readonly<{
    label?: any;
    props?: any;
    disabled?: any;
    tiny_mode?: any;
    tiny_mode_root?: any;
    tiny_template?: any;
    tiny_renderless?: any;
    _constants?: any;
    tiny_theme?: any;
    tiny_chart_theme?: any;
    size?: any;
    modelValue?: any;
    displayOnly?: any;
    options?: any;
    offset?: any;
    hoverExpand?: any;
    clearable?: any;
    arrowOffset?: any;
    placement?: any;
    popperClass?: any;
    popperOptions?: any;
    visibleArrow?: any;
    tip?: any;
    placeholder?: any;
    filterable?: any;
    filterMethod?: any;
    separator?: any;
    showAllLevels?: any;
    collapseTags?: any;
    debounce?: any;
    beforeFilter?: any;
    boundariesPadding?: any;
    popperAppendToBody?: any;
    autoSize?: any;
    shape?: any;
}>>> & {
    onChange?: ((...args: any[]) => any) | undefined;
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
    onFocus?: ((...args: any[]) => any) | undefined;
    onBlur?: ((...args: any[]) => any) | undefined;
    "onExpand-change"?: ((...args: any[]) => any) | undefined;
    "onActive-item-change"?: ((...args: any[]) => any) | undefined;
    onCreated?: ((...args: any[]) => any) | undefined;
    "onVisible-change"?: ((...args: any[]) => any) | undefined;
    "onRemove-tag"?: ((...args: any[]) => any) | undefined;
}, {
    readonly label?: any;
    readonly props?: any;
    readonly disabled?: any;
    readonly tiny_mode?: any;
    readonly tiny_mode_root?: any;
    readonly tiny_template?: any;
    readonly tiny_renderless?: any;
    readonly _constants?: any;
    readonly tiny_theme?: any;
    readonly tiny_chart_theme?: any;
    readonly size?: any;
    readonly modelValue?: any;
    readonly displayOnly?: any;
    readonly options?: any;
    readonly offset?: any;
    readonly hoverExpand?: any;
    readonly clearable?: any;
    readonly arrowOffset?: any;
    readonly placement?: any;
    readonly popperClass?: any;
    readonly popperOptions?: any;
    readonly visibleArrow?: any;
    readonly tip?: any;
    readonly placeholder?: any;
    readonly filterable?: any;
    readonly filterMethod?: any;
    readonly separator?: any;
    readonly showAllLevels?: any;
    readonly collapseTags?: any;
    readonly debounce?: any;
    readonly beforeFilter?: any;
    readonly boundariesPadding?: any;
    readonly popperAppendToBody?: any;
    readonly autoSize?: any;
    readonly shape?: any;
}, {}>;
export default _default;
