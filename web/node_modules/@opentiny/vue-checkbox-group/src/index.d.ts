import type { PropType } from '@opentiny/vue-common';
import type { IconPosition } from '@opentiny/vue-checkbox/src';
declare const _default: import("@vue/runtime-core").DefineComponent<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            FORM_ITEM: string;
            FORM_CHANGE: string;
        };
    };
    modelValue: {};
    disabled: BooleanConstructor;
    min: NumberConstructor;
    max: NumberConstructor;
    size: StringConstructor;
    fill: StringConstructor;
    textColor: StringConstructor;
    vertical: BooleanConstructor;
    options: {
        type: ArrayConstructor;
        default: () => never[];
    };
    type: {
        type: StringConstructor;
        default: string;
    };
    displayOnly: {
        type: BooleanConstructor;
        default: boolean;
    };
    iconPosition: PropType<IconPosition>;
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, ("update:modelValue" | "change")[], "update:modelValue" | "change", import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            FORM_ITEM: string;
            FORM_CHANGE: string;
        };
    };
    modelValue: {};
    disabled: BooleanConstructor;
    min: NumberConstructor;
    max: NumberConstructor;
    size: StringConstructor;
    fill: StringConstructor;
    textColor: StringConstructor;
    vertical: BooleanConstructor;
    options: {
        type: ArrayConstructor;
        default: () => never[];
    };
    type: {
        type: StringConstructor;
        default: string;
    };
    displayOnly: {
        type: BooleanConstructor;
        default: boolean;
    };
    iconPosition: PropType<IconPosition>;
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>> & {
    onChange?: ((...args: any[]) => any) | undefined;
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
}, {
    type: string;
    disabled: boolean;
    tiny_mode_root: boolean;
    _constants: Record<string, any>;
    options: unknown[];
    vertical: boolean;
    displayOnly: boolean;
}, {}>;
export default _default;
