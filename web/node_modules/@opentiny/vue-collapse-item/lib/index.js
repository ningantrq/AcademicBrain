function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
import { defineComponent, $prefix, $setup, $props } from "@opentiny/vue-common";
import PcTemplate from "./pc.js";
import MobileFirstTemplate from "./mobile-first.js";
import "@opentiny/vue-theme/collapse-item/index.css";
var template = function template2(mode) {
  var _process$env;
  var tinyMode = typeof process === "object" ? (_process$env = process.env) == null ? void 0 : _process$env.TINY_MODE : null;
  if ("pc" === (tinyMode || mode)) {
    return PcTemplate;
  }
  if ("mobile-first" === (tinyMode || mode)) {
    return MobileFirstTemplate;
  }
  return PcTemplate;
};
var $constants = {
  INTERVAL: 50
};
var collapseItemProps = _extends({}, $props, {
  _constants: {
    type: Object,
    default: function _default() {
      return $constants;
    }
  },
  title: String,
  titleRight: String,
  name: {
    type: [String, Number],
    default: function _default2() {
      return this._uid;
    }
  },
  disabled: Boolean
});
var CollapseItem = defineComponent({
  name: $prefix + "CollapseItem",
  componentName: "CollapseItem",
  inject: ["collapse"],
  props: collapseItemProps,
  setup: function setup(props, context) {
    return $setup({
      props,
      context,
      template
    });
  }
});
var version = "3.13.0";
CollapseItem.install = function(Vue) {
  Vue.component(CollapseItem.name, CollapseItem);
};
CollapseItem.version = version;
export {
  CollapseItem as default
};
