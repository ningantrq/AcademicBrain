import { renderless, api } from "@opentiny/vue-renderless/color-picker/vue";
import { defineComponent, props, setup as _setup } from "@opentiny/vue-common";
import { IconChevronDown } from "@opentiny/vue-icon";
import ColorSelectPanel from "@opentiny/vue-color-select-panel";
import "@opentiny/vue-theme/color-picker/index.css";
import { resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, normalizeStyle, createVNode, Transition, withCtx } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  emits: ["update:modelValue", "confirm", "cancel"],
  props: [].concat(props, ["modelValue", "visible", "alpha", "predefine", "history", "size"]),
  components: {
    IconChevronDown: IconChevronDown(),
    ColorSelect: ColorSelectPanel
  },
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _ctx$state$triggerBg;
  var _component_IconChevronDown = resolveComponent("IconChevronDown");
  var _component_color_select = resolveComponent("color-select");
  return openBlock(), createElementBlock(
    "div",
    {
      class: normalizeClass([{
        "tiny-color-picker": true
      }, _ctx.state.size ? "tiny-color-picker--" + _ctx.state.size : ""]),
      onClick: _cache[1] || (_cache[1] = function() {
        return _ctx.changeVisible(!_ctx.state.isShow);
      })
    },
    [createElementVNode(
      "div",
      {
        class: "tiny-color-picker__inner",
        style: normalizeStyle({
          background: (_ctx$state$triggerBg = _ctx.state.triggerBg) != null ? _ctx$state$triggerBg : ""
        })
      },
      [createVNode(_component_IconChevronDown)],
      4
      /* STYLE */
    ), createVNode(Transition, {
      name: "tiny-zoom-in-top"
    }, {
      default: withCtx(function() {
        return [createVNode(_component_color_select, {
          onConfirm: _ctx.onConfirm,
          onCancel: _ctx.onCancel,
          onHueUpdate: _ctx.onHueUpdate,
          onSvUpdate: _ctx.onSVUpdate,
          onColorUpdate: _ctx.onColorUpdate,
          modelValue: _ctx.state.hex,
          "onUpdate:modelValue": _cache[0] || (_cache[0] = function($event) {
            return _ctx.state.hex = $event;
          }),
          visible: _ctx.state.isShow,
          alpha: _ctx.alpha,
          predefine: _ctx.state.predefineStack.length > 0 ? _ctx.state.predefineStack : void 0,
          history: _ctx.state.stack.length > 0 ? _ctx.state.stack : void 0
        }, null, 8, ["onConfirm", "onCancel", "onHueUpdate", "onSvUpdate", "onColorUpdate", "modelValue", "visible", "alpha", "predefine", "history"])];
      }),
      _: 1
      /* STABLE */
    })],
    2
    /* CLASS */
  );
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  pc as default
};
