import Button from "@opentiny/vue-button";
import ButtonGroup from "@opentiny/vue-button-group";
import Collapse from "@opentiny/vue-collapse";
import CollapseItem from "@opentiny/vue-collapse-item";
import Input from "@opentiny/vue-input";
import { renderless as renderless$2, api as api$2 } from "@opentiny/vue-renderless/color-select-panel/vue";
import { defineComponent, setup as _setup, props, directive } from "@opentiny/vue-common";
import { renderless, api } from "@opentiny/vue-renderless/color-select-panel/hue-select/vue";
import { openBlock, createElementBlock, createElementVNode, normalizeStyle, resolveComponent, resolveDirective, withDirectives, withModifiers, createVNode, createBlock, createCommentVNode, withCtx, createTextVNode, toDisplayString, Fragment, renderList } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

import { renderless as renderless$1, api as api$1 } from "@opentiny/vue-renderless/color-select-panel/alpha-select/vue";
import "@opentiny/vue-theme/color-select-panel/index.css";
import Clickoutside from "@opentiny/vue-renderless/common/deps/clickoutside";
var _sfc_main$2 = defineComponent({
  emits: ["hue-update", "sv-update"],
  props: {
    color: {
      type: Object
    },
    alpha: {
      type: Boolean
    }
  },
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api,
      mono: true
    });
  }
});
var _hoisted_1$2 = {
  class: "tiny-color-select-panel__inner"
};
var _hoisted_2$2 = /* @__PURE__ */ createElementVNode(
  "div",
  {
    class: "white"
  },
  null,
  -1
  /* HOISTED */
);
var _hoisted_3$1 = /* @__PURE__ */ createElementVNode(
  "div",
  {
    class: "black"
  },
  null,
  -1
  /* HOISTED */
);
var _hoisted_4$1 = {
  class: "cursor",
  ref: "cursor"
};
var _hoisted_5$1 = {
  class: "tiny-color-select-panel__inner__hue-select",
  ref: "bar"
};
var _hoisted_6$1 = {
  ref: "thumb"
};
function _sfc_render$2(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", _hoisted_1$2, [createElementVNode(
    "div",
    {
      class: "tiny-color-select-panel__inner__color-select",
      ref: "wrapper",
      style: normalizeStyle({
        background: _ctx.state.background
      })
    },
    [_hoisted_2$2, _hoisted_3$1, createElementVNode(
      "div",
      _hoisted_4$1,
      null,
      512
      /* NEED_PATCH */
    )],
    4
    /* STYLE */
  ), createElementVNode(
    "div",
    _hoisted_5$1,
    [createElementVNode(
      "div",
      _hoisted_6$1,
      null,
      512
      /* NEED_PATCH */
    )],
    512
    /* NEED_PATCH */
  )]);
}
var HueSelect = /* @__PURE__ */ _export_sfc(_sfc_main$2, [["render", _sfc_render$2]]);
var _sfc_main$1 = defineComponent({
  emits: ["alpha-update"],
  props: {
    color: {
      type: Object
    }
  },
  setup: function setup2(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless: renderless$1,
      api: api$1,
      mono: true
    });
  }
});
var _hoisted_1$1 = {
  class: "tiny-color-select-panel__alpha",
  ref: "alphaWrapper"
};
var _hoisted_2$1 = {
  class: "tiny-color-select-panel__alpha__thumb",
  style: {
    top: 0,
    left: 0
  },
  ref: "alphaThumb"
};
function _sfc_render$1(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock(
    "div",
    _hoisted_1$1,
    [createElementVNode(
      "div",
      {
        class: "tiny-color-select-panel__alpha__slider",
        style: normalizeStyle({
          background: _ctx.state.background
        }),
        ref: "slider"
      },
      null,
      4
      /* STYLE */
    ), createElementVNode(
      "div",
      _hoisted_2$1,
      null,
      512
      /* NEED_PATCH */
    )],
    512
    /* NEED_PATCH */
  );
}
var AlphaSelect = /* @__PURE__ */ _export_sfc(_sfc_main$1, [["render", _sfc_render$1]]);
var _sfc_main = defineComponent({
  emits: ["update:modelValue", "cancel", "confirm", "hue-update", "sv-update", "color-update"],
  props: [].concat(props, ["modelValue", "visible", "alpha", "history", "predefine"]),
  components: {
    HueSelect,
    AlphaSelect,
    TinyButton: Button,
    TinyButtonGroup: ButtonGroup,
    TinyInput: Input,
    TinyCollapse: Collapse,
    TinyCollapseItem: CollapseItem
  },
  directives: directive({
    Clickoutside
  }),
  setup: function setup3(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless: renderless$2,
      api: api$2
    });
  }
});
var _hoisted_1 = {
  class: "tiny-color-select-panel__tools"
};
var _hoisted_2 = {
  class: "tiny-color-select-panel__history"
};
var _hoisted_3 = ["onClick"];
var _hoisted_4 = {
  key: 1
};
var _hoisted_5 = {
  class: "tiny-color-select-panel__predefine"
};
var _hoisted_6 = ["onClick"];
var _hoisted_7 = {
  key: 1
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_hue_select = resolveComponent("hue-select");
  var _component_alpha_select = resolveComponent("alpha-select");
  var _component_tiny_input = resolveComponent("tiny-input");
  var _component_tiny_button = resolveComponent("tiny-button");
  var _component_tiny_button_group = resolveComponent("tiny-button-group");
  var _component_tiny_collapse_item = resolveComponent("tiny-collapse-item");
  var _component_tiny_collapse = resolveComponent("tiny-collapse");
  var _directive_clickoutside = resolveDirective("clickoutside");
  return _ctx.state.isShow ? withDirectives((openBlock(), createElementBlock("div", {
    key: 0,
    class: "tiny-color-select-panel",
    onClick: _cache[1] || (_cache[1] = withModifiers(function() {
    }, ["stop"]))
  }, [createVNode(_component_hue_select, {
    color: _ctx.state.color,
    onHueUpdate: _ctx.onHueUpdate,
    onSvUpdate: _ctx.onSVUpdate
  }, null, 8, ["color", "onHueUpdate", "onSvUpdate"]), _ctx.alpha ? (openBlock(), createBlock(_component_alpha_select, {
    key: 0,
    color: _ctx.state.color,
    onAlphaUpdate: _ctx.onAlphaUpdate
  }, null, 8, ["color", "onAlphaUpdate"])) : createCommentVNode("v-if", true), createElementVNode("div", _hoisted_1, [createVNode(_component_tiny_input, {
    modelValue: _ctx.state.res,
    "onUpdate:modelValue": _cache[0] || (_cache[0] = function($event) {
      return _ctx.state.res = $event;
    })
  }, null, 8, ["modelValue"]), createVNode(_component_tiny_button_group, null, {
    default: withCtx(function() {
      return [createVNode(_component_tiny_button, {
        type: "text",
        onClick: _ctx.onCancel
      }, {
        default: withCtx(function() {
          return [createTextVNode(
            toDisplayString(_ctx.t("ui.colorSelectPanel.cancel")),
            1
            /* TEXT */
          )];
        }),
        _: 1
        /* STABLE */
      }, 8, ["onClick"]), createVNode(_component_tiny_button, {
        onClick: _ctx.onConfirm
      }, {
        default: withCtx(function() {
          return [createTextVNode(
            toDisplayString(_ctx.t("ui.colorSelectPanel.confirm")),
            1
            /* TEXT */
          )];
        }),
        _: 1
        /* STABLE */
      }, 8, ["onClick"])];
    }),
    _: 1
    /* STABLE */
  })]), createVNode(_component_tiny_collapse, null, {
    default: withCtx(function() {
      return [_ctx.state.enableHistory ? (openBlock(), createBlock(_component_tiny_collapse_item, {
        key: 0,
        title: _ctx.t("ui.colorSelectPanel.history"),
        name: "history"
      }, {
        default: withCtx(function() {
          return [createElementVNode("div", _hoisted_2, [_ctx.state.stack.length ? (openBlock(true), createElementBlock(
            Fragment,
            {
              key: 0
            },
            renderList(_ctx.state.stack, function(color) {
              return openBlock(), createElementBlock("div", {
                class: "tiny-color-select-panel__history__color-block",
                style: normalizeStyle({
                  background: color
                }),
                onClick: function onClick() {
                  return _ctx.onHistoryClick(color);
                }
              }, null, 12, _hoisted_3);
            }),
            256
            /* UNKEYED_FRAGMENT */
          )) : (openBlock(), createElementBlock(
            "span",
            _hoisted_4,
            toDisplayString(_ctx.t("ui.colorSelectPanel.empty")),
            1
            /* TEXT */
          ))])];
        }),
        _: 1
        /* STABLE */
      }, 8, ["title"])) : createCommentVNode("v-if", true), _ctx.state.enablePredefineColor ? (openBlock(), createBlock(_component_tiny_collapse_item, {
        key: 1,
        title: _ctx.t("ui.colorSelectPanel.predefine"),
        name: "predefine"
      }, {
        default: withCtx(function() {
          return [createElementVNode("div", _hoisted_5, [_ctx.state.predefineStack.length ? (openBlock(true), createElementBlock(
            Fragment,
            {
              key: 0
            },
            renderList(_ctx.state.predefineStack, function(color) {
              return openBlock(), createElementBlock("div", {
                class: "tiny-color-select-panel__predefine__color-block",
                style: normalizeStyle({
                  background: color
                }),
                onClick: function onClick() {
                  return _ctx.onPredefineColorClick(color);
                }
              }, null, 12, _hoisted_6);
            }),
            256
            /* UNKEYED_FRAGMENT */
          )) : (openBlock(), createElementBlock(
            "span",
            _hoisted_7,
            toDisplayString(_ctx.t("ui.colorSelectPanel.empty")),
            1
            /* TEXT */
          ))])];
        }),
        _: 1
        /* STABLE */
      }, 8, ["title"])) : createCommentVNode("v-if", true)];
    }),
    _: 1
    /* STABLE */
  })])), [[_directive_clickoutside, _ctx.onCancel]]) : createCommentVNode("v-if", true);
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  pc as default
};
