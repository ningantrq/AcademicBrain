import { renderless, api } from "@opentiny/vue-renderless/date-table/vue";
import { defineComponent, $prefix, setup as _setup } from "@opentiny/vue-common";
import { isDate } from "@opentiny/vue-renderless/common/deps/date-util";
import { openBlock, createElementBlock, normalizeClass, withModifiers, createElementVNode, toDisplayString, createCommentVNode, Fragment, renderList } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

import "@opentiny/vue-theme/date-table/index.css";
var _sfc_main = defineComponent({
  name: $prefix + "DateTable",
  emits: ["changerange", "pick"],
  props: {
    value: {},
    defaultValue: {
      validator: function validator(value) {
        return value === null || isDate(value) || Array.isArray(value) && value.every(isDate);
      }
    },
    firstDayOfWeek: {
      default: 7,
      type: Number,
      validator: function validator2(value) {
        return value >= 1 && value <= 7;
      }
    },
    date: {},
    selectionMode: {
      default: "day"
    },
    disabledDate: {},
    cellClassName: {},
    maxDate: {},
    minDate: {},
    showWeekNumber: {
      type: Boolean,
      default: false
    },
    rangeState: {
      default: function _default() {
        return {
          endDate: null,
          selecting: false
        };
      }
    },
    formatWeeks: Function
  },
  setup: function setup(props, context) {
    return _setup({
      props,
      context,
      renderless,
      api,
      mono: true
    });
  }
});
var _hoisted_1 = {
  key: 0
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock(
    "table",
    {
      class: normalizeClass(["tiny-date-table", {
        "is-week-mode": _ctx.selectionMode === "week"
      }]),
      cellspacing: "0",
      onMousemove: _cache[0] || (_cache[0] = withModifiers(function() {
        return _ctx.handleMouseMove && _ctx.handleMouseMove.apply(_ctx, arguments);
      }, ["stop"])),
      cellpadding: "0",
      onClick: _cache[1] || (_cache[1] = withModifiers(function() {
        return _ctx.handleClick && _ctx.handleClick.apply(_ctx, arguments);
      }, ["stop"]))
    },
    [createElementVNode("tbody", null, [createElementVNode("tr", null, [_ctx.showWeekNumber ? (openBlock(), createElementBlock(
      "th",
      _hoisted_1,
      toDisplayString(_ctx.t("ui.datepicker.week")),
      1
      /* TEXT */
    )) : createCommentVNode("v-if", true), (openBlock(true), createElementBlock(
      Fragment,
      null,
      renderList(_ctx.state.weeks, function(weekDay, key) {
        return openBlock(), createElementBlock(
          "th",
          {
            key
          },
          toDisplayString(_ctx.t("ui.datepicker.weeks." + weekDay)),
          1
          /* TEXT */
        );
      }),
      128
      /* KEYED_FRAGMENT */
    ))]), (openBlock(true), createElementBlock(
      Fragment,
      null,
      renderList(_ctx.state.rows, function(row, key) {
        return openBlock(), createElementBlock(
          "tr",
          {
            class: normalizeClass(["tiny-date-table__row", {
              current: _ctx.isWeekActive(row[1])
            }]),
            key
          },
          [(openBlock(true), createElementBlock(
            Fragment,
            null,
            renderList(row, function(cellValue, key2) {
              return openBlock(), createElementBlock(
                "td",
                {
                  key: key2,
                  class: normalizeClass(_ctx.getCellClasses(cellValue))
                },
                [createElementVNode("div", null, [createElementVNode(
                  "span",
                  null,
                  toDisplayString(cellValue.text),
                  1
                  /* TEXT */
                )])],
                2
                /* CLASS */
              );
            }),
            128
            /* KEYED_FRAGMENT */
          ))],
          2
          /* CLASS */
        );
      }),
      128
      /* KEYED_FRAGMENT */
    ))])],
    34
    /* CLASS, NEED_HYDRATION */
  );
}
var DateTable = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
var version = "3.13.0";
DateTable.install = function(Vue) {
  Vue.component(DateTable.name, DateTable);
};
DateTable.version = version;
export {
  DateTable as default
};
