import { renderless, api } from "@opentiny/vue-renderless/dept/vue";
import { defineComponent, props, setup as _setup } from "@opentiny/vue-common";
import { IconPopup } from "@opentiny/vue-icon";
import Input from "@opentiny/vue-input";
import Row from "@opentiny/vue-row";
import Col from "@opentiny/vue-col";
import DialogBox from "@opentiny/vue-dialog-box";
import Select from "@opentiny/vue-select";
import Option from "@opentiny/vue-option";
import { resolveComponent, openBlock, createElementBlock, createVNode, withCtx, createElementVNode, toDisplayString, createTextVNode, Fragment, renderList, createBlock, renderSlot } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = /* @__PURE__ */ defineComponent({
  components: {
    TinyInput: Input,
    TinyDialogBox: DialogBox,
    TinySelect: Select,
    TinyOption: Option,
    TinyRow: Row,
    TinyCol: Col,
    IconPopup: IconPopup()
  },
  props: [].concat(props, ["size", "modelValue", "disabled", "fetchDeptList", "fetchDeptByValue", "fetchDept", "beforeConfirm", "autoSelect", "title", "displayOnly"]),
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  class: "tiny-dept"
};
var _hoisted_2 = {
  class: "tiny-option tiny-select-dropdown__item",
  style: {
    "background": "#f1f1f1",
    "cursor": "auto",
    "border-bottom": "solid 1px #d9d9d9",
    "box-shadow": "rgb(241, 241, 241) 0px -6px 0px 6px"
  }
};
var _hoisted_3 = {
  style: {
    "float": "left",
    "font-size": "12px"
  }
};
var _hoisted_4 = {
  style: {
    "float": "right"
  }
};
var _hoisted_5 = {
  style: {
    "float": "left",
    "font-size": "12px"
  }
};
var _hoisted_6 = {
  style: {
    "float": "right",
    "color": "#8492a6",
    "font-size": "12px"
  }
};
var _hoisted_7 = {
  class: "tiny-dept__label is-selected"
};
var _hoisted_8 = {
  class: "tiny-dept__selected-info"
};
var _hoisted_9 = {
  class: "tiny-toolbar"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_icon_popup = resolveComponent("icon-popup");
  var _component_tiny_input = resolveComponent("tiny-input");
  var _component_tiny_col = resolveComponent("tiny-col");
  var _component_tiny_option = resolveComponent("tiny-option");
  var _component_tiny_select = resolveComponent("tiny-select");
  var _component_tiny_row = resolveComponent("tiny-row");
  var _component_tiny_dialog_box = resolveComponent("tiny-dialog-box");
  return openBlock(), createElementBlock("div", _hoisted_1, [createVNode(_component_tiny_input, {
    size: _ctx.size,
    modelValue: _ctx.state.display,
    "onUpdate:modelValue": _cache[0] || (_cache[0] = function($event) {
      return _ctx.state.display = $event;
    }),
    disabled: _ctx.disabled,
    readonly: "",
    "display-only": _ctx.displayOnly
  }, {
    suffix: withCtx(function() {
      return [createVNode(_component_icon_popup, {
        class: "tiny-input__icon tiny-svg-icon",
        onClick: _ctx.openDialog
      }, null, 8, ["onClick"])];
    }),
    _: 1
    /* STABLE */
  }, 8, ["size", "modelValue", "disabled", "display-only"]), createVNode(_component_tiny_dialog_box, {
    class: "tiny-dept",
    visible: _ctx.state.open,
    "onUpdate:visible": _cache[4] || (_cache[4] = function($event) {
      return _ctx.state.open = $event;
    }),
    "close-on-click-modal": false,
    width: "550px",
    "append-to-body": "",
    onClose: _ctx.closeDialog,
    title: _ctx.title
  }, {
    footer: withCtx(function() {
      return [createElementVNode("span", _hoisted_9, [createElementVNode("button", {
        type: "button",
        onClick: _cache[2] || (_cache[2] = function() {
          return _ctx.confirm && _ctx.confirm.apply(_ctx, arguments);
        }),
        class: "tiny-button tiny-button--primary"
      }, [createElementVNode(
        "span",
        null,
        toDisplayString(_ctx.t("ui.base.confirm")),
        1
        /* TEXT */
      )]), createElementVNode("button", {
        type: "button",
        onClick: _cache[3] || (_cache[3] = function() {
          return _ctx.cancel && _ctx.cancel.apply(_ctx, arguments);
        }),
        class: "tiny-button tiny-button--default"
      }, [createElementVNode(
        "span",
        null,
        toDisplayString(_ctx.t("ui.base.cancel")),
        1
        /* TEXT */
      )])])];
    }),
    default: withCtx(function() {
      return [createVNode(_component_tiny_row, {
        class: "tiny-dept__search"
      }, {
        default: withCtx(function() {
          return [createVNode(_component_tiny_col, {
            class: "tiny-dept__label",
            title: _ctx.t("ui.dept.search"),
            span: 3
          }, {
            default: withCtx(function() {
              return [createTextVNode(
                toDisplayString(_ctx.t("ui.dept.search")),
                1
                /* TEXT */
              )];
            }),
            _: 1
            /* STABLE */
          }, 8, ["title"]), createVNode(_component_tiny_col, {
            span: 5
          }, {
            default: withCtx(function() {
              return [createVNode(_component_tiny_select, {
                class: "tiny-detp__select",
                modelValue: _ctx.state.searchValue,
                "onUpdate:modelValue": _cache[1] || (_cache[1] = function($event) {
                  return _ctx.state.searchValue = $event;
                }),
                placement: "bottom-start",
                loading: _ctx.state.loading,
                placeholder: _ctx.t("ui.dept.input"),
                filterable: "",
                clearable: "",
                remote: "",
                "remote-method": _ctx.searchMethod,
                onChange: _ctx.searchChange
              }, {
                default: withCtx(function() {
                  return [createElementVNode("li", _hoisted_2, [createElementVNode(
                    "span",
                    _hoisted_3,
                    toDisplayString(_ctx.t("ui.dept.code")),
                    1
                    /* TEXT */
                  ), createElementVNode(
                    "span",
                    _hoisted_4,
                    toDisplayString(_ctx.t("ui.dept.name")),
                    1
                    /* TEXT */
                  )]), (openBlock(true), createElementBlock(
                    Fragment,
                    null,
                    renderList(_ctx.state.searchOptions, function(option, index) {
                      return openBlock(), createBlock(_component_tiny_option, {
                        key: index,
                        label: option.hrName,
                        value: option.hrCode
                      }, {
                        default: withCtx(function() {
                          return [createElementVNode(
                            "span",
                            _hoisted_5,
                            toDisplayString(option.hrCode),
                            1
                            /* TEXT */
                          ), createElementVNode(
                            "span",
                            _hoisted_6,
                            toDisplayString(option.hrName),
                            1
                            /* TEXT */
                          )];
                        }),
                        _: 2
                        /* DYNAMIC */
                      }, 1032, ["label", "value"]);
                    }),
                    128
                    /* KEYED_FRAGMENT */
                  ))];
                }),
                _: 1
                /* STABLE */
              }, 8, ["modelValue", "loading", "placeholder", "remote-method", "onChange"])];
            }),
            _: 1
            /* STABLE */
          })];
        }),
        _: 1
        /* STABLE */
      }), (openBlock(true), createElementBlock(
        Fragment,
        null,
        renderList(_ctx.deptState, function(dept, index) {
          return openBlock(), createBlock(
            _component_tiny_row,
            {
              class: "tiny-dept__item",
              key: index
            },
            {
              default: withCtx(function() {
                return [createVNode(_component_tiny_col, {
                  class: "tiny-dept__label",
                  title: _ctx.t("ui.dept." + dept.title),
                  span: 3
                }, {
                  default: withCtx(function() {
                    return [createTextVNode(
                      toDisplayString(_ctx.t("ui.dept." + dept.title)),
                      1
                      /* TEXT */
                    )];
                  }),
                  _: 2
                  /* DYNAMIC */
                }, 1032, ["title"]), createVNode(
                  _component_tiny_col,
                  {
                    span: 9
                  },
                  {
                    default: withCtx(function() {
                      return [createVNode(_component_tiny_select, {
                        class: "tiny-detp__select",
                        ref_for: true,
                        ref: "select" + index,
                        modelValue: dept.value,
                        "onUpdate:modelValue": function onUpdateModelValue($event) {
                          return dept.value = $event;
                        },
                        loading: _ctx.state.loading,
                        filterable: "",
                        "default-first-option": "",
                        clearable: "",
                        disabled: !!index && dept.disable,
                        onVisibleChange: function onVisibleChange($event) {
                          return _ctx.getCurrentList(index, $event);
                        },
                        onChange: function onChange($event) {
                          return _ctx.selectChange({
                            level: index,
                            value: $event
                          });
                        }
                      }, {
                        default: withCtx(function() {
                          return [(openBlock(true), createElementBlock(
                            Fragment,
                            null,
                            renderList(dept.options, function(option) {
                              return openBlock(), createBlock(_component_tiny_option, {
                                key: option.hrCode,
                                label: option.hrName,
                                value: option.hrCode
                              }, null, 8, ["label", "value"]);
                            }),
                            128
                            /* KEYED_FRAGMENT */
                          ))];
                        }),
                        _: 2
                        /* DYNAMIC */
                      }, 1032, ["modelValue", "onUpdate:modelValue", "loading", "disabled", "onVisibleChange", "onChange"])];
                    }),
                    _: 2
                    /* DYNAMIC */
                  },
                  1024
                  /* DYNAMIC_SLOTS */
                )];
              }),
              _: 2
              /* DYNAMIC */
            },
            1024
            /* DYNAMIC_SLOTS */
          );
        }),
        128
        /* KEYED_FRAGMENT */
      )), createVNode(_component_tiny_row, null, {
        default: withCtx(function() {
          return [createElementVNode(
            "p",
            _hoisted_7,
            toDisplayString(_ctx.t("ui.dept.selected")),
            1
            /* TEXT */
          ), createElementVNode(
            "p",
            _hoisted_8,
            toDisplayString(_ctx.state.labels.join(" > ")),
            1
            /* TEXT */
          ), renderSlot(_ctx.$slots, "hrapprover", {
            slotScope: _ctx.state
          })];
        }),
        _: 3
        /* FORWARDED */
      })];
    }),
    _: 3
    /* FORWARDED */
  }, 8, ["visible", "onClose", "title"])]);
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  pc as default
};
