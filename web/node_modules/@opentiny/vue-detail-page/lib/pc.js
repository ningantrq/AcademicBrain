import Button from "@opentiny/vue-button";
import { iconSetting } from "@opentiny/vue-icon";
import Checkbox from "@opentiny/vue-checkbox";
import Modal from "@opentiny/vue-modal";
import { renderless, api } from "@opentiny/vue-renderless/detail-page/vue";
import { defineComponent, props, setup as _setup } from "@opentiny/vue-common";
import { resolveComponent, openBlock, createElementBlock, createElementVNode, toDisplayString, createVNode, Fragment, renderList, withDirectives, createTextVNode, vShow, withCtx, normalizeClass, withModifiers } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  components: {
    IconSetting: iconSetting(),
    TinyButton: Button,
    TinyModal: Modal,
    TinyCheckbox: Checkbox
  },
  props: [].concat(props, ["modelValue", "valueTitle", "title", "textSplit", "dialogTitle", "labelTitle", "tips", "saveButton", "cancelButton"]),
  emits: ["saveWarning"],
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api,
      extendOptions: {
        alert: Modal.alert
      }
    });
  }
});
var _hoisted_1 = {
  class: "tiny-detail-page"
};
var _hoisted_2 = {
  class: "tiny-detail-page__header"
};
var _hoisted_3 = {
  class: "tiny-detail-page__content"
};
var _hoisted_4 = {
  class: "tiny-detail-page__content-item-span"
};
var _hoisted_5 = {
  class: "tiny-detail-dialog"
};
var _hoisted_6 = {
  class: "tiny-detail-dialog__header"
};
var _hoisted_7 = {
  class: "tiny-detail-dialog__header-check"
};
var _hoisted_8 = {
  class: "tiny-detail-dialog__content"
};
var _hoisted_9 = {
  class: "tiny-detail-dialog__footer"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_IconSetting = resolveComponent("IconSetting");
  var _component_tiny_checkbox = resolveComponent("tiny-checkbox");
  var _component_tiny_button = resolveComponent("tiny-button");
  var _component_tiny_modal = resolveComponent("tiny-modal");
  return openBlock(), createElementBlock("div", _hoisted_1, [createElementVNode("div", _hoisted_2, [createElementVNode(
    "span",
    null,
    toDisplayString(_ctx.state.title),
    1
    /* TEXT */
  ), createElementVNode("div", {
    class: "tiny-detail-page__header-icon",
    onClick: _cache[0] || (_cache[0] = function() {
      return _ctx.showDialog && _ctx.showDialog.apply(_ctx, arguments);
    })
  }, [createVNode(_component_IconSetting, {
    class: "setIconStyle"
  })])]), createElementVNode("ul", _hoisted_3, [(openBlock(true), createElementBlock(
    Fragment,
    null,
    renderList(_ctx.state.value, function(item, index) {
      return withDirectives((openBlock(), createElementBlock("li", {
        class: "tiny-detail-page__content-item",
        key: index
      }, [createElementVNode(
        "span",
        _hoisted_4,
        toDisplayString(item.label) + toDisplayString(_ctx.state.textSplit),
        1
        /* TEXT */
      ), createTextVNode(
        toDisplayString(item.value),
        1
        /* TEXT */
      )])), [[vShow, !item.hidden]]);
    }),
    128
    /* KEYED_FRAGMENT */
  ))]), createVNode(_component_tiny_modal, {
    modelValue: _ctx.state.isShowDialog,
    "onUpdate:modelValue": _cache[2] || (_cache[2] = function($event) {
      return _ctx.state.isShowDialog = $event;
    }),
    class: "tiny-detail-dialog__wrapper",
    "lock-scroll": false,
    title: _ctx.state.dialogTitle
  }, {
    default: withCtx(function() {
      return [createElementVNode("div", _hoisted_5, [createElementVNode("div", _hoisted_6, [createElementVNode(
        "span",
        null,
        toDisplayString(_ctx.state.labelTitle),
        1
        /* TEXT */
      ), createElementVNode("div", _hoisted_7, [createVNode(_component_tiny_checkbox, {
        modelValue: _ctx.state.checkAll,
        "onUpdate:modelValue": _cache[1] || (_cache[1] = function($event) {
          return _ctx.state.checkAll = $event;
        }),
        onChange: _ctx.checkAllHander,
        indeterminate: _ctx.state.indeterminate
      }, {
        default: withCtx(function() {
          return [createTextVNode(
            toDisplayString(_ctx.state.valueTitle),
            1
            /* TEXT */
          )];
        }),
        _: 1
        /* STABLE */
      }, 8, ["modelValue", "onChange", "indeterminate"])])]), createElementVNode("ul", _hoisted_8, [(openBlock(true), createElementBlock(
        Fragment,
        null,
        renderList(_ctx.state.cloneValue, function(item, index) {
          return openBlock(), createElementBlock(
            "li",
            {
              key: index,
              class: normalizeClass(["tiny-detail-dialog__content-item", {
                active: item.hidden
              }])
            },
            [createElementVNode(
              "span",
              null,
              toDisplayString(item.label),
              1
              /* TEXT */
            ), createVNode(_component_tiny_checkbox, {
              modelValue: item.hidden,
              "onUpdate:modelValue": function onUpdateModelValue($event) {
                return item.hidden = $event;
              },
              onClick: withModifiers(function($event) {
                return _ctx.checkValueHiddenItem(index);
              }, ["prevent"]),
              style: {
                "margin-right": "113px"
              }
            }, null, 8, ["modelValue", "onUpdate:modelValue", "onClick"])],
            2
            /* CLASS */
          );
        }),
        128
        /* KEYED_FRAGMENT */
      ))]), createElementVNode("div", _hoisted_9, [createVNode(_component_tiny_button, {
        type: "primary",
        onClick: _ctx.saveHandler
      }, {
        default: withCtx(function() {
          return [createTextVNode(
            toDisplayString(_ctx.state.saveButton),
            1
            /* TEXT */
          )];
        }),
        _: 1
        /* STABLE */
      }, 8, ["onClick"]), createVNode(_component_tiny_button, {
        onClick: _ctx.closeDialog
      }, {
        default: withCtx(function() {
          return [createTextVNode(
            toDisplayString(_ctx.state.cancelButton),
            1
            /* TEXT */
          )];
        }),
        _: 1
        /* STABLE */
      }, 8, ["onClick"])])])];
    }),
    _: 1
    /* STABLE */
  }, 8, ["modelValue", "title"])]);
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  pc as default
};
