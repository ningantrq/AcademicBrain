declare const _default: import("@vue/runtime-core").DefineComponent<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            LOCAL_TIPS: string;
            LOCAL_TITLE: string;
            VALUE_TITLE: string;
            LABEL_TITLE: string;
            DIALOG_TITLE: string;
            SAVE_BUTTON_TEXT: string;
            CANCEL_BUTTTON_TEXT: string;
        };
    };
    modelValue: ArrayConstructor;
    title: {
        type: StringConstructor;
        default: string;
    };
    textSplit: {
        type: StringConstructor;
        default: string;
    };
    dialogTitle: {
        type: StringConstructor;
        default: string;
    };
    labelTitle: {
        type: StringConstructor;
        default: string;
    };
    tips: {
        type: StringConstructor;
        default: string;
    };
    valueTitle: {
        type: StringConstructor;
        default: string;
    };
    saveButton: {
        type: StringConstructor;
        default: string;
    };
    cancelButton: {
        type: StringConstructor;
        default: string;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            LOCAL_TIPS: string;
            LOCAL_TITLE: string;
            VALUE_TITLE: string;
            LABEL_TITLE: string;
            DIALOG_TITLE: string;
            SAVE_BUTTON_TEXT: string;
            CANCEL_BUTTTON_TEXT: string;
        };
    };
    modelValue: ArrayConstructor;
    title: {
        type: StringConstructor;
        default: string;
    };
    textSplit: {
        type: StringConstructor;
        default: string;
    };
    dialogTitle: {
        type: StringConstructor;
        default: string;
    };
    labelTitle: {
        type: StringConstructor;
        default: string;
    };
    tips: {
        type: StringConstructor;
        default: string;
    };
    valueTitle: {
        type: StringConstructor;
        default: string;
    };
    saveButton: {
        type: StringConstructor;
        default: string;
    };
    cancelButton: {
        type: StringConstructor;
        default: string;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    title: string;
    tiny_mode_root: boolean;
    _constants: Record<string, any>;
    tips: string;
    textSplit: string;
    cancelButton: string;
    valueTitle: string;
    dialogTitle: string;
    labelTitle: string;
    saveButton: string;
}, {}>;
export default _default;
