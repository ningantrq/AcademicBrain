declare const _default: import("@vue/runtime-core").DefineComponent<Readonly<{
    title?: any;
    tiny_mode?: any;
    tiny_mode_root?: any;
    tiny_template?: any;
    tiny_renderless?: any;
    _constants?: any;
    tiny_theme?: any;
    tiny_chart_theme?: any;
    modelValue?: any;
    tips?: any;
    textSplit?: any;
    cancelButton?: any;
    valueTitle?: any;
    dialogTitle?: any;
    labelTitle?: any;
    saveButton?: any;
}>, {
    t: (this: any, path: any, options?: any) => any;
    vm: any;
    f: (props: any, attrs?: {}) => {};
    a: (attrs: any, filters: any, include: any) => {};
    d: (props: any) => void;
    dp: (props: any) => void;
    gcls: (key: any) => any;
}, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, "saveWarning"[], "saveWarning", import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<Readonly<{
    title?: any;
    tiny_mode?: any;
    tiny_mode_root?: any;
    tiny_template?: any;
    tiny_renderless?: any;
    _constants?: any;
    tiny_theme?: any;
    tiny_chart_theme?: any;
    modelValue?: any;
    tips?: any;
    textSplit?: any;
    cancelButton?: any;
    valueTitle?: any;
    dialogTitle?: any;
    labelTitle?: any;
    saveButton?: any;
}>>> & {
    onSaveWarning?: ((...args: any[]) => any) | undefined;
}, {
    readonly title?: any;
    readonly tiny_mode?: any;
    readonly tiny_mode_root?: any;
    readonly tiny_template?: any;
    readonly tiny_renderless?: any;
    readonly _constants?: any;
    readonly tiny_theme?: any;
    readonly tiny_chart_theme?: any;
    readonly modelValue?: any;
    readonly tips?: any;
    readonly textSplit?: any;
    readonly cancelButton?: any;
    readonly valueTitle?: any;
    readonly dialogTitle?: any;
    readonly labelTitle?: any;
    readonly saveButton?: any;
}, {}>;
export default _default;
