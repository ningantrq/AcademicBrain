function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
import { $prefix, $props, $setup } from "@opentiny/vue-common";
import PCTemplate from "./pc.js";
var template = function template2() {
  return PCTemplate;
};
var DialogSelect = {
  name: $prefix + "DialogSelect",
  props: _extends({}, $props, {
    dialogOp: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    visible: Boolean,
    popseletor: {
      type: String,
      default: "grid",
      validator: function validator(value) {
        return ~["grid", "tree"].indexOf(value);
      }
    },
    multi: {
      type: Boolean,
      default: false
    },
    gridOp: {
      type: Object,
      default: function _default2() {
        return {
          columns: [],
          data: []
        };
      }
    },
    textField: {
      type: String,
      default: "label"
    },
    textSplit: {
      type: String,
      default: "/"
    },
    valueField: {
      type: String,
      default: "id"
    },
    valueSplit: {
      type: String,
      default: ";"
    },
    remoteSearch: Function,
    showPager: {
      type: Boolean,
      default: true
    },
    pagerOp: {
      type: Object,
      default: function _default3() {
        return {};
      }
    },
    showSelectedBox: {
      type: Boolean,
      default: true
    },
    selectedBoxOp: {
      type: Object,
      default: function _default4() {
        return {};
      }
    },
    treeOp: {
      type: Object,
      default: function _default5() {
        return {};
      }
    },
    beforeClose: Function,
    autoLookup: {
      type: Boolean,
      default: true
    },
    lookupMethod: Function,
    mainHeight: {
      type: Number,
      default: 290
    }
  }),
  setup: function setup(props, context) {
    return $setup({
      props,
      context,
      template
    });
  }
};
var version = "3.13.0";
DialogSelect.install = function(Vue) {
  Vue.component(DialogSelect.name, DialogSelect);
};
DialogSelect.version = version;
export {
  DialogSelect as default
};
