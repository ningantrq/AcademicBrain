/**
 * Copyright (c) 2022 - present TinyVue Authors.
 * Copyright (c) 2022 - present Huawei Cloud Computing Technologies Co., Ltd.
 *
 * Use of this source code is governed by an MIT-style license.
 *
 * THE OPEN SOURCE SOFTWARE IN THIS PRODUCT IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL,
 * BUT WITHOUT ANY WARRANTY, WITHOUT EVEN THE IMPLIED WARRANTY OF MERCHANTABILITY OR FITNESS FOR
 * A PARTICULAR PURPOSE. SEE THE APPLICABLE LICENSES FOR MORE DETAILS.
 *
 */
export declare const $constants: {
    ICON_MAP: {
        leftWardArrow: string;
    };
};
export declare const dropdownItemProps: {
    _constants: {
        type: ObjectConstructor;
        default: () => {
            ICON_MAP: {
                leftWardArrow: string;
            };
        };
    };
    icon: (ObjectConstructor | StringConstructor)[];
    disabled: BooleanConstructor;
    divided: BooleanConstructor;
    itemData: {
        type: (ObjectConstructor | StringConstructor)[];
        default: string;
    };
    title: StringConstructor;
    label: {
        type: StringConstructor;
        default: string;
    };
    level: StringConstructor;
    titleClass: StringConstructor;
    options: {
        type: ArrayConstructor;
        default: () => never[];
    };
    type: {
        type: StringConstructor;
        default: string;
    };
    selected: {
        type: BooleanConstructor;
        default: boolean;
    };
    selectedField: {
        type: StringConstructor;
        default: string;
    };
    multiStage: {
        type: BooleanConstructor;
        default: boolean;
    };
    currentIndex: {
        type: NumberConstructor;
        default: () => number;
    };
    appendToBody: {
        type: BooleanConstructor;
        default: boolean;
    };
    textField: {
        type: StringConstructor;
        default: string;
    };
    tip: {
        type: (StringConstructor | FunctionConstructor)[];
        default: string;
    };
    tipPosition: {
        type: StringConstructor;
        default: string;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
};
declare const _default: import("@vue/runtime-core").DefineComponent<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            ICON_MAP: {
                leftWardArrow: string;
            };
        };
    };
    icon: (ObjectConstructor | StringConstructor)[];
    disabled: BooleanConstructor;
    divided: BooleanConstructor;
    itemData: {
        type: (ObjectConstructor | StringConstructor)[];
        default: string;
    };
    title: StringConstructor;
    label: {
        type: StringConstructor;
        default: string;
    };
    level: StringConstructor;
    titleClass: StringConstructor;
    options: {
        type: ArrayConstructor;
        default: () => never[];
    };
    type: {
        type: StringConstructor;
        default: string;
    };
    selected: {
        type: BooleanConstructor;
        default: boolean;
    };
    selectedField: {
        type: StringConstructor;
        default: string;
    };
    multiStage: {
        type: BooleanConstructor;
        default: boolean;
    };
    currentIndex: {
        type: NumberConstructor;
        default: () => number;
    };
    appendToBody: {
        type: BooleanConstructor;
        default: boolean;
    };
    textField: {
        type: StringConstructor;
        default: string;
    };
    tip: {
        type: (StringConstructor | FunctionConstructor)[];
        default: string;
    };
    tipPosition: {
        type: StringConstructor;
        default: string;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            ICON_MAP: {
                leftWardArrow: string;
            };
        };
    };
    icon: (ObjectConstructor | StringConstructor)[];
    disabled: BooleanConstructor;
    divided: BooleanConstructor;
    itemData: {
        type: (ObjectConstructor | StringConstructor)[];
        default: string;
    };
    title: StringConstructor;
    label: {
        type: StringConstructor;
        default: string;
    };
    level: StringConstructor;
    titleClass: StringConstructor;
    options: {
        type: ArrayConstructor;
        default: () => never[];
    };
    type: {
        type: StringConstructor;
        default: string;
    };
    selected: {
        type: BooleanConstructor;
        default: boolean;
    };
    selectedField: {
        type: StringConstructor;
        default: string;
    };
    multiStage: {
        type: BooleanConstructor;
        default: boolean;
    };
    currentIndex: {
        type: NumberConstructor;
        default: () => number;
    };
    appendToBody: {
        type: BooleanConstructor;
        default: boolean;
    };
    textField: {
        type: StringConstructor;
        default: string;
    };
    tip: {
        type: (StringConstructor | FunctionConstructor)[];
        default: string;
    };
    tipPosition: {
        type: StringConstructor;
        default: string;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    type: string;
    label: string;
    selected: boolean;
    disabled: boolean;
    tiny_mode_root: boolean;
    _constants: Record<string, any>;
    multiStage: boolean;
    options: unknown[];
    textField: string;
    divided: boolean;
    itemData: string | Record<string, any>;
    selectedField: string;
    currentIndex: number;
    appendToBody: boolean;
    tip: string | Function;
    tipPosition: string;
}, {}>;
export default _default;
