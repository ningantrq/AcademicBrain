function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
import { defineComponent, $prefix, $props, setup as _setup } from "@opentiny/vue-common";
import { renderless, api } from "@opentiny/vue-renderless/form-item/vue";
import LabelWrap from "./label-wrap";
import Tooltip from "@opentiny/vue-tooltip";
import { IconHelpCircle } from "@opentiny/vue-icon";
import { resolveComponent, openBlock, createElementBlock, normalizeClass, createVNode, withCtx, normalizeStyle, createElementVNode, renderSlot, createTextVNode, toDisplayString, createBlock, createCommentVNode, withDirectives, vShow } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var $constants = {
  FORM_NAME: "Form",
  FORM_ITEM_NAME: "FormItem"
};
var _sfc_main = defineComponent({
  name: $prefix + "FormItem",
  componentName: "FormItem",
  components: {
    LabelWrap,
    TinyTooltip: Tooltip,
    IconHelpCircle: IconHelpCircle()
  },
  props: _extends({}, $props, {
    _constants: {
      type: Object,
      default: function _default() {
        return $constants;
      }
    },
    appendToBody: {
      type: Boolean,
      default: void 0
    },
    error: String,
    for: String,
    inlineMessage: {
      type: Boolean,
      default: void 0
    },
    messageType: String,
    label: String,
    labelWidth: String,
    manual: Boolean,
    popperOptions: {
      type: Object,
      default: function _default2() {
        return {};
      }
    },
    prop: String,
    required: {
      type: Boolean,
      default: void 0
    },
    rules: [Object, Array],
    showMessage: {
      type: Boolean,
      default: true
    },
    size: String,
    tipContent: String,
    validateDisabled: Boolean,
    validateDebounce: Boolean,
    validatePosition: String,
    validateStatus: String,
    validateType: String
  }),
  setup: function setup(props, context) {
    return _setup({
      props,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = ["for"];
var _hoisted_2 = ["type-name"];
function _sfc_render(_ctx, _cache, $props2, $setup, $data, $options) {
  var _component_icon_help_circle = resolveComponent("icon-help-circle");
  var _component_tiny_tooltip = resolveComponent("tiny-tooltip");
  var _component_label_wrap = resolveComponent("label-wrap");
  return openBlock(), createElementBlock(
    "div",
    {
      "data-tag": "tiny-from-item",
      class: normalizeClass(_ctx.m("flex min-h-[theme(spacing.12)] sm:min-h-[theme(spacing.7)] mb-0 p-0 sm:mb-4 box-border after:content-[''] after:table after:clear-both before:content-['']  before:table border-b-0.5 border-color-bg-3 sm:border-none", _ctx.state.validateState === "error" && _ctx.state.validateType === "text" ? "mb-0 sm:mb-0 pb-1 sm:pb-1" : "", _ctx.state.formInline ? "align-sub" : "", _ctx.state.labelPosition === "top" ? "block mb-4" : "", _ctx.state.validateState === "error" ? "[&_input]:border-color-error [&_textarea]:border-color-error [&_input:focus]:border-color-error [&_input:hover]:border-color-error [&_textarea:focus]:border-color-error [&_textarea:hover]:border-color-error" : "", _ctx.state.labelPosition === "top" && !_ctx.state.hideRequiredAsterisk ? "pl-0" : "", ["small", "mini"].indexOf(_ctx.state.formItemSize) >= 0 ? "mb-2" : "", !_ctx.slots.label && !this.label ? "border-none" : "", _ctx.state.isDisplayOnly ? "border-none py-0.5" : ""))
    },
    [createVNode(_component_label_wrap, {
      isAutoWidth: _ctx.state.labelStyle && _ctx.state.labelStyle.width === "auto",
      updateAll: _ctx.state.labelWidth === "auto",
      isMobileFirst: true
    }, {
      default: withCtx(function() {
        return [_ctx.slots.label || _ctx.label ? (openBlock(), createElementBlock("label", {
          key: 0,
          "data-tag": "tiny-item-label",
          class: normalizeClass(_ctx.m("py-3 sm:py-1.5 sm:min-h-[theme(spacing.7)] relative align-bottom float-left text-sm sm:text-xs text-color-text-secondary pr-0 sm:pr-4 box-border", "overflow-hidden text-ellipsis text-left sm:text-right", _ctx.state.labelPosition === "top" ? "float-none inline-block text-left leading-none px-0 pt-0 pb-1.5 h-auto min-h-0" : "min-h-[theme(spacing.9)]", _ctx.state.labelPosition === "left" ? "text-left" : "", _ctx.state.formInline && _ctx.state.labelPosition === "top" ? "block" : "", _ctx.state.isDisplayOnly ? "leading-none h-auto align-[inherit] pr-4" : "", _ctx.tipContent ? "pr-5 sm:pr-7" : "", _ctx.state.labelPosition === "top" && !_ctx.state.hideRequiredAsterisk ? "overflow-visible relative before:absolute before:-left-2.5" : "")),
          style: normalizeStyle(_ctx.state.labelStyle),
          for: _ctx.state.labelFor
        }, [createElementVNode(
          "span",
          {
            class: normalizeClass(_ctx.m("max-h-[theme(spacing.10)] line-clamp-2 inline-block relative top-px pl-2 sm:pl-0 leading-normal", (_ctx.state.isRequired || _ctx.required) && !_ctx.state.hideRequiredAsterisk ? "before:content-['*'] before:text-color-error before:absolute before:left-0 before:sm:relative" : "", _ctx.state.isDisplayOnly ? "pl-0 before:hidden" : ""))
          },
          [renderSlot(_ctx.$slots, "label", {}, function() {
            return [createTextVNode(
              toDisplayString(_ctx.label + _ctx.state.labelSuffix),
              1
              /* TEXT */
            )];
          })],
          2
          /* CLASS */
        ), _ctx.tipContent ? (openBlock(), createBlock(_component_tiny_tooltip, {
          key: 0,
          effect: "light",
          content: _ctx.tipContent,
          placement: "top"
        }, {
          default: withCtx(function() {
            return [createVNode(_component_icon_help_circle, {
              "custom-class": "h-4 w-4 ml-0.5 absolute right-1 sm:right-2 align-text-bottom fill-color-text-secondary",
              class: normalizeClass([_ctx.state.labelPosition === "top" ? "top-0.5 sm:top-1.5" : "top-3.5 sm:top-1.5"])
            }, null, 8, ["class"])];
          }),
          _: 1
          /* STABLE */
        }, 8, ["content"])) : createCommentVNode("v-if", true)], 14, _hoisted_1)) : createCommentVNode("v-if", true)];
      }),
      _: 3
      /* FORWARDED */
    }, 8, ["isAutoWidth", "updateAll"]), createElementVNode(
      "div",
      {
        "data-tag": "tiny-from-item-inline",
        class: normalizeClass(_ctx.m("m-auto flex-1 relative sm:top-auto text-sm sm:text-xs  after:content-['']  after:table after:clear-both before:content-['']  before:table [&_button:not(:last-child)]:mr-2", "[&_[data-tag=tiny-checkbox]]:py-0 [&_[data-tag=tiny-input]]:w-full [&_[data-tag=tiny-input]_textarea]:w-full [&_[data-tag=tiny-input]_textarea]:pt-3.5 sm:[&_[data-tag=tiny-input]_textarea]:pt-2", _ctx.state.formInline ? "align-sub leading-none" : "", _ctx.state.labelPosition === "top" && !_ctx.state.hideRequiredAsterisk ? "pl-2.5 sm:pl-0 [&_[data-tag=tiny-input]_input]:px-0 sm:[&_[data-tag=tiny-input]_input]:px-3" : ""))
      },
      [_ctx.state.isDisplayOnly && _ctx.state.isBasicComp ? (openBlock(), createElementBlock("div", {
        key: 0,
        "data-tag": "tiny-from-item-display-only",
        class: normalizeClass(["break-all", _ctx.state.typeName === "textarea" ? "line-clamp-3" : "line-clamp-1"]),
        "type-name": _ctx.state.typeName,
        onMouseenter: _cache[0] || (_cache[0] = function() {
          return _ctx.handleMouseenter && _ctx.handleMouseenter.apply(_ctx, arguments);
        }),
        onMouseleave: _cache[1] || (_cache[1] = function() {
          return _ctx.handleMouseleave && _ctx.handleMouseleave.apply(_ctx, arguments);
        })
      }, toDisplayString(_ctx.state.displayedValue || "-"), 43, _hoisted_2)) : createCommentVNode("v-if", true), withDirectives(createElementVNode(
        "div",
        {
          "data-tag": "tiny-from-item-show",
          class: normalizeClass(["[&_[aria-label=checkbox-group]]:pl-0.5 sm:[&_[aria-label=checkbox-group]]:pl-0", "[&_>:first-child[data-tag=tiny-checkbox]]:pl-0.5 sm:[&_>:first-child[data-tag=tiny-checkbox]]:pl-0", !_ctx.state.isDisplayOnly ? "[&_[data-tag=tiny-switch]]:ml-2.5 sm:[&_[data-tag=tiny-switch]]:ml-0 [&_[data-tag=tiny-numeric]]:ml-2.5 sm:[&_[data-tag=tiny-numeric]]:ml-0" : ""])
        },
        [renderSlot(_ctx.$slots, "default")],
        2
        /* CLASS */
      ), [[vShow, !(_ctx.state.isDisplayOnly && _ctx.state.isBasicComp)]]), _ctx.state.validateState === "error" && _ctx.showMessage && _ctx.state.showMessage ? renderSlot(_ctx.$slots, "error", {
        key: 1,
        dataTag: "tiny-from-item-error"
      }, function() {
        return [createElementVNode(
          "div",
          {
            class: normalizeClass(_ctx.m("relative text-color-error text-xs leading-normal pt-1", typeof _ctx.inlineMessage === "boolean" && _ctx.inlineMessage || _ctx.state.inlineMessage ? "relative top-auto left-auto inline-block ml-2.5" : "", _ctx.state.formItemSize === "small" ? "pt-0.5" : "", _ctx.state.formItemSize === "mini" ? "pt-px" : ""))
          },
          toDisplayString(_ctx.state.validateMessage),
          3
          /* TEXT, CLASS */
        )];
      }) : createCommentVNode("v-if", true)],
      2
      /* CLASS */
    )],
    2
    /* CLASS */
  );
}
var mobileFirst = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  mobileFirst as default
};
