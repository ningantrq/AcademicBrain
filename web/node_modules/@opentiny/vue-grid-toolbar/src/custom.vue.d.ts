declare const _default: import("@vue/runtime-core").DefineComponent<{
    data: {
        type: ArrayConstructor;
        default(): never[];
    };
    other: {
        type: BooleanConstructor;
        default: boolean;
    };
    initSettings: {
        type: ObjectConstructor;
        default(): {
            pageSizes: number[];
            pageSize: number;
            sortType: string;
            showIndex: boolean;
        };
    };
    value: BooleanConstructor;
    sortable: FunctionConstructor;
    rowClassName: (StringConstructor | FunctionConstructor)[];
    onBeforeMove: FunctionConstructor;
    filter: StringConstructor;
    refresh: BooleanConstructor;
    keys: {
        type: ArrayConstructor;
        default: () => never[];
    };
    numberSorting: BooleanConstructor;
    multipleHistory: (ObjectConstructor | BooleanConstructor)[];
    resetMethod: FunctionConstructor;
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, unknown, {
    activeName: string;
    animateShow: string;
    constants: {
        icon: {
            asc: string;
            desc: string;
            left: string;
            right: string;
        };
    };
    columns: never[];
    fullColumn: never[];
    customColumns: {
        field: string;
    }[];
    settings: {
        sortType: any;
        pageSize: any;
        columns: never[];
    };
    sortingOptions: never[];
    multipleHistoryId: null;
    saveDisabled: boolean;
}, {
    visible: {
        get(): boolean;
        set(): void;
    };
    showFixed(): any;
    TinyTable(): any;
    isGroup(): any;
    historyConfig(): object;
    TinyTheme(): any;
    dropConfig(): {
        row: boolean;
        column: boolean;
        plugin: false | Function | undefined;
        onBeforeMove: Function | undefined;
        filter: string | undefined;
        refresh: boolean;
    };
}, {
    t: (this: any, path: any, options?: any) => any;
    getColumnConfigs(configs: any): any;
    initNumberSorting(columns: any): void;
    handelNumberSorting(sort: any, row: any): void;
    handleRowDropEnd(): void;
    renderNumberSorting(h: any, { row }: {
        row: any;
    }): any;
    handleCustomMouseMove(): void;
    handleInput(val: any): void;
    handleFixed(column: any): void;
    handleOrder(column: any): void;
    handleVisible(column: any): void;
    showOrHideAllColumns(visible: boolean): void;
    handlerSetting(type: any, column: any): void;
    buildSettings(): {
        sortType: any;
        pageSize: any;
        columns: never[];
    };
    saveSettings(): void;
    resetSettings(event: any): void;
    cancelSettings(): void;
    handleClose(): void;
    handleReset(event: any): void;
    visibleTitle(row: any): any;
    sortTitle(row: any): any;
    fixedTitle(row: any): any;
}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, ("input" | "showModal" | "saveSettings" | "resetSettings" | "cancelSettings")[], "input" | "showModal" | "saveSettings" | "resetSettings" | "cancelSettings", import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    data: {
        type: ArrayConstructor;
        default(): never[];
    };
    other: {
        type: BooleanConstructor;
        default: boolean;
    };
    initSettings: {
        type: ObjectConstructor;
        default(): {
            pageSizes: number[];
            pageSize: number;
            sortType: string;
            showIndex: boolean;
        };
    };
    value: BooleanConstructor;
    sortable: FunctionConstructor;
    rowClassName: (StringConstructor | FunctionConstructor)[];
    onBeforeMove: FunctionConstructor;
    filter: StringConstructor;
    refresh: BooleanConstructor;
    keys: {
        type: ArrayConstructor;
        default: () => never[];
    };
    numberSorting: BooleanConstructor;
    multipleHistory: (ObjectConstructor | BooleanConstructor)[];
    resetMethod: FunctionConstructor;
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>> & {
    onInput?: ((...args: any[]) => any) | undefined;
    onShowModal?: ((...args: any[]) => any) | undefined;
    onSaveSettings?: ((...args: any[]) => any) | undefined;
    onResetSettings?: ((...args: any[]) => any) | undefined;
    onCancelSettings?: ((...args: any[]) => any) | undefined;
}, {
    data: unknown[];
    value: boolean;
    keys: unknown[];
    tiny_mode_root: boolean;
    refresh: boolean;
    other: boolean;
    initSettings: Record<string, any>;
    numberSorting: boolean;
}, {}>;
export default _default;
