import { hooks } from '@opentiny/vue-common';
import type { Column, Datas } from './type';
declare const _default: hooks.DefineComponent<{
    tableData: ArrayConstructor;
    cardConfig: ObjectConstructor;
    listConfig: ObjectConstructor;
    ganttConfig: ObjectConstructor;
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, unknown, {
    primaryColumn: null;
    contentColumns: null;
    operationColumn: null;
    selectionColumn: null;
    slotLink: null;
    rowKey: number;
    wrapperHeight: number;
    tooltipVisible: boolean;
    tooltipContent: string;
    currentRow: null;
    currentRowId: string;
}, {
    config(): {
        tableVm: any;
        cardConfig: any;
        listConfig: any;
    };
    cardView(): boolean;
    listView(): boolean;
    ganttView(): boolean;
    wrapperClass(): string;
    tableClass(): string;
    cardClass(): string;
    rowClass(): string;
    wrapperStyle(): string;
    exceptionVisible(): boolean;
}, {
    mapColumns(): void;
    typeColumns(columns: Array<Column>, types: Array<String>, field?: string): Column[];
    firstFewPropertyColumn(columns: Array<Column>, few: number): Column[];
    genParams(column: Object, row?: Object): {
        column: Object;
        $table: any;
        $columnIndex: any;
        columnIndex: any;
        data: any;
    };
    emitEvent(type: string, args: Array<any>): void;
    handleCardClick(row: Object, e: Object): void;
    cfg(row: Object): Datas;
    getWrapperHeight(): void;
    showTooltip(e: any): void;
    hideTooltip(): void;
    setCurrentRowId(): void;
}, hooks.ComponentOptionsMixin, hooks.ComponentOptionsMixin, {}, string, hooks.VNodeProps & hooks.AllowedComponentProps & hooks.ComponentCustomProps, Readonly<hooks.ExtractPropTypes<{
    tableData: ArrayConstructor;
    cardConfig: ObjectConstructor;
    listConfig: ObjectConstructor;
    ganttConfig: ObjectConstructor;
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    tiny_mode_root: boolean;
}, {}>;
export default _default;
