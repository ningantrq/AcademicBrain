declare const _default: import("@vue/runtime-core").DefineComponent<{
    modelValue: StringConstructor;
    approvalPerson: {
        type: StringConstructor;
        default: string;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    category: {
        type: StringConstructor;
        default: string;
    };
    title: StringConstructor;
    fetchHrapprover: FunctionConstructor;
    fetchDeptList: FunctionConstructor;
    fetchDeptByValue: FunctionConstructor;
    fetchDept: FunctionConstructor;
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    modelValue: StringConstructor;
    approvalPerson: {
        type: StringConstructor;
        default: string;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    category: {
        type: StringConstructor;
        default: string;
    };
    title: StringConstructor;
    fetchHrapprover: FunctionConstructor;
    fetchDeptList: FunctionConstructor;
    fetchDeptByValue: FunctionConstructor;
    fetchDept: FunctionConstructor;
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    disabled: boolean;
    tiny_mode_root: boolean;
    approvalPerson: string;
    category: string;
}, {}>;
export default _default;
