import { svg } from "@opentiny/vue-common";
import { openBlock, createElementBlock, createStaticVNode } from "vue";
var _hoisted_1 = {
  viewBox: "0 0 16 16",
  xmlns: "http://www.w3.org/2000/svg",
  "xmlns:xlink": "http://www.w3.org/1999/xlink"
};
var _hoisted_2 = /* @__PURE__ */ createStaticVNode('<defs><filter x="-121.9%" y="-136.4%" width="373.6%" height="372.8%" filterUnits="objectBoundingBox" id="stretch_svg__a"><feOffset dx="1" in="SourceAlpha" result="shadowOffsetOuter1"></feOffset><feGaussianBlur stdDeviation="1" in="shadowOffsetOuter1" result="shadowBlurOuter1"></feGaussianBlur><feColorMatrix values="0 0 0 0 0.145098039 0 0 0 0 0.168627451 0 0 0 0 0.22745098 0 0 0 0.08 0" in="shadowBlurOuter1" result="shadowMatrixOuter1"></feColorMatrix><feMerge><feMergeNode in="shadowMatrixOuter1"></feMergeNode><feMergeNode in="SourceGraphic"></feMergeNode></feMerge></filter><filter x="-54%" y="-69.9%" width="241.7%" height="239.7%" filterUnits="objectBoundingBox" id="stretch_svg__b"><feMorphology radius=".5" operator="dilate" in="SourceAlpha" result="shadowSpreadOuter1"></feMorphology><feOffset dx="1" in="shadowSpreadOuter1" result="shadowOffsetOuter1"></feOffset><feMorphology radius="1" in="SourceAlpha" result="shadowInner"></feMorphology><feOffset dx="1" in="shadowInner" result="shadowInner"></feOffset><feComposite in="shadowOffsetOuter1" in2="shadowInner" operator="out" result="shadowOffsetOuter1"></feComposite><feGaussianBlur stdDeviation="1" in="shadowOffsetOuter1" result="shadowBlurOuter1"></feGaussianBlur><feColorMatrix values="0 0 0 0 0.145098039 0 0 0 0 0.168627451 0 0 0 0 0.22745098 0 0 0 0.08 0" in="shadowBlurOuter1"></feColorMatrix></filter><filter x="-104%" y="-134.7%" width="372.9%" height="369.3%" filterUnits="objectBoundingBox" id="stretch_svg__d"><feMorphology radius=".5" operator="dilate" in="SourceAlpha" result="shadowSpreadOuter1"></feMorphology><feOffset dx="1" in="shadowSpreadOuter1" result="shadowOffsetOuter1"></feOffset><feMorphology radius="1" in="SourceAlpha" result="shadowInner"></feMorphology><feOffset dx="1" in="shadowInner" result="shadowInner"></feOffset><feComposite in="shadowOffsetOuter1" in2="shadowInner" operator="out" result="shadowOffsetOuter1"></feComposite><feGaussianBlur stdDeviation="1" in="shadowOffsetOuter1" result="shadowBlurOuter1"></feGaussianBlur><feColorMatrix values="0 0 0 0 0.145098039 0 0 0 0 0.168627451 0 0 0 0 0.22745098 0 0 0 0.08 0" in="shadowBlurOuter1"></feColorMatrix></filter><path d="M5.936 0 0 6.021" id="stretch_svg__c"></path><path d="M6.73 3.626 3.649 6.75" id="stretch_svg__e"></path></defs><g fill="none" fill-rule="evenodd"><path d="M0 16h16V0H0z"></path><g filter="url(#stretch_svg__a)" transform="translate(4.634 4.625)"><use fill="#000" filter="url(#stretch_svg__b)" xlink:href="#stretch_svg__c"></use><use stroke="currentColor" xlink:href="#stretch_svg__c"></use><use fill="#000" filter="url(#stretch_svg__d)" xlink:href="#stretch_svg__e"></use><use stroke="currentColor" xlink:href="#stretch_svg__e"></use></g></g>', 2);
var _hoisted_4 = [_hoisted_2];
function render(_ctx, _cache) {
  return openBlock(), createElementBlock("svg", _hoisted_1, [].concat(_hoisted_4));
}
var Stretch = {
  render
};
var index = function index2() {
  return svg({
    name: "IconStretch",
    component: Stretch
  })();
};
export {
  index as default
};
