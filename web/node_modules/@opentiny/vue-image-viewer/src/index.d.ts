declare const _default: import("@vue/runtime-core").DefineComponent<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            MODE: {
                CONTAIN: {
                    name: string;
                    icon: string;
                };
                ORIGINAL: {
                    name: string;
                    icon: string;
                };
            };
            DEFAULT_POPPER_ZINDEX: number;
            THUMBNAILTOP: number;
            MENUTOP: number;
        };
    };
    urlList: {
        type: ArrayConstructor;
        default: () => never[];
    };
    zIndex: {
        type: NumberConstructor;
        default: number;
    };
    previewVisible: {
        type: BooleanConstructor;
        default: boolean;
    };
    closeShow: {
        type: BooleanConstructor;
        default: boolean;
    };
    arrowShow: {
        type: BooleanConstructor;
        default: boolean;
    };
    toolShow: {
        type: BooleanConstructor;
        default: boolean;
    };
    showIndex: {
        type: BooleanConstructor;
        default: boolean;
    };
    imageFullCurrent: {
        type: BooleanConstructor;
        default: boolean;
    };
    startPosition: {
        type: NumberConstructor;
        default: number;
    };
    asyncClose: {
        type: BooleanConstructor;
        default: boolean;
    };
    deleteButton: {
        type: BooleanConstructor;
        default: boolean;
    };
    onSwitch: {
        type: FunctionConstructor;
        default: () => void;
    };
    onClose: {
        type: FunctionConstructor;
        default: () => void;
    };
    isThumbnail: {
        type: BooleanConstructor;
        default: boolean;
    };
    isMenuView: {
        type: BooleanConstructor;
        default: boolean;
    };
    modalView: {
        type: BooleanConstructor;
        default: boolean;
    };
    modalHeight: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    bgColor: {
        type: StringConstructor;
        default: string;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            MODE: {
                CONTAIN: {
                    name: string;
                    icon: string;
                };
                ORIGINAL: {
                    name: string;
                    icon: string;
                };
            };
            DEFAULT_POPPER_ZINDEX: number;
            THUMBNAILTOP: number;
            MENUTOP: number;
        };
    };
    urlList: {
        type: ArrayConstructor;
        default: () => never[];
    };
    zIndex: {
        type: NumberConstructor;
        default: number;
    };
    previewVisible: {
        type: BooleanConstructor;
        default: boolean;
    };
    closeShow: {
        type: BooleanConstructor;
        default: boolean;
    };
    arrowShow: {
        type: BooleanConstructor;
        default: boolean;
    };
    toolShow: {
        type: BooleanConstructor;
        default: boolean;
    };
    showIndex: {
        type: BooleanConstructor;
        default: boolean;
    };
    imageFullCurrent: {
        type: BooleanConstructor;
        default: boolean;
    };
    startPosition: {
        type: NumberConstructor;
        default: number;
    };
    asyncClose: {
        type: BooleanConstructor;
        default: boolean;
    };
    deleteButton: {
        type: BooleanConstructor;
        default: boolean;
    };
    onSwitch: {
        type: FunctionConstructor;
        default: () => void;
    };
    onClose: {
        type: FunctionConstructor;
        default: () => void;
    };
    isThumbnail: {
        type: BooleanConstructor;
        default: boolean;
    };
    isMenuView: {
        type: BooleanConstructor;
        default: boolean;
    };
    modalView: {
        type: BooleanConstructor;
        default: boolean;
    };
    modalHeight: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    bgColor: {
        type: StringConstructor;
        default: string;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    tiny_mode_root: boolean;
    _constants: Record<string, any>;
    zIndex: number;
    onClose: Function;
    urlList: unknown[];
    previewVisible: boolean;
    closeShow: boolean;
    arrowShow: boolean;
    toolShow: boolean;
    showIndex: boolean;
    imageFullCurrent: boolean;
    startPosition: number;
    asyncClose: boolean;
    deleteButton: boolean;
    onSwitch: Function;
    isThumbnail: boolean;
    isMenuView: boolean;
    modalView: boolean;
    modalHeight: string | number;
    bgColor: string;
}, {}>;
export default _default;
