declare const _default: import("@vue/runtime-core").DefineComponent<Readonly<{
    type?: any;
    ellipsis?: any;
    label?: any;
    title?: any;
    name?: any;
    disabled?: any;
    tiny_mode?: any;
    tiny_mode_root?: any;
    tiny_template?: any;
    tiny_renderless?: any;
    _constants?: any;
    tiny_theme?: any;
    tiny_chart_theme?: any;
    width?: any;
    modelValue?: any;
    tabindex?: any;
    suffixIcon?: any;
    contentStyle?: any;
    resize?: any;
    textAlign?: any;
    readonly?: any;
    prefixIcon?: any;
    selectMenu?: any;
    isSelect?: any;
    tips?: any;
    counter?: any;
    autosize?: any;
    clearable?: any;
    autocomplete?: any;
    showPassword?: any;
    showWordLimit?: any;
    validateEvent?: any;
    labelWidth?: any;
}>, {
    t: (this: any, path: any, options?: any) => any;
    vm: any;
    f: (props: any, attrs?: {}) => {};
    a: (attrs: any, filters: any, include: any) => {};
    d: (props: any) => void;
    dp: (props: any) => void;
    gcls: (key: any) => any;
}, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, ("update:modelValue" | "change" | "keydown" | "blur" | "focus" | "keyup" | "mouseenter" | "mouseleave" | "paste" | "clear")[], "update:modelValue" | "change" | "keydown" | "blur" | "focus" | "keyup" | "mouseenter" | "mouseleave" | "paste" | "clear", import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<Readonly<{
    type?: any;
    ellipsis?: any;
    label?: any;
    title?: any;
    name?: any;
    disabled?: any;
    tiny_mode?: any;
    tiny_mode_root?: any;
    tiny_template?: any;
    tiny_renderless?: any;
    _constants?: any;
    tiny_theme?: any;
    tiny_chart_theme?: any;
    width?: any;
    modelValue?: any;
    tabindex?: any;
    suffixIcon?: any;
    contentStyle?: any;
    resize?: any;
    textAlign?: any;
    readonly?: any;
    prefixIcon?: any;
    selectMenu?: any;
    isSelect?: any;
    tips?: any;
    counter?: any;
    autosize?: any;
    clearable?: any;
    autocomplete?: any;
    showPassword?: any;
    showWordLimit?: any;
    validateEvent?: any;
    labelWidth?: any;
}>>> & {
    onPaste?: ((...args: any[]) => any) | undefined;
    onFocus?: ((...args: any[]) => any) | undefined;
    onBlur?: ((...args: any[]) => any) | undefined;
    onChange?: ((...args: any[]) => any) | undefined;
    onKeydown?: ((...args: any[]) => any) | undefined;
    onKeyup?: ((...args: any[]) => any) | undefined;
    onMouseenter?: ((...args: any[]) => any) | undefined;
    onMouseleave?: ((...args: any[]) => any) | undefined;
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
    onClear?: ((...args: any[]) => any) | undefined;
}, {
    readonly type?: any;
    readonly ellipsis?: any;
    readonly label?: any;
    readonly title?: any;
    readonly name?: any;
    readonly disabled?: any;
    readonly tiny_mode?: any;
    readonly tiny_mode_root?: any;
    readonly tiny_template?: any;
    readonly tiny_renderless?: any;
    readonly _constants?: any;
    readonly tiny_theme?: any;
    readonly tiny_chart_theme?: any;
    readonly width?: any;
    readonly modelValue?: any;
    readonly tabindex?: any;
    readonly suffixIcon?: any;
    readonly contentStyle?: any;
    readonly resize?: any;
    readonly textAlign?: any;
    readonly readonly?: any;
    readonly prefixIcon?: any;
    readonly selectMenu?: any;
    readonly isSelect?: any;
    readonly tips?: any;
    readonly counter?: any;
    readonly autosize?: any;
    readonly clearable?: any;
    readonly autocomplete?: any;
    readonly showPassword?: any;
    readonly showWordLimit?: any;
    readonly validateEvent?: any;
    readonly labelWidth?: any;
}, {}>;
export default _default;
