import { renderless, api } from "@opentiny/vue-renderless/ip-address/vue";
import { defineComponent, props, setup as _setup } from "@opentiny/vue-common";
import { iconDotIpv4 } from "@opentiny/vue-icon";
import { openBlock, createElementBlock, createElementVNode, normalizeClass, normalizeStyle, Fragment, renderList, withDirectives, vModelText, renderSlot, createBlock, resolveDynamicComponent, createCommentVNode } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  props: [].concat(props, ["size", "modelValue", "type", "readonly", "disabled", "delimiter"]),
  emits: ["update:modelValue", "change", "blur", "focus", "select", "inputEvent"],
  components: {
    IconDotIpv4: iconDotIpv4()
  },
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  class: "tiny-ip-address"
};
var _hoisted_2 = ["readonly", "disabled", "onUpdate:modelValue", "onSelect", "onFocus", "onInput", "onBlur", "onKeyup", "onKeydown"];
var _hoisted_3 = {
  key: 0,
  class: "tiny-ip-address__input__ipv6-delimiter"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", _hoisted_1, [createElementVNode(
    "ul",
    {
      class: normalizeClass({
        active: _ctx.state.active,
        disabled: _ctx.state.disabled,
        "tiny-ip-address__input": true
      }),
      style: normalizeStyle(_ctx.state.heightStyle)
    },
    [(openBlock(true), createElementBlock(
      Fragment,
      null,
      renderList(_ctx.state.address, function(item, index) {
        return openBlock(), createElementBlock(
          "li",
          {
            key: index,
            style: normalizeStyle(_ctx.state.lineHeightStyle)
          },
          [withDirectives(createElementVNode("input", {
            style: normalizeStyle(_ctx.state.allHeightStyle),
            ref_for: true,
            ref: "inputs",
            readonly: _ctx.readonly,
            disabled: _ctx.state.disabled,
            "onUpdate:modelValue": function onUpdateModelValue($event) {
              return item.value = $event;
            },
            type: "text",
            onSelect: function onSelect($event) {
              return _ctx.select({
                value: item,
                index,
                event: $event
              });
            },
            onFocus: function onFocus($event) {
              return _ctx.focus({
                index,
                event: $event
              });
            },
            onInput: function onInput($event) {
              return _ctx.inputEvent({
                item,
                index
              });
            },
            onChange: _cache[0] || (_cache[0] = function() {
              return _ctx.change && _ctx.change.apply(_ctx, arguments);
            }),
            onBlur: function onBlur($event) {
              return _ctx.blur({
                item,
                index
              });
            },
            onKeyup: function onKeyup($event) {
              return _ctx.keyup({
                item,
                index,
                event: $event
              });
            },
            onKeydown: function onKeydown($event) {
              return _ctx.keydown({
                item,
                index,
                event: $event
              });
            },
            tabindex: "1"
          }, null, 44, _hoisted_2), [[vModelText, item.value]]), index < _ctx.state.address.length - 1 ? renderSlot(_ctx.$slots, "default", {
            key: 0,
            slotScope: {
              state: _ctx.state,
              index,
              item
            }
          }, function() {
            return [_ctx.type === "IPv6" && _ctx.delimiter === "icon-dot-ipv4" ? (openBlock(), createElementBlock("span", _hoisted_3, ":")) : (openBlock(), createBlock(resolveDynamicComponent(_ctx.delimiter), {
              key: 1,
              class: "tiny-svg-size"
            }))];
          }) : createCommentVNode("v-if", true)],
          4
          /* STYLE */
        );
      }),
      128
      /* KEYED_FRAGMENT */
    ))],
    6
    /* CLASS, STYLE */
  )]);
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  pc as default
};
