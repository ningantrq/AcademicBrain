import { defineComponent, props, setup as _setup } from "@opentiny/vue-common";
import { renderless, api } from "@opentiny/vue-renderless/loading/vue";
import "@opentiny/vue-theme/loading/index.css";
import { openBlock, createBlock, Transition, withCtx, withDirectives, createElementVNode, normalizeClass, normalizeStyle, createElementBlock, resolveDynamicComponent, toDisplayString, createCommentVNode, vShow } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  props: [].concat(props),
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  key: 0,
  class: "circular",
  viewBox: "25 25 50 50"
};
var _hoisted_2 = /* @__PURE__ */ createElementVNode(
  "circle",
  {
    class: "path",
    cx: "50",
    cy: "50",
    r: "24",
    fill: "none"
  },
  null,
  -1
  /* HOISTED */
);
var _hoisted_3 = [_hoisted_2];
var _hoisted_4 = {
  key: 2,
  class: "tiny-loading__text"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createBlock(Transition, {
    name: "tiny-loading-fade",
    onAfterLeave: _ctx.handleAfterLeave,
    persisted: ""
  }, {
    default: withCtx(function() {
      return [withDirectives(createElementVNode(
        "div",
        {
          class: normalizeClass(["tiny-loading tiny-loading__mask", [_ctx.state.customClass, {
            "is-fullscreen": _ctx.state.fullscreen
          }]]),
          style: normalizeStyle({
            backgroundColor: _ctx.state.background || ""
          })
        },
        [createElementVNode(
          "div",
          {
            class: normalizeClass(["tiny-loading__spinner", {
              small: "tiny-loading__spinner-small",
              medium: "tiny-loading__spinner-medium",
              large: "tiny-loading__spinner-large"
            }[_ctx.state.size]])
          },
          [!_ctx.state.spinner ? (openBlock(), createElementBlock("svg", _hoisted_1, _hoisted_3)) : (openBlock(), createBlock(resolveDynamicComponent(_ctx.state.spinner), {
            key: 1,
            class: "tiny-icon-loading"
          })), _ctx.state.text ? (openBlock(), createElementBlock(
            "p",
            _hoisted_4,
            toDisplayString(_ctx.state.text),
            1
            /* TEXT */
          )) : createCommentVNode("v-if", true)],
          2
          /* CLASS */
        )],
        6
        /* CLASS, STYLE */
      ), [[vShow, _ctx.state.visible]])];
    }),
    _: 1
    /* STABLE */
  }, 8, ["onAfterLeave"]);
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  pc as default
};
