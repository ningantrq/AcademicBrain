import * as vue from './vue3/index';
export { version } from '../package.json';
export declare const use: (l: any) => any, t: (this: any, path: any, options?: any) => any, i18n: (fn: any) => any, initI18n: ({ app, createI18n, messages, i18n, merge }: vue.InitI18nOption) => any, extend: (deep: boolean | object, ...values: object[]) => object, zhCN: any, enUS: any, language: () => any;
export declare const globalization: (config: any) => {
    getFormatConfig(): {
        NumberFormat: any;
        DbTimezone: any;
        Timezone: any;
        DateFormat: any;
        DateTimeFormat: string;
        TimeFormat: any;
    };
    setFormatConfig(obj: any): void;
    getNumberFormat(): any;
    getDateFormat(): {
        DateTimeFormat: string;
        TimeFormat: any;
        Timezone: any;
        DateFormat: any;
        DbTimezone: any;
    };
    formatDate(value: any, format: any): any;
    formatNumber(value: any, format: any): any;
    recoverNumber(value: any, format: any): number;
    getDateWithNewTimezone(value: any, from: any, to: any): Date | undefined;
};
declare const _default: {
    language: () => any;
    globalization: (config: any) => {
        getFormatConfig(): {
            NumberFormat: any;
            DbTimezone: any;
            Timezone: any;
            DateFormat: any;
            DateTimeFormat: string;
            TimeFormat: any;
        };
        setFormatConfig(obj: any): void;
        getNumberFormat(): any;
        getDateFormat(): {
            DateTimeFormat: string;
            TimeFormat: any;
            Timezone: any;
            DateFormat: any;
            DbTimezone: any;
        };
        formatDate(value: any, format: any): any;
        formatNumber(value: any, format: any): any;
        recoverNumber(value: any, format: any): number;
        getDateWithNewTimezone(value: any, from: any, to: any): Date | undefined;
    };
    isVue2: boolean;
    isVue3: boolean;
    use: (l: any) => any;
    t: (this: any, path: any, options?: any) => any;
    i18n: (fn: any) => any;
    initI18n: ({ app, createI18n, messages, i18n, merge }: vue.InitI18nOption) => any;
    extend: (deep: boolean | object, ...values: object[]) => object;
    zhCN: any;
    enUS: any;
};
export default _default;
