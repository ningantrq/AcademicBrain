import zhCN from '../lang/zh-CN';
import enUS from '../lang/en';
export declare const t: (this: any, path: any, options?: any) => any;
export declare const use: (l: any) => any;
export declare const language: () => any;
export declare const i18n: (fn: any) => any;
export declare const extend: (deep: boolean | object, ...values: object[]) => object;
export interface InitI18nOption {
    app?: any;
    createI18n?: Function;
    messages?: Record<string, any>;
    i18n?: {
        locale: string;
    };
    merge?: Function;
}
export declare const initI18n: ({ app, createI18n, messages, i18n, merge }: InitI18nOption) => any;
export declare const isVue2 = true;
export declare const isVue3 = false;
export { zhCN, enUS };
declare const _default: {
    isVue2: boolean;
    isVue3: boolean;
    use: (l: any) => any;
    t: (this: any, path: any, options?: any) => any;
    i18n: (fn: any) => any;
    initI18n: ({ app, createI18n, messages, i18n, merge }: InitI18nOption) => any;
    extend: (deep: boolean | object, ...values: object[]) => object;
    zhCN: any;
    enUS: any;
};
export default _default;
