function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
import { defineComponent, $prefix, $setup, $props } from "@opentiny/vue-common";
import PcTemplate from "./pc.js";
import "@opentiny/vue-theme/milestone/index.css";
var template = function template2(mode) {
  var _process$env;
  typeof process === "object" ? (_process$env = process.env) == null ? void 0 : _process$env.TINY_MODE : null;
  return PcTemplate;
};
var $constants = {
  DEFAULT_COLOR: "#1890FF",
  DEFAULT_BACK_COLOR: "#FFFFFF",
  BOX_SHADOW_PX: "0px 0px 0px 4px",
  FLAG_CONTENT_CLS: ".content"
};
var milestoneProps = _extends({}, $props, {
  _constants: {
    type: Object,
    default: function _default() {
      return $constants;
    }
  },
  showNumber: {
    type: Boolean,
    default: true
  },
  solid: {
    type: Boolean,
    default: false
  },
  lineStyle: {
    type: [String, Number],
    default: 1
  },
  flagBefore: {
    type: Boolean,
    default: false
  },
  completedField: {
    type: String,
    default: "completed"
  },
  milestonesStatus: {
    type: Object,
    default: function _default2() {
      return {};
    }
  },
  statusField: {
    type: String,
    default: "status"
  },
  nameField: {
    type: String,
    default: "name"
  },
  flagField: {
    type: String,
    default: "flags"
  },
  flagNameField: {
    type: String,
    default: "name"
  },
  flagContentField: {
    type: String,
    default: "content"
  },
  flagStatusField: {
    type: String,
    default: "status"
  },
  timeField: {
    type: String,
    default: "time"
  },
  data: [Object, Array],
  space: Number,
  start: {
    type: Number,
    default: -1
  }
});
var Milestone = defineComponent({
  name: $prefix + "Milestone",
  props: milestoneProps,
  setup: function setup(props, context) {
    return $setup({
      props,
      context,
      template
    });
  }
});
var version = "3.13.0";
Milestone.install = function(Vue) {
  Vue.component(Milestone.name, Milestone);
};
Milestone.version = version;
export {
  Milestone as default
};
