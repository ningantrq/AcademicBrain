import { renderless, api } from "@opentiny/vue-renderless/milestone/vue";
import { defineComponent, props, setup as _setup } from "@opentiny/vue-common";
import Tooltip from "@opentiny/vue-tooltip";
import { iconYes } from "@opentiny/vue-icon";
import { resolveComponent, openBlock, createElementBlock, createVNode, Fragment, renderList, normalizeStyle, normalizeClass, renderSlot, createElementVNode, createBlock, toDisplayString, createCommentVNode } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  components: {
    Tooltip,
    IconYes: iconYes()
  },
  props: [].concat(props, ["solid", "start", "lineStyle", "timeField", "showNumber", "flagBefore", "completedField", "milestonesStatus", "statusField", "nameField", "flagField", "flagNameField", "flagContentField", "flagStatusField", "data", "space"]),
  emits: ["click", "flagclick", "flag-click"],
  // deprecated 原事件flagclick v3.5.0废弃，v3.17.0移除；移除原因：命名规范
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  class: "tiny-milestone"
};
var _hoisted_2 = ["onClick"];
var _hoisted_3 = {
  key: 1
};
var _hoisted_4 = {
  key: 0
};
var _hoisted_5 = ["onMouseenter", "onClick"];
var _hoisted_6 = {
  key: 0
};
var _hoisted_7 = {
  key: 1,
  class: "content"
};
var _hoisted_8 = {
  class: "tiny-milestone__description"
};
var _hoisted_9 = {
  class: "tiny-milestone__description-name"
};
var _hoisted_10 = {
  class: "tiny-milestone__description-status"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_tooltip = resolveComponent("tooltip");
  var _component_icon_yes = resolveComponent("icon-yes");
  return openBlock(), createElementBlock("div", _hoisted_1, [createVNode(_component_tooltip, {
    ref: "tooltip",
    type: "normal",
    placement: "top",
    content: _ctx.state.tipContent
  }, null, 8, ["content"]), (openBlock(true), createElementBlock(
    Fragment,
    null,
    renderList(_ctx.data, function(node, index) {
      return openBlock(), createElementBlock(
        "div",
        {
          key: index,
          style: normalizeStyle({
            width: _ctx.space ? _ctx.space + "px" : 100 / _ctx.data.length + "%"
          }),
          class: normalizeClass(["tiny-milestone__node", {
            "is-solid": _ctx.solid
          }, "node-status-" + node[_ctx.statusField]])
        },
        [renderSlot(_ctx.$slots, "top", {
          slotScope: node,
          topSlotClass: "top-slot-class"
        }), createElementVNode("div", {
          style: normalizeStyle(_ctx.getMileIcon(node)),
          class: normalizeClass([[node[_ctx.statusField] === _ctx.completedField && !_ctx.solid ? "is-completed" : "", "status-" + node[_ctx.statusField]], "tiny-milestone__icon tiny-milestone__icon-custom"]),
          onClick: function onClick($event) {
            return _ctx.handleClick({
              index,
              node
            });
          }
        }, [renderSlot(_ctx.$slots, "icon", {
          slotScope: node
        }, function() {
          return [node[_ctx.statusField] === _ctx.completedField ? (openBlock(), createBlock(_component_icon_yes, {
            key: 0,
            class: "tiny-svg-size"
          })) : (openBlock(), createElementBlock(
            "span",
            _hoisted_3,
            toDisplayString(_ctx.showNumber ? index + _ctx.start : ""),
            1
            /* TEXT */
          ))];
        })], 14, _hoisted_2), createElementVNode(
          "div",
          {
            class: normalizeClass(["tiny-milestone__line", {
              "tiny-milestone__line-end": index === _ctx.data.length - 1,
              "tiny-milestone__line-completed-custom": node[_ctx.statusField] === "completed"
            }]),
            style: normalizeStyle(_ctx.getLineColor(node[_ctx.statusField]))
          },
          [index < _ctx.data.length - 1 ? (openBlock(), createElementBlock("div", _hoisted_4, [(openBlock(true), createElementBlock(
            Fragment,
            null,
            renderList(_ctx.getMileContent({
              data: _ctx.data,
              index
            }), function(flag, idx) {
              return openBlock(), createElementBlock(
                "div",
                {
                  style: normalizeStyle({
                    left: "calc(" + 100 / (_ctx.data[_ctx.flagBefore ? index : index + 1][_ctx.flagField].length + 1) * (idx + 1) + "% - 29px)"
                  }),
                  key: idx,
                  class: normalizeClass(["tiny-milestone__flag", "flag-status-" + flag[_ctx.flagStatusField]])
                },
                [createElementVNode("div", {
                  style: normalizeStyle({
                    background: _ctx.milestonesStatus[flag[_ctx.flagStatusField]]
                  }),
                  class: "tiny-milestone__flag-content",
                  onMouseleave: _cache[0] || (_cache[0] = function($event) {
                    return _ctx.flagOperate({
                      over: false
                    });
                  }),
                  onMouseenter: function onMouseenter($event) {
                    return _ctx.flagOperate({
                      event: $event,
                      text: flag[_ctx.flagContentField],
                      over: true
                    });
                  },
                  onClick: function onClick($event) {
                    return _ctx.handleFlagClick({
                      idx,
                      flag
                    });
                  }
                }, [renderSlot(_ctx.$slots, "flag", {
                  slotScope: flag
                }, function() {
                  return [flag[_ctx.flagNameField] ? (openBlock(), createElementBlock(
                    "p",
                    _hoisted_6,
                    toDisplayString(flag[_ctx.flagNameField]),
                    1
                    /* TEXT */
                  )) : createCommentVNode("v-if", true), flag[_ctx.flagContentField] ? (openBlock(), createElementBlock(
                    "p",
                    _hoisted_7,
                    toDisplayString(flag[_ctx.flagContentField]),
                    1
                    /* TEXT */
                  )) : createCommentVNode("v-if", true)];
                })], 44, _hoisted_5), createElementVNode(
                  "div",
                  {
                    style: normalizeStyle({
                      background: _ctx.milestonesStatus[flag[_ctx.flagStatusField]]
                    }),
                    class: "tiny-milestone__flag-line"
                  },
                  [createElementVNode(
                    "div",
                    {
                      style: normalizeStyle({
                        "border-color": _ctx.milestonesStatus[flag[_ctx.flagStatusField]]
                      }),
                      class: "tiny-milestone__dot"
                    },
                    null,
                    4
                    /* STYLE */
                  )],
                  4
                  /* STYLE */
                )],
                6
                /* CLASS, STYLE */
              );
            }),
            128
            /* KEYED_FRAGMENT */
          ))])) : createCommentVNode("v-if", true)],
          6
          /* CLASS, STYLE */
        ), createElementVNode("div", _hoisted_8, [renderSlot(_ctx.$slots, "bottom", {
          slotScope: node
        }, function() {
          return [createElementVNode(
            "div",
            _hoisted_9,
            toDisplayString(node[_ctx.nameField]),
            1
            /* TEXT */
          ), createElementVNode(
            "div",
            _hoisted_10,
            toDisplayString(node[_ctx.timeField]),
            1
            /* TEXT */
          )];
        })])],
        6
        /* CLASS, STYLE */
      );
    }),
    128
    /* KEYED_FRAGMENT */
  ))]);
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  pc as default
};
