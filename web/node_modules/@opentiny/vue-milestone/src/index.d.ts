export declare const $constants: {
    DEFAULT_COLOR: string;
    DEFAULT_BACK_COLOR: string;
    BOX_SHADOW_PX: string;
    FLAG_CONTENT_CLS: string;
};
export declare const milestoneProps: {
    _constants: {
        type: ObjectConstructor;
        default: () => {
            DEFAULT_COLOR: string;
            DEFAULT_BACK_COLOR: string;
            BOX_SHADOW_PX: string;
            FLAG_CONTENT_CLS: string;
        };
    };
    showNumber: {
        type: BooleanConstructor;
        default: boolean;
    };
    solid: {
        type: BooleanConstructor;
        default: boolean;
    };
    lineStyle: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    flagBefore: {
        type: BooleanConstructor;
        default: boolean;
    };
    completedField: {
        type: StringConstructor;
        default: string;
    };
    milestonesStatus: {
        type: ObjectConstructor;
        default: () => {};
    };
    statusField: {
        type: StringConstructor;
        default: string;
    };
    nameField: {
        type: StringConstructor;
        default: string;
    };
    flagField: {
        type: StringConstructor;
        default: string;
    };
    flagNameField: {
        type: StringConstructor;
        default: string;
    };
    flagContentField: {
        type: StringConstructor;
        default: string;
    };
    flagStatusField: {
        type: StringConstructor;
        default: string;
    };
    timeField: {
        type: StringConstructor;
        default: string;
    };
    data: (ObjectConstructor | ArrayConstructor)[];
    space: NumberConstructor;
    start: {
        type: NumberConstructor;
        default: number;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
};
declare const _default: import("@vue/runtime-core").DefineComponent<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            DEFAULT_COLOR: string;
            DEFAULT_BACK_COLOR: string;
            BOX_SHADOW_PX: string;
            FLAG_CONTENT_CLS: string;
        };
    };
    showNumber: {
        type: BooleanConstructor;
        default: boolean;
    };
    solid: {
        type: BooleanConstructor;
        default: boolean;
    };
    lineStyle: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    flagBefore: {
        type: BooleanConstructor;
        default: boolean;
    };
    completedField: {
        type: StringConstructor;
        default: string;
    };
    milestonesStatus: {
        type: ObjectConstructor;
        default: () => {};
    };
    statusField: {
        type: StringConstructor;
        default: string;
    };
    nameField: {
        type: StringConstructor;
        default: string;
    };
    flagField: {
        type: StringConstructor;
        default: string;
    };
    flagNameField: {
        type: StringConstructor;
        default: string;
    };
    flagContentField: {
        type: StringConstructor;
        default: string;
    };
    flagStatusField: {
        type: StringConstructor;
        default: string;
    };
    timeField: {
        type: StringConstructor;
        default: string;
    };
    data: (ObjectConstructor | ArrayConstructor)[];
    space: NumberConstructor;
    start: {
        type: NumberConstructor;
        default: number;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            DEFAULT_COLOR: string;
            DEFAULT_BACK_COLOR: string;
            BOX_SHADOW_PX: string;
            FLAG_CONTENT_CLS: string;
        };
    };
    showNumber: {
        type: BooleanConstructor;
        default: boolean;
    };
    solid: {
        type: BooleanConstructor;
        default: boolean;
    };
    lineStyle: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    flagBefore: {
        type: BooleanConstructor;
        default: boolean;
    };
    completedField: {
        type: StringConstructor;
        default: string;
    };
    milestonesStatus: {
        type: ObjectConstructor;
        default: () => {};
    };
    statusField: {
        type: StringConstructor;
        default: string;
    };
    nameField: {
        type: StringConstructor;
        default: string;
    };
    flagField: {
        type: StringConstructor;
        default: string;
    };
    flagNameField: {
        type: StringConstructor;
        default: string;
    };
    flagContentField: {
        type: StringConstructor;
        default: string;
    };
    flagStatusField: {
        type: StringConstructor;
        default: string;
    };
    timeField: {
        type: StringConstructor;
        default: string;
    };
    data: (ObjectConstructor | ArrayConstructor)[];
    space: NumberConstructor;
    start: {
        type: NumberConstructor;
        default: number;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    tiny_mode_root: boolean;
    _constants: Record<string, any>;
    solid: boolean;
    start: number;
    nameField: string;
    showNumber: boolean;
    lineStyle: string | number;
    timeField: string;
    flagBefore: boolean;
    completedField: string;
    milestonesStatus: Record<string, any>;
    statusField: string;
    flagField: string;
    flagNameField: string;
    flagContentField: string;
    flagStatusField: string;
}, {}>;
export default _default;
