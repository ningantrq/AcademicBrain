export declare const $constants: {
    MODAL_STATUS: {
        INFO: string;
        SUCCESS: string;
        WARNING: string;
        ERROR: string;
        LOADING: string;
    };
    NODAL_TYPE: {
        ALERT: string;
        CONFIRM: string;
        MESSAGE: string;
    };
    STATUS_MAPPING_CLASSS: {
        INFO: string;
        SUCCESS: string;
        WARNING: string;
        ERROR: string;
        LOADING: string;
    };
};
export declare const modalProps: {
    _constants: {
        type: ObjectConstructor;
        default: () => {
            MODAL_STATUS: {
                INFO: string;
                SUCCESS: string;
                WARNING: string;
                ERROR: string;
                LOADING: string;
            };
            NODAL_TYPE: {
                ALERT: string;
                CONFIRM: string;
                MESSAGE: string;
            };
            STATUS_MAPPING_CLASSS: {
                INFO: string;
                SUCCESS: string;
                WARNING: string;
                ERROR: string;
                LOADING: string;
            };
        };
    };
    animat: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    beforeClose: FunctionConstructor;
    duration: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => number;
    };
    escClosable: BooleanConstructor;
    events: ObjectConstructor;
    fullscreen: BooleanConstructor;
    height: (StringConstructor | NumberConstructor)[];
    id: StringConstructor;
    isFormReset: {
        type: BooleanConstructor;
        default: boolean;
    };
    lockScroll: BooleanConstructor;
    lockView: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    marginSize: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    mask: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    maskClosable: BooleanConstructor;
    message: (StringConstructor | FunctionConstructor)[];
    minHeight: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => number;
    };
    minWidth: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => number;
    };
    modelValue: BooleanConstructor;
    resize: BooleanConstructor;
    showFooter: BooleanConstructor;
    showHeader: {
        type: BooleanConstructor;
        default: boolean;
    };
    status: {
        type: (ObjectConstructor | StringConstructor)[];
        default: string;
    };
    title: StringConstructor;
    top: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    type: {
        type: StringConstructor;
        default: string;
    };
    vSize: StringConstructor;
    width: (StringConstructor | NumberConstructor)[];
    zIndex: (StringConstructor | NumberConstructor)[];
    description: StringConstructor;
    options: ArrayConstructor;
    showClose: {
        type: BooleanConstructor;
        default: boolean;
    };
    confirmContent: StringConstructor;
    cancelContent: StringConstructor;
    position: {
        type: StringConstructor;
        default: string;
        validator(val: string): boolean;
    };
    customClass: StringConstructor;
    confirmBtnProps: {
        type: ObjectConstructor;
        default: () => {};
    };
    cancelBtnProps: {
        type: ObjectConstructor;
        default: () => {};
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
};
declare const _default: import("@vue/runtime-core").DefineComponent<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            MODAL_STATUS: {
                INFO: string;
                SUCCESS: string;
                WARNING: string;
                ERROR: string;
                LOADING: string;
            };
            NODAL_TYPE: {
                ALERT: string;
                CONFIRM: string;
                MESSAGE: string;
            };
            STATUS_MAPPING_CLASSS: {
                INFO: string;
                SUCCESS: string;
                WARNING: string;
                ERROR: string;
                LOADING: string;
            };
        };
    };
    animat: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    beforeClose: FunctionConstructor;
    duration: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => number;
    };
    escClosable: BooleanConstructor;
    events: ObjectConstructor;
    fullscreen: BooleanConstructor;
    height: (StringConstructor | NumberConstructor)[];
    id: StringConstructor;
    isFormReset: {
        type: BooleanConstructor;
        default: boolean;
    };
    lockScroll: BooleanConstructor;
    lockView: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    marginSize: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    mask: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    maskClosable: BooleanConstructor;
    message: (StringConstructor | FunctionConstructor)[];
    minHeight: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => number;
    };
    minWidth: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => number;
    };
    modelValue: BooleanConstructor;
    resize: BooleanConstructor;
    showFooter: BooleanConstructor;
    showHeader: {
        type: BooleanConstructor;
        default: boolean;
    };
    status: {
        type: (ObjectConstructor | StringConstructor)[];
        default: string;
    };
    title: StringConstructor;
    top: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    type: {
        type: StringConstructor;
        default: string;
    };
    vSize: StringConstructor;
    width: (StringConstructor | NumberConstructor)[];
    zIndex: (StringConstructor | NumberConstructor)[];
    description: StringConstructor;
    options: ArrayConstructor;
    showClose: {
        type: BooleanConstructor;
        default: boolean;
    };
    confirmContent: StringConstructor;
    cancelContent: StringConstructor;
    position: {
        type: StringConstructor;
        default: string;
        validator(val: string): boolean;
    };
    customClass: StringConstructor;
    confirmBtnProps: {
        type: ObjectConstructor;
        default: () => {};
    };
    cancelBtnProps: {
        type: ObjectConstructor;
        default: () => {};
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            MODAL_STATUS: {
                INFO: string;
                SUCCESS: string;
                WARNING: string;
                ERROR: string;
                LOADING: string;
            };
            NODAL_TYPE: {
                ALERT: string;
                CONFIRM: string;
                MESSAGE: string;
            };
            STATUS_MAPPING_CLASSS: {
                INFO: string;
                SUCCESS: string;
                WARNING: string;
                ERROR: string;
                LOADING: string;
            };
        };
    };
    animat: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    beforeClose: FunctionConstructor;
    duration: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => number;
    };
    escClosable: BooleanConstructor;
    events: ObjectConstructor;
    fullscreen: BooleanConstructor;
    height: (StringConstructor | NumberConstructor)[];
    id: StringConstructor;
    isFormReset: {
        type: BooleanConstructor;
        default: boolean;
    };
    lockScroll: BooleanConstructor;
    lockView: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    marginSize: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    mask: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    maskClosable: BooleanConstructor;
    message: (StringConstructor | FunctionConstructor)[];
    minHeight: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => number;
    };
    minWidth: {
        type: (StringConstructor | NumberConstructor)[];
        default: () => number;
    };
    modelValue: BooleanConstructor;
    resize: BooleanConstructor;
    showFooter: BooleanConstructor;
    showHeader: {
        type: BooleanConstructor;
        default: boolean;
    };
    status: {
        type: (ObjectConstructor | StringConstructor)[];
        default: string;
    };
    title: StringConstructor;
    top: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    type: {
        type: StringConstructor;
        default: string;
    };
    vSize: StringConstructor;
    width: (StringConstructor | NumberConstructor)[];
    zIndex: (StringConstructor | NumberConstructor)[];
    description: StringConstructor;
    options: ArrayConstructor;
    showClose: {
        type: BooleanConstructor;
        default: boolean;
    };
    confirmContent: StringConstructor;
    cancelContent: StringConstructor;
    position: {
        type: StringConstructor;
        default: string;
        validator(val: string): boolean;
    };
    customClass: StringConstructor;
    confirmBtnProps: {
        type: ObjectConstructor;
        default: () => {};
    };
    cancelBtnProps: {
        type: ObjectConstructor;
        default: () => {};
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    type: string;
    top: string | number;
    tiny_mode_root: boolean;
    _constants: Record<string, any>;
    resize: boolean;
    minWidth: string | number;
    marginSize: string | number;
    minHeight: string | number;
    mask: boolean;
    animat: boolean;
    duration: string | number;
    escClosable: boolean;
    fullscreen: boolean;
    isFormReset: boolean;
    lockScroll: boolean;
    lockView: boolean;
    maskClosable: boolean;
    modelValue: boolean;
    showFooter: boolean;
    showHeader: boolean;
    status: string | Record<string, any>;
    showClose: boolean;
    position: string;
    confirmBtnProps: Record<string, any>;
    cancelBtnProps: Record<string, any>;
}, {}>;
export default _default;
