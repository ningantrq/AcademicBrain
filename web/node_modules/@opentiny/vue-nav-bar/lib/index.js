import { createVNode, resolveComponent } from "vue";
import { defineComponent, $prefix, h } from "@opentiny/vue-common";
import { iconChevronLeft, iconPlus } from "@opentiny/vue-icon";
import "@opentiny/vue-theme-mobile/nav-bar/index.css";
var _sfc_main = /* @__PURE__ */ defineComponent({
  name: $prefix + "NavBar",
  props: {
    tiny_renderless: Function,
    title: String,
    subTitle: String,
    fixed: Boolean,
    zIndex: [Number, String],
    leftText: String,
    rightText: String,
    leftArrow: Boolean,
    rightArrow: Boolean
  },
  components: {
    LeftIcon: iconChevronLeft(),
    RightIcon: iconPlus()
  },
  render: function render() {
    var leftArrow = this.leftArrow, rightArrow = this.rightArrow, leftText = this.leftText, rightText = this.rightText, $listeners = this.$listeners, $attrs = this.$attrs, title = this.title, zIndex = this.zIndex, fixed = this.fixed, subTitle = this.subTitle;
    var $slots = "$scopedSlots" in this ? this.$slots : this.$slots;
    function noop() {
    }
    function LeftPart() {
      if ($slots.left)
        return $slots.left();
      return [leftArrow && createVNode(resolveComponent("left-icon"), {
        "class": "tiny-mobile-nav-bar__icon left-icon"
      }, null), leftText && h("span", {
        class: "tiny-mobile-nav-bar__text left-text"
      }, leftText)];
    }
    function RightPart() {
      if ($slots.right)
        return $slots.right();
      return [rightArrow && createVNode(resolveComponent("right-icon"), {
        "class": "tiny-mobile-nav-bar__icon right-icon"
      }, null), rightText && createVNode("span", {
        "class": "tiny-mobile-nav-bar__text right-text"
      }, [rightText])];
    }
    var clickLeftListener = $attrs && $attrs.onClickLeft;
    var clickRightListener = $attrs && $attrs.onClickRight;
    if (!clickLeftListener) {
      clickLeftListener = $listeners && $listeners["click-left"] || noop;
    }
    if (!clickRightListener) {
      clickRightListener = $listeners && $listeners["click-right"] || noop;
    }
    return createVNode("div", {
      "style": {
        zIndex
      },
      "class": {
        "tiny-mobile-nav-bar": true,
        "tiny-mobile-nav-bar__fixed": fixed
      }
    }, [createVNode("div", {
      "class": "tiny-mobile-nav-bar__left",
      "onClick": clickLeftListener
    }, [LeftPart()]), createVNode("div", {
      "class": "tiny-mobile-nav-bar__title"
    }, [createVNode("p", {
      "class": "main-title"
    }, [$slots.default ? $slots.default() : title]), createVNode("p", {
      "class": {
        "is-show-subtitle": subTitle,
        "sub-title": true
      }
    }, [subTitle])]), createVNode("div", {
      "class": "tiny-mobile-nav-bar__right",
      "onClick": clickRightListener
    }, [RightPart()])]);
  }
});
var version = "3.13.0";
_sfc_main.install = function(Vue) {
  Vue.component(_sfc_main.name, _sfc_main);
};
_sfc_main.version = version;
export {
  _sfc_main as default
};
