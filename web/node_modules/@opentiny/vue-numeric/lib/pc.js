import { renderless, api } from "@opentiny/vue-renderless/numeric/vue";
import { defineComponent, directive, props, setup as _setup } from "@opentiny/vue-common";
import bind from "@opentiny/vue-renderless/common/deps/repeat-click";
import { iconChevronDown, iconChevronUp, iconMinus, iconPlus } from "@opentiny/vue-icon";
import "@opentiny/vue-theme/numeric/index.css";
import { resolveDirective, openBlock, createElementBlock, withModifiers, normalizeClass, withDirectives, withKeys, createBlock, resolveDynamicComponent, createCommentVNode, toDisplayString, createElementVNode } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  directives: directive({
    repeatClick: {
      bind
    }
  }),
  components: {
    IconChevronDown: iconChevronDown(),
    IconChevronUp: iconChevronUp(),
    IconMinus: iconMinus(),
    IconPlus: iconPlus()
  },
  props: [].concat(props, ["step", "tabindex", "stepStrictly", "max", "min", "modelValue", "disabled", "size", "controls", "controlsPosition", "name", "label", "placeholder", "precision", "circulate", "mouseWheel", "validateEvent", "allowEmpty", "format", "unit", "stringMode", "holdZero", "plugin", "modelTruncation", "strictInput", "hideUnit", "unitCenter", "displayOnly", "showLeft", "showEmptyValue"]),
  emits: ["update:modelValue", "change", "blur", "focus", "paste-error"],
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  key: 2,
  class: "tiny-numeric__unit"
};
var _hoisted_2 = {
  class: "tiny-numeric-display-only"
};
var _hoisted_3 = {
  key: 0,
  class: "tiny-numeric-display-only__content"
};
var _hoisted_4 = {
  class: "tiny-numeric-display-only__value"
};
var _hoisted_5 = {
  key: 0,
  class: "tiny-numeric-display-only__unit"
};
var _hoisted_6 = {
  key: 1
};
var _hoisted_7 = ["tabindex", "value", "placeholder", "max", "min", "name", "aria-label"];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _directive_repeat_click = resolveDirective("repeat-click");
  return openBlock(), createElementBlock(
    "div",
    {
      onDragstart: _cache[8] || (_cache[8] = withModifiers(function() {
      }, ["prevent"])),
      class: normalizeClass(["tiny-numeric", _ctx.state.inputSize ? "tiny-numeric--" + _ctx.state.inputSize : "", {
        "is-disabled": _ctx.state.inputDisabled
      }, {
        "is-without-controls": !_ctx.controls || _ctx.unit && _ctx.hideUnit
      }, {
        "is-controls-right": _ctx.state.controlsAtRight
      }, {
        "is-display-only": _ctx.state.isDisplayOnly
      }]),
      onMousewheel: _cache[9] || (_cache[9] = withModifiers(function() {
        return _ctx.mouseEvent && _ctx.mouseEvent.apply(_ctx, arguments);
      }, ["prevent"]))
    },
    [_ctx.controls && !_ctx.unit ? withDirectives((openBlock(), createElementBlock(
      "span",
      {
        key: 0,
        class: normalizeClass(["tiny-numeric__decrease", {
          "is-disabled": _ctx.state.minDisabled
        }]),
        role: "button",
        onKeydown: _cache[0] || (_cache[0] = withKeys(function() {
          return _ctx.decrease && _ctx.decrease.apply(_ctx, arguments);
        }, ["enter"]))
      },
      [(openBlock(), createBlock(resolveDynamicComponent(_ctx.state.controlsAtRight ? "icon-chevron-down" : "icon-minus"), {
        class: "tiny-svg-size"
      }))],
      34
      /* CLASS, NEED_HYDRATION */
    )), [[_directive_repeat_click, _ctx.decrease]]) : createCommentVNode("v-if", true), _ctx.controls && !_ctx.unit ? withDirectives((openBlock(), createElementBlock(
      "span",
      {
        key: 1,
        class: normalizeClass(["tiny-numeric__increase", {
          "is-disabled": _ctx.state.maxDisabled
        }]),
        role: "button",
        onKeydown: _cache[1] || (_cache[1] = withKeys(function() {
          return _ctx.increase && _ctx.increase.apply(_ctx, arguments);
        }, ["enter"]))
      },
      [(openBlock(), createBlock(resolveDynamicComponent(_ctx.state.controlsAtRight ? "icon-chevron-up" : "icon-plus"), {
        class: "tiny-svg-size"
      }))],
      34
      /* CLASS, NEED_HYDRATION */
    )), [[_directive_repeat_click, _ctx.increase]]) : createCommentVNode("v-if", true), _ctx.unit && !_ctx.hideUnit ? (openBlock(), createElementBlock(
      "div",
      _hoisted_1,
      toDisplayString(_ctx.unit),
      1
      /* TEXT */
    )) : createCommentVNode("v-if", true), createElementVNode(
      "div",
      {
        class: normalizeClass(["tiny-numeric__input", {
          "tiny-numeric__read-only": _ctx.state.isDisplayOnly
        }, _ctx.state.inputSize ? "tiny-input-" + _ctx.state.inputSize : "", _ctx.state.inputDisabled ? "is-disabled" : "", {
          "has-unit": _ctx.unit && !_ctx.hideUnit
        }, {
          "text-align-left": _ctx.unit && !_ctx.unitCenter
        }, {
          "tiny-numeric__controls-position": _ctx.controlsPosition
        }])
      },
      [createElementVNode("span", _hoisted_2, [_ctx.state.isDisplayOnly ? (openBlock(), createElementBlock("span", _hoisted_3, [createElementVNode(
        "span",
        _hoisted_4,
        toDisplayString(_ctx.state.displayOnlyText),
        1
        /* TEXT */
      ), _ctx.unit && !_ctx.hideUnit && _ctx.state.currentValue ? (openBlock(), createElementBlock(
        "span",
        _hoisted_5,
        toDisplayString(_ctx.unit),
        1
        /* TEXT */
      )) : _ctx.unit && !_ctx.hideUnit ? (openBlock(), createElementBlock(
        "span",
        _hoisted_6,
        toDisplayString(_ctx.unit),
        1
        /* TEXT */
      )) : createCommentVNode("v-if", true)])) : createCommentVNode("v-if", true), createElementVNode("input", {
        tabindex: _ctx.tabindex,
        class: normalizeClass(["tiny-numeric__input-inner", {
          "tiny-numeric__show-left": !_ctx.controls && _ctx.showLeft
        }]),
        ref: "input",
        value: _ctx.state.displayValue,
        placeholder: _ctx.placeholder,
        max: _ctx.max,
        min: _ctx.min,
        name: _ctx.name,
        "aria-label": _ctx.label,
        onKeydown: [_cache[2] || (_cache[2] = withKeys(withModifiers(function() {
          return _ctx.increase && _ctx.increase.apply(_ctx, arguments);
        }, ["prevent"]), ["up"])), _cache[3] || (_cache[3] = withKeys(withModifiers(function() {
          return _ctx.decrease && _ctx.decrease.apply(_ctx, arguments);
        }, ["prevent"]), ["down"]))],
        onBlur: _cache[4] || (_cache[4] = function() {
          return _ctx.handleBlur && _ctx.handleBlur.apply(_ctx, arguments);
        }),
        onFocus: _cache[5] || (_cache[5] = function() {
          return _ctx.handleFocus && _ctx.handleFocus.apply(_ctx, arguments);
        }),
        onInput: _cache[6] || (_cache[6] = function() {
          return _ctx.handleInput && _ctx.handleInput.apply(_ctx, arguments);
        }),
        onChange: _cache[7] || (_cache[7] = function() {
          return _ctx.handleInputChange && _ctx.handleInputChange.apply(_ctx, arguments);
        })
      }, null, 42, _hoisted_7)])],
      2
      /* CLASS */
    )],
    34
    /* CLASS, NEED_HYDRATION */
  );
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  pc as default
};
