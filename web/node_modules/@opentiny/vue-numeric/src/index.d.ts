export declare const $constants: {
    MAX: string;
    MIN: string;
    VALUENOW: string;
    DISABLED: string;
    KEY: string;
    VALUE: string;
    EVENT_NAME: {
        blur: string;
        change: string;
    };
    COMPONENT_NAME: string;
};
export declare const numericProps: {
    _constants: {
        type: ObjectConstructor;
        default: () => {
            MAX: string;
            MIN: string;
            VALUENOW: string;
            DISABLED: string;
            KEY: string;
            VALUE: string;
            EVENT_NAME: {
                blur: string;
                change: string;
            };
            COMPONENT_NAME: string;
        };
    };
    allowEmpty: {
        type: BooleanConstructor;
        default: boolean;
    };
    circulate: BooleanConstructor;
    controls: {
        type: BooleanConstructor;
        default: boolean;
    };
    controlsPosition: {
        type: StringConstructor;
        default: string;
    };
    disabled: BooleanConstructor;
    format: (ObjectConstructor | StringConstructor)[];
    hideUnit: {
        type: BooleanConstructor;
        default: boolean;
    };
    holdZero: {
        type: BooleanConstructor;
        default: boolean;
    };
    label: StringConstructor;
    max: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    min: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    modelTruncation: {
        type: BooleanConstructor;
        default: boolean;
    };
    modelValue: (StringConstructor | NumberConstructor | undefined)[];
    mouseWheel: BooleanConstructor;
    name: StringConstructor;
    placeholder: StringConstructor;
    plugin: FunctionConstructor;
    precision: {
        type: NumberConstructor;
        validator(val: any): boolean;
    };
    size: StringConstructor;
    step: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    stepStrictly: {
        type: BooleanConstructor;
        default: boolean;
    };
    strictInput: {
        type: BooleanConstructor;
        default: boolean;
    };
    stringMode: BooleanConstructor;
    tabindex: {
        type: StringConstructor;
        default: string;
    };
    theme: {
        type: StringConstructor;
        default: string;
    };
    unit: StringConstructor;
    unitCenter: {
        type: BooleanConstructor;
        default: boolean;
    };
    validateEvent: {
        type: BooleanConstructor;
        default: boolean;
    };
    displayOnly: {
        type: BooleanConstructor;
        default: boolean;
    };
    showLeft: {
        type: BooleanConstructor;
        default: boolean;
    };
    showEmptyValue: {
        type: BooleanConstructor;
        default: boolean;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
};
declare const _default: (props: Record<string, any> & {}) => any;
export default _default;
