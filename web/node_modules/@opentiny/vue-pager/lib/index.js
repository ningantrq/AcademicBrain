function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
import { defineComponent, $prefix, $setup, $props } from "@opentiny/vue-common";
import PcTemplate from "./pc.js";
import MobileFirstTemplate from "./mobile-first.js";
import "@opentiny/vue-theme/pager/index.css";
var template = function template2(mode) {
  var _process$env;
  var tinyMode = typeof process === "object" ? (_process$env = process.env) == null ? void 0 : _process$env.TINY_MODE : null;
  if ("pc" === (tinyMode || mode)) {
    return PcTemplate;
  }
  if ("mobile-first" === (tinyMode || mode)) {
    return MobileFirstTemplate;
  }
  return PcTemplate;
};
var pagerProps = _extends({}, $props, {
  accurateJumper: {
    type: Boolean,
    default: function _default() {
      return true;
    }
  },
  appendToBody: {
    type: Boolean,
    default: function _default2() {
      return true;
    }
  },
  currentPage: {
    type: Number,
    default: function _default3() {
      return 1;
    }
  },
  disabled: {
    type: Boolean,
    default: function _default4() {
      return false;
    }
  },
  hideOnSinglePage: Boolean,
  isBeforePageChange: Boolean,
  layout: String,
  mode: String,
  nextText: String,
  pageCount: Number,
  pageSize: {
    type: Number,
    default: function _default5() {
      return 10;
    }
  },
  pageSizes: {
    type: Array,
    default: function _default6() {
      return [10, 20, 30, 40, 50, 100];
    }
  },
  pagerCount: {
    type: Number,
    validator: function validator(value) {
      return (value | 0) === value && value > 2 && value < 22 && value % 2 === 1;
    },
    default: function _default7() {
      return 7;
    }
  },
  popperAppendToBody: {
    type: Boolean,
    default: function _default8() {
      return true;
    }
  },
  showTotalLoading: {
    type: Boolean,
    default: function _default9() {
      return false;
    }
  },
  customTotal: {
    type: [Boolean, String],
    default: function _default10() {
      return false;
    }
  },
  popperClass: String,
  prevText: String,
  total: Number,
  size: {
    type: String,
    default: ""
  },
  align: {
    // 分页对齐方式 【left，center，right】
    type: String,
    validator: function validator2(value) {
      return ["left", "center", "right"].includes(value);
    }
  }
});
var Pager = defineComponent({
  name: $prefix + "Pager",
  props: pagerProps,
  setup: function setup(props, context) {
    return $setup({
      props,
      context,
      template
    });
  }
});
var version = "3.13.0";
Pager.install = function(Vue) {
  Vue.component(Pager.name, Pager);
};
Pager.version = version;
export {
  Pager as default
};
