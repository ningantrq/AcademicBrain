import { renderless, api } from "@opentiny/vue-renderless/panel/vue";
import { defineComponent, props, setup as _setup } from "@opentiny/vue-common";
import { iconChevronDown, iconChevronRight } from "@opentiny/vue-icon";
import { openBlock, createElementBlock, createElementVNode, normalizeClass, renderSlot, createBlock, resolveDynamicComponent, toDisplayString, createVNode, Transition, withCtx, withDirectives, vShow } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  components: {
    IconChevronDown: iconChevronDown(),
    IconChevronRight: iconChevronRight()
  },
  props: [].concat(props, ["expand", "foot", "head", "iconOpen", "iconClose", "isToggle", "transition"]),
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  class: "tiny-panel"
};
var _hoisted_2 = {
  class: "tiny-panel__title"
};
var _hoisted_3 = {
  class: "tiny-panel__body"
};
var _hoisted_4 = {
  class: "tiny-panel__footer"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", _hoisted_1, [createElementVNode(
    "div",
    {
      class: normalizeClass(["tiny-panel__head", {
        "tiny-panel__head-toggle": _ctx.isToggle,
        "tiny-panel__collapse": !_ctx.state.isShow
      }]),
      onClick: _cache[0] || (_cache[0] = function() {
        return _ctx.toggle && _ctx.toggle.apply(_ctx, arguments);
      })
    },
    [renderSlot(_ctx.$slots, "collapse", {
      slotScope: {
        state: _ctx.state,
        iconOpen: _ctx.iconOpen,
        iconClose: _ctx.iconClose,
        isToggle: _ctx.isToggle
      }
    }, function() {
      return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.state.isShow ? _ctx.iconOpen : _ctx.iconClose), {
        class: normalizeClass(["panel-icon", "tiny-svg-size", {
          "head-span": _ctx.state.isShow
        }])
      }, null, 8, ["class"]))];
    }), renderSlot(_ctx.$slots, "header", {}, function() {
      return [createElementVNode(
        "h3",
        _hoisted_2,
        toDisplayString(_ctx.head),
        1
        /* TEXT */
      )];
    })],
    2
    /* CLASS */
  ), createVNode(Transition, {
    name: _ctx.transition,
    persisted: ""
  }, {
    default: withCtx(function() {
      return [withDirectives(createElementVNode(
        "div",
        _hoisted_3,
        [renderSlot(_ctx.$slots, "default")],
        512
        /* NEED_PATCH */
      ), [[vShow, _ctx.state.isShow]])];
    }),
    _: 3
    /* FORWARDED */
  }, 8, ["name"]), renderSlot(_ctx.$slots, "footer", {}, function() {
    return [createElementVNode(
      "div",
      _hoisted_4,
      toDisplayString(_ctx.foot),
      1
      /* TEXT */
    )];
  })]);
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  pc as default
};
