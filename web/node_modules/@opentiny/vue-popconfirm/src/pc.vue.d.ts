declare const _default: import("@vue/runtime-core").DefineComponent<{
    _constants: {
        type: ObjectConstructor;
        default: () => {};
    };
    message: StringConstructor;
    customClass: StringConstructor;
    trigger: {
        type: StringConstructor;
        default: string;
        validator: (value: string) => boolean;
    };
    cancelButton: {
        type: BooleanConstructor;
        default: boolean;
    };
    title: StringConstructor;
    placement: {
        type: StringConstructor;
        default: string;
    };
    width: {
        type: (StringConstructor | NumberConstructor)[];
        default: string;
    };
    type: (ObjectConstructor | StringConstructor)[];
}, any, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, ("confirm" | "hide" | "show")[], "confirm" | "hide" | "show", import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    _constants: {
        type: ObjectConstructor;
        default: () => {};
    };
    message: StringConstructor;
    customClass: StringConstructor;
    trigger: {
        type: StringConstructor;
        default: string;
        validator: (value: string) => boolean;
    };
    cancelButton: {
        type: BooleanConstructor;
        default: boolean;
    };
    title: StringConstructor;
    placement: {
        type: StringConstructor;
        default: string;
    };
    width: {
        type: (StringConstructor | NumberConstructor)[];
        default: string;
    };
    type: (ObjectConstructor | StringConstructor)[];
}>> & {
    onConfirm?: ((...args: any[]) => any) | undefined;
    onHide?: ((...args: any[]) => any) | undefined;
    onShow?: ((...args: any[]) => any) | undefined;
}, {
    _constants: Record<string, any>;
    width: string | number;
    trigger: string;
    placement: string;
    cancelButton: boolean;
}, {}>;
export default _default;
