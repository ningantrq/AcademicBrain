import type { IPopoverApi } from '@opentiny/vue-renderless/types/popover.type';
declare const _default: import("@vue/runtime-core").DefineComponent<Readonly<{
    title?: any;
    transition?: any;
    disabled?: any;
    tiny_mode?: any;
    tiny_mode_root?: any;
    tiny_template?: any;
    tiny_renderless?: any;
    _constants?: any;
    tiny_theme?: any;
    tiny_chart_theme?: any;
    width?: any;
    height?: any;
    modelValue?: any;
    trigger?: any;
    tabindex?: any;
    visibleArrow?: any;
    arrowOffset?: any;
    placement?: any;
    popperClass?: any;
    appendToBody?: any;
    offset?: any;
    content?: any;
    popperOptions?: any;
    popper?: any;
    reference?: any;
    boundariesPadding?: any;
    closeDelay?: any;
    openDelay?: any;
}>, IPopoverApi, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, ("update:modelValue" | "hide" | "after-leave" | "created" | "after-enter" | "show")[], "update:modelValue" | "hide" | "after-leave" | "created" | "after-enter" | "show", import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<Readonly<{
    title?: any;
    transition?: any;
    disabled?: any;
    tiny_mode?: any;
    tiny_mode_root?: any;
    tiny_template?: any;
    tiny_renderless?: any;
    _constants?: any;
    tiny_theme?: any;
    tiny_chart_theme?: any;
    width?: any;
    height?: any;
    modelValue?: any;
    trigger?: any;
    tabindex?: any;
    visibleArrow?: any;
    arrowOffset?: any;
    placement?: any;
    popperClass?: any;
    appendToBody?: any;
    offset?: any;
    content?: any;
    popperOptions?: any;
    popper?: any;
    reference?: any;
    boundariesPadding?: any;
    closeDelay?: any;
    openDelay?: any;
}>>> & {
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
    onCreated?: ((...args: any[]) => any) | undefined;
    "onAfter-leave"?: ((...args: any[]) => any) | undefined;
    onHide?: ((...args: any[]) => any) | undefined;
    onShow?: ((...args: any[]) => any) | undefined;
    "onAfter-enter"?: ((...args: any[]) => any) | undefined;
}, {
    readonly title?: any;
    readonly transition?: any;
    readonly disabled?: any;
    readonly tiny_mode?: any;
    readonly tiny_mode_root?: any;
    readonly tiny_template?: any;
    readonly tiny_renderless?: any;
    readonly _constants?: any;
    readonly tiny_theme?: any;
    readonly tiny_chart_theme?: any;
    readonly width?: any;
    readonly height?: any;
    readonly modelValue?: any;
    readonly trigger?: any;
    readonly tabindex?: any;
    readonly visibleArrow?: any;
    readonly arrowOffset?: any;
    readonly placement?: any;
    readonly popperClass?: any;
    readonly appendToBody?: any;
    readonly offset?: any;
    readonly content?: any;
    readonly popperOptions?: any;
    readonly popper?: any;
    readonly reference?: any;
    readonly boundariesPadding?: any;
    readonly closeDelay?: any;
    readonly openDelay?: any;
}, {}>;
export default _default;
