import { renderless, api } from "@opentiny/vue-renderless/progress/vue";
import { defineComponent, props, setup as _setup } from "@opentiny/vue-common";
import { iconClose, iconSuccess, iconError, iconYes, iconWarning } from "@opentiny/vue-icon";
import { openBlock, createElementBlock, normalizeClass, createElementVNode, normalizeStyle, createVNode, Transition, withCtx, toDisplayString, createCommentVNode, Fragment, createBlock, resolveDynamicComponent } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  props: [].concat(props, ["type", "percentage", "status", "strokeWidth", "textInside", "width", "showText", "color", "format", "size", "info"]),
  components: {
    IconClose: iconClose(),
    IconSuccess: iconSuccess(),
    IconError: iconError(),
    IconYes: iconYes(),
    IconWarning: iconWarning()
  },
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = ["aria-valuenow"];
var _hoisted_2 = {
  key: 0,
  class: "text-color-text-inverse text-xs mr-3 inline-block align-middle"
};
var _hoisted_3 = {
  viewBox: "0 0 100 100"
};
var _hoisted_4 = ["d", "stroke-width"];
var _hoisted_5 = ["d", "stroke", "stroke-width"];
var _hoisted_6 = {
  key: 0
};
var _hoisted_7 = {
  key: 1
};
var _hoisted_8 = {
  key: 0,
  "data-tag": "tiny-progress-info",
  class: "mt-2 text-center text-sm text-color-text-secondary"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", {
    class: normalizeClass([_ctx.type !== "line" && "inline-block text-center"]),
    role: "progressbar",
    "aria-valuenow": _ctx.percentage,
    "aria-valuemin": "0",
    "aria-valuemax": "100",
    "data-tag": "tiny-progress"
  }, [createElementVNode(
    "div",
    {
      "data-tag": "tiny-progress-content",
      class: normalizeClass(["relative leading-none", [_ctx.type === "line" ? "flex items-center" : "inline-block"]])
    },
    [_ctx.type === "line" ? (openBlock(), createElementBlock(
      "div",
      {
        key: 0,
        "data-tag": "tiny-progress-line",
        class: normalizeClass(["box-border inline-block align-middle flex-1", [!_ctx.showText ? "pr-0 mr-0 block" : "", _ctx.textInside ? "pr-0 mr-0" : ""]])
      },
      [createElementVNode(
        "div",
        {
          "data-tag": "tiny-progress-strokewidth",
          class: normalizeClass(["rounded-full bg-color-bg-3 overflow-hidden relative align-middle", [_ctx.size === "small" ? "h-1" : "", _ctx.size === "medium" ? "h-2" : "", _ctx.size === "large" ? "h-4" : ""]]),
          style: normalizeStyle(_ctx.state.strokeWidth ? {
            height: _ctx.state.strokeWidth + "px"
          } : {})
        },
        [createVNode(Transition, {
          appear: "",
          "appear-class": "custom-appear-class",
          onBeforeAppear: _ctx.customBeforeAppearHook,
          onAppear: _ctx.customAppearHook,
          onAfterAppear: _ctx.customAfterAppearHook
        }, {
          default: withCtx(function() {
            return [createElementVNode(
              "div",
              {
                "data-tag": "tiny-progress-bar",
                class: normalizeClass(_ctx.m("absolute left-0 top-0 h-full bg-color-brand text-right rounded-full leading-none whitespace-nowrap transition-[width] duration-500 ease-in after:content-[''] after:h-full after:inline-block after:align-middle", _ctx.status === "success" && "bg-color-success", _ctx.status === "warning" && "bg-color-warning", _ctx.status === "exception" && "bg-color-error")),
                style: normalizeStyle(_ctx.state.barStyle)
              },
              [_ctx.showText && _ctx.textInside ? (openBlock(), createElementBlock(
                "div",
                _hoisted_2,
                toDisplayString(_ctx.state.content),
                1
                /* TEXT */
              )) : createCommentVNode("v-if", true)],
              6
              /* CLASS, STYLE */
            )];
          }),
          _: 1
          /* STABLE */
        }, 8, ["onBeforeAppear", "onAppear", "onAfterAppear"])],
        6
        /* CLASS, STYLE */
      )],
      2
      /* CLASS */
    )) : (openBlock(), createElementBlock(
      "div",
      {
        key: 1,
        "data-tag": "tiny-progress-circle-style",
        class: normalizeClass(["inline-block", [_ctx.size === "small" && "w-12 h-12", _ctx.size === "medium" && "w-24 h-24", _ctx.size === "large" && "w-40 h-40"]]),
        style: normalizeStyle(_ctx.state.circleStyle)
      },
      [(openBlock(), createElementBlock("svg", _hoisted_3, [createElementVNode("path", {
        d: _ctx.state.trackPath,
        stroke: "#E8EBEF",
        "stroke-width": _ctx.state.relativeStrokeWidth,
        fill: "none",
        style: normalizeStyle(_ctx.state.trailPathStyle)
      }, null, 12, _hoisted_4), createVNode(Transition, {
        appear: "",
        "appear-class": "custom-appear-class",
        onBeforeAppear: _ctx.customBeforeAppearHook,
        onAppear: _ctx.customAppearHook,
        onAfterAppear: _ctx.customAfterAppearHook
      }, {
        default: withCtx(function() {
          return [createElementVNode("path", {
            d: _ctx.state.trackPath,
            stroke: _ctx.state.stroke,
            fill: "none",
            "stroke-linecap": "round",
            "stroke-width": _ctx.percentage ? _ctx.state.relativeStrokeWidth : 0,
            style: normalizeStyle(_ctx.state.circlePathStyle)
          }, null, 12, _hoisted_5)];
        }),
        _: 1
        /* STABLE */
      }, 8, ["onBeforeAppear", "onAppear", "onAfterAppear"])]))],
      6
      /* CLASS, STYLE */
    )), _ctx.showText && !_ctx.textInside ? (openBlock(), createElementBlock(
      "div",
      {
        key: 2,
        class: normalizeClass(_ctx.m("text-xs inline-block align-middle ml-3 leading-none", !_ctx.showText && "hidden", _ctx.type !== "line" ? "text-color-text-primary absolute top-1/2 left-0 w-full text-center m-0 translate-x-0 -translate-y-1/2" : "text-color-text-primary")),
        style: normalizeStyle({
          fontSize: _ctx.state.progressTextSize + "px"
        }),
        "data-tag": "tiny-progress-text"
      },
      [!_ctx.status ? (openBlock(), createElementBlock(
        Fragment,
        {
          key: 0
        },
        [_ctx.type === "line" ? (openBlock(), createElementBlock(
          "span",
          _hoisted_6,
          toDisplayString(_ctx.state.content),
          1
          /* TEXT */
        )) : (openBlock(), createElementBlock("div", _hoisted_7, [createElementVNode(
          "span",
          {
            style: normalizeStyle({
              fontSize: _ctx.state.progressTextSize + "px"
            })
          },
          toDisplayString(typeof _ctx.format === "function" ? _ctx.state.content : _ctx.percentage),
          5
          /* TEXT, STYLE */
        ), typeof _ctx.format !== "function" ? (openBlock(), createElementBlock(
          "span",
          {
            key: 0,
            style: normalizeStyle({
              fontSize: _ctx.state.percentTextSize + "px"
            })
          },
          "%",
          4
          /* STYLE */
        )) : createCommentVNode("v-if", true)]))],
        64
        /* STABLE_FRAGMENT */
      )) : (openBlock(), createBlock(resolveDynamicComponent(_ctx.state.iconClass), {
        key: 1,
        class: normalizeClass([_ctx.status === "success" && "fill-color-success", _ctx.status === "warning" && "fill-color-warning", _ctx.status === "exception" && "fill-color-error", _ctx.size === "small" ? _ctx.type === "line" ? "w-3 h-3" : "w-6 h-6" : "", _ctx.size === "medium" ? _ctx.type === "line" ? "w-4 h-4" : "w-10 h-10" : "", _ctx.size === "large" ? _ctx.type === "line" ? "w-6 h-6" : "w-20 h-20" : ""]),
        style: normalizeStyle(_ctx.state.iconStyle)
      }, null, 8, ["class", "style"]))],
      6
      /* CLASS, STYLE */
    )) : createCommentVNode("v-if", true)],
    2
    /* CLASS */
  ), _ctx.type !== "line" && _ctx.info ? (openBlock(), createElementBlock(
    "div",
    _hoisted_8,
    toDisplayString(_ctx.info),
    1
    /* TEXT */
  )) : createCommentVNode("v-if", true)], 10, _hoisted_1);
}
var mobileFirst = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  mobileFirst as default
};
