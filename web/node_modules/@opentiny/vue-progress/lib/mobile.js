import { renderless, api } from "@opentiny/vue-renderless/progress/vue";
import { defineComponent, props, setup as _setup } from "@opentiny/vue-common";
import { iconClose, iconSuccessful, iconError, iconYes, iconWarning } from "@opentiny/vue-icon";
import "@opentiny/vue-theme-mobile/progress/index.css";
import { openBlock, createElementBlock, normalizeClass, createElementVNode, normalizeStyle, toDisplayString, createCommentVNode, Fragment, createTextVNode, createBlock, resolveDynamicComponent } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  props: [].concat(props, ["type", "percentage", "status", "strokeWidth", "textInside", "width", "showText", "color", "format"]),
  components: {
    IconClose: iconClose(),
    IconSuccessful: iconSuccessful(),
    IconError: iconError(),
    IconYes: iconYes(),
    IconWarning: iconWarning()
  },
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = ["aria-valuenow"];
var _hoisted_2 = {
  key: 0,
  class: "tiny-mobile-progress-bar"
};
var _hoisted_3 = {
  key: 0,
  class: "tiny-mobile-progress-bar__innerText"
};
var _hoisted_4 = {
  viewBox: "0 0 100 100"
};
var _hoisted_5 = ["d", "stroke-width"];
var _hoisted_6 = ["d", "stroke", "stroke-width"];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", {
    class: normalizeClass(["tiny-mobile-progress", ["tiny-mobile-progress--" + _ctx.type, _ctx.status ? "is-" + _ctx.status : "", {
      "tiny-mobile-progress__without-text": !_ctx.showText,
      "tiny-mobile-progress__inside-text": _ctx.textInside
    }]]),
    role: "progressbar",
    "aria-valuenow": _ctx.percentage,
    "aria-valuemin": "0",
    "aria-valuemax": "100"
  }, [_ctx.type === "line" ? (openBlock(), createElementBlock("div", _hoisted_2, [createElementVNode(
    "div",
    {
      class: "tiny-mobile-progress-bar__outer",
      style: normalizeStyle({
        height: _ctx.strokeWidth + "px"
      })
    },
    [createElementVNode(
      "div",
      {
        class: "tiny-mobile-progress-bar__inner",
        style: normalizeStyle(_ctx.state.barStyle)
      },
      [_ctx.showText && _ctx.textInside && _ctx.strokeWidth > 12 ? (openBlock(), createElementBlock(
        "div",
        _hoisted_3,
        toDisplayString(_ctx.state.content),
        1
        /* TEXT */
      )) : createCommentVNode("v-if", true)],
      4
      /* STYLE */
    )],
    4
    /* STYLE */
  )])) : (openBlock(), createElementBlock(
    "div",
    {
      key: 1,
      class: "tiny-mobile-progress-circle",
      style: normalizeStyle({
        height: _ctx.width + "px",
        width: _ctx.width + "px"
      })
    },
    [(openBlock(), createElementBlock("svg", _hoisted_4, [createElementVNode("path", {
      class: "tiny-mobile-progress-circle__track",
      d: _ctx.state.trackPath,
      stroke: "#e5e9f2",
      "stroke-width": _ctx.state.relativeStrokeWidth,
      fill: "none",
      style: normalizeStyle(_ctx.state.trailPathStyle)
    }, null, 12, _hoisted_5), createElementVNode("path", {
      class: "tiny-mobile-progress-circle__path",
      d: _ctx.state.trackPath,
      stroke: _ctx.state.stroke,
      fill: "none",
      "stroke-linecap": "round",
      "stroke-width": _ctx.percentage ? _ctx.state.relativeStrokeWidth : 0,
      style: normalizeStyle(_ctx.state.circlePathStyle)
    }, null, 12, _hoisted_6)]))],
    4
    /* STYLE */
  )), _ctx.showText && !_ctx.textInside ? (openBlock(), createElementBlock(
    "div",
    {
      key: 2,
      class: "tiny-mobile-progress-text",
      style: normalizeStyle({
        fontSize: _ctx.state.progressTextSize + "px"
      })
    },
    [!_ctx.status ? (openBlock(), createElementBlock(
      Fragment,
      {
        key: 0
      },
      [createTextVNode(
        toDisplayString(_ctx.state.content),
        1
        /* TEXT */
      )],
      64
      /* STABLE_FRAGMENT */
    )) : (openBlock(), createBlock(resolveDynamicComponent(_ctx.state.iconClass), {
      key: 1
    }))],
    4
    /* STYLE */
  )) : createCommentVNode("v-if", true)], 10, _hoisted_1);
}
var mobile = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  mobile as default
};
