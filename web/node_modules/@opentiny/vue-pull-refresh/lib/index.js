function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
import { defineComponent, $prefix, $props, $setup } from "@opentiny/vue-common";
import { t } from "@opentiny/vue-locale";
import MobileTemplate from "./mobile.js";
import MobileFirstTemplate from "./mobile-first.js";
var template = function template2(mode) {
  var _process$env;
  var tinyMode = typeof process === "object" ? (_process$env = process.env) == null ? void 0 : _process$env.TINY_MODE : null;
  if ("mobile" === (tinyMode || mode)) {
    return MobileTemplate;
  }
  if ("mobile-first" === (tinyMode || mode)) {
    return MobileFirstTemplate;
  }
  return MobileTemplate;
};
var $constants = {
  DEFAULT_HEAD_HEIGHT: 50,
  STATUS: {
    NORMAL: "normal",
    LOADING: "loading",
    LOOSING: "loosing",
    PULLING: "pulling",
    SUCCESS: "success"
  }
};
var PullRefresh = defineComponent({
  name: $prefix + "PullRefresh",
  props: _extends({}, $props, {
    _constants: {
      type: Object,
      default: function _default() {
        return $constants;
      }
    },
    modelValue: Boolean,
    loosingText: {
      type: String,
      default: t("ui.pullRefresh.loosing")
    },
    successText: {
      type: String,
      default: $constants.STATUS.SUCCESS
    },
    failedText: String,
    successDuration: {
      type: [Number, String],
      default: 500
    },
    animationDuration: {
      type: [Number, String],
      default: 300
    },
    disabled: {
      type: Boolean,
      default: false
    },
    pullUp: {
      type: Object,
      default: {}
    },
    pullDown: {
      type: Object,
      default: {}
    },
    hasMore: {
      type: Boolean,
      default: true
    },
    // mobile-firstçš„props
    headHeight: {
      type: [Number, String],
      default: $constants.DEFAULT_HEAD_HEIGHT
    },
    pullingText: {
      type: String,
      default: t("ui.pullRefresh.pulling")
    },
    loadingText: {
      type: String,
      default: $constants.STATUS.LOADING
    },
    pullDistance: [Number, String],
    loadingOptions: {
      type: Object,
      default: function _default2() {
        return {};
      }
    },
    selfSimulate: {
      type: Boolean,
      default: false
    }
  }),
  setup: function setup(props, context) {
    return $setup({
      props,
      context,
      template
    });
  }
});
var version = "3.13.0";
PullRefresh.model = {
  prop: "modelValue",
  event: "update:modelValue"
};
PullRefresh.install = function(Vue) {
  Vue.component(PullRefresh.name, PullRefresh);
};
PullRefresh.version = version;
export {
  PullRefresh as default
};
