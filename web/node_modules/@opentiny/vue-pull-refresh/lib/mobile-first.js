function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
import { defineComponent, $prefix, props, setup as _setup, h } from "@opentiny/vue-common";
import { renderless, api } from "@opentiny/vue-renderless/pull-refresh-mobile-first/vue";
import Loading from "@opentiny/vue-loading";
import { openBlock, createElementBlock, normalizeStyle, createElementVNode, createBlock, resolveDynamicComponent, renderSlot } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  name: $prefix + "PullRefresh",
  emits: ["change", "refresh", "update:modelValue"],
  props: [].concat(props, ["disabled", "modelValue", "headHeight", "successText", "pullingText", "loosingText", "loadingText", "pullDistance", "successDuration", "animationDuration", "loadingOptions", "selfSimulate"]),
  setup: function setup(props2, context) {
    var apis = _setup({
      props: props2,
      context,
      renderless,
      api,
      extendOptions: {
        Loading
      }
    });
    var state = apis.state, getStatusText = apis.getStatusText, constants = apis.constants;
    var _constants$STATUS = constants.STATUS, PULLING = _constants$STATUS.PULLING, LOOSING = _constants$STATUS.LOOSING, SUCCESS = _constants$STATUS.SUCCESS;
    var HeadComponent = {
      render: function render() {
        var slots = context.slots;
        var status = state.status, distance = state.distance;
        var children;
        if (slots[status]) {
          children = [slots[status]({
            distance
          })];
        } else {
          children = [];
          if ([PULLING, LOOSING, SUCCESS].includes(status)) {
            children.push(h("div", {
              attrs: {
                "data-tag": "tiny-pull-refresh__text"
              }
            }, [getStatusText()]));
          }
        }
        return h("div", {
          class: ["absolute left-0 -translate-y-full overflow-hidden text-base text-color-text-info-primary text-center", "w-full h-[var(--tiny-pull-refresh-head-height)] leading-[var(--tiny-pull-refresh-head-height)]"],
          attrs: {
            "data-tag": "tiny-pull-refresh__head"
          }
        }, children);
      }
    };
    return _extends({}, apis, {
      HeadComponent
    });
  }
});
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock(
    "div",
    {
      ref: "root",
      "data-tag": "tiny-pull-refresh",
      style: normalizeStyle({
        "--tiny-pull-refresh-head-height": _ctx.state.headerHeight
      })
    },
    [createElementVNode(
      "div",
      {
        ref: "track",
        class: "relative h-fit transition-transform",
        "data-tag": "tiny-pull-refresh__track",
        "data-tiny-touch-simulate-container": "",
        style: normalizeStyle({
          transitionDuration: _ctx.state.duration + "ms",
          transform: _ctx.state.distance ? "translate3d(0," + _ctx.state.distance + "px, 0)" : ""
        }),
        onTouchstartPassive: _cache[0] || (_cache[0] = function() {
          return _ctx.onTouchStart && _ctx.onTouchStart.apply(_ctx, arguments);
        }),
        onTouchend: _cache[1] || (_cache[1] = function() {
          return _ctx.onTouchEnd && _ctx.onTouchEnd.apply(_ctx, arguments);
        }),
        onTouchcancel: _cache[2] || (_cache[2] = function() {
          return _ctx.onTouchEnd && _ctx.onTouchEnd.apply(_ctx, arguments);
        })
      },
      [(openBlock(), createBlock(
        resolveDynamicComponent(_ctx.HeadComponent),
        {
          ref: "head"
        },
        null,
        512
        /* NEED_PATCH */
      )), renderSlot(_ctx.$slots, "default")],
      36
      /* STYLE, NEED_HYDRATION */
    )],
    4
    /* STYLE */
  );
}
var mobileFirst = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  mobileFirst as default
};
