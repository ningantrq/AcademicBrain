declare const _default: import("@vue/runtime-core").DefineComponent<{
    props: ObjectConstructor;
    className: {
        type: StringConstructor;
    };
    handleOnClick: {
        type: FunctionConstructor;
        default: () => void;
    };
    label: {
        type: StringConstructor;
    };
    title: {
        type: StringConstructor;
        default: string;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    disabledTranslation: {
        type: ObjectConstructor;
    };
    testID: {
        type: StringConstructor;
    };
}, {
    t: (this: any, path: any, options?: any) => any;
    vm: any;
    f: (props: any, attrs?: {}) => {};
    a: (attrs: any, filters: any, include: any) => {};
    d: (props: any) => void;
    dp: (props: any) => void;
    gcls: (key: any) => any;
}, unknown, {
    allProps(): {
        class: string;
        type: string;
        title: any;
        disabled: boolean;
        disabledTranslation: Record<string, any> | undefined;
        testID: string | undefined;
    };
}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    props: ObjectConstructor;
    className: {
        type: StringConstructor;
    };
    handleOnClick: {
        type: FunctionConstructor;
        default: () => void;
    };
    label: {
        type: StringConstructor;
    };
    title: {
        type: StringConstructor;
        default: string;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    disabledTranslation: {
        type: ObjectConstructor;
    };
    testID: {
        type: StringConstructor;
    };
}>>, {
    title: string;
    disabled: boolean;
    handleOnClick: Function;
}, {}>;
export default _default;
