export declare const $constants: {
    RADIO_GROUP: string;
};
export declare const radioButtonProps: {
    _constants: {
        type: ObjectConstructor;
        default: () => {
            RADIO_GROUP: string;
        };
    };
    name: StringConstructor;
    text: StringConstructor;
    events: {
        type: ObjectConstructor;
        default: () => {};
    };
    label: {};
    disabled: BooleanConstructor;
    tipContent: StringConstructor;
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
};
declare const _default: import("@vue/runtime-core").DefineComponent<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            RADIO_GROUP: string;
        };
    };
    name: StringConstructor;
    text: StringConstructor;
    events: {
        type: ObjectConstructor;
        default: () => {};
    };
    label: {};
    disabled: BooleanConstructor;
    tipContent: StringConstructor;
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            RADIO_GROUP: string;
        };
    };
    name: StringConstructor;
    text: StringConstructor;
    events: {
        type: ObjectConstructor;
        default: () => {};
    };
    label: {};
    disabled: BooleanConstructor;
    tipContent: StringConstructor;
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    disabled: boolean;
    tiny_mode_root: boolean;
    _constants: Record<string, any>;
    events: Record<string, any>;
}, {}>;
export default _default;
