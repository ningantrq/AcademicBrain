function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
import { $prefix, $props, $setup } from "@opentiny/vue-common";
import MobileFirstTemplate from "./mobile-first.js";
var template = function template2(mode) {
  var _process$env;
  typeof process === "object" ? (_process$env = process.env) == null ? void 0 : _process$env.TINY_MODE : null;
  return MobileFirstTemplate;
};
var $constants = {
  STATUS: {
    READY: "ready",
    RECORDING: "recording",
    PAUSE: "pause"
  },
  HWH5_STATUS: {
    START: "start",
    PAUSE: "pause",
    CONTINUE: "continue",
    CANCEL: "cancel",
    END: "end"
  }
};
var Record = {
  name: $prefix + "Record",
  props: _extends({}, $props, {
    _constants: {
      type: Object,
      default: function _default() {
        return $constants;
      }
    },
    modelValue: Boolean,
    isHwh5: {
      type: Boolean,
      default: false
    },
    lockScroll: {
      type: Boolean,
      default: true
    }
  }),
  setup: function setup(props, context) {
    return $setup({
      props,
      context,
      template
    });
  }
};
var version = "3.13.0";
Record.model = {
  prop: "modelValue",
  event: "update:modelValue"
};
Record.install = function(Vue) {
  Vue.component(Record.name, Record);
};
Record.version = version;
export {
  Record as default
};
