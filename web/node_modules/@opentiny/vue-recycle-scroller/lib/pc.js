import { renderless, api } from "@opentiny/vue-renderless/recycle-scroller/vue";
import { defineComponent, props, setup as _setup } from "@opentiny/vue-common";
import ObserveVisibility from "@opentiny/vue-renderless/common/deps/observe-visibility";
import "@opentiny/vue-theme/recycle-scroller/index.css";
import { resolveDirective, withDirectives, openBlock, createElementBlock, normalizeClass, renderSlot, createCommentVNode, createBlock, resolveDynamicComponent, normalizeStyle, withCtx, Fragment, renderList, mergeProps, toHandlers } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  emits: ["resize", "visible", "hidden", "update", "scroll-start", "scroll-end"],
  props: [].concat(props, ["items", "keyField", "direction", "listTag", "itemTag", "itemSize", "gridItems", "itemSecondarySize", "minItemSize", "sizeField", "typeField", "buffer", "pageMode", "prerender", "emitUpdate", "updateInterval", "skipHover", "listClass", "itemClass", "itemsLimit"]),
  directives: {
    ObserveVisibility
  },
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  key: 0,
  ref: "before",
  class: "tiny-recycle-scroller__slot"
};
var _hoisted_2 = {
  key: 1,
  ref: "after",
  class: "tiny-recycle-scroller__slot"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _ref, _normalizeStyle;
  var _directive_observe_visibility = resolveDirective("observe-visibility");
  return withDirectives((openBlock(), createElementBlock(
    "div",
    {
      class: normalizeClass(["tiny-recycle-scroller", (_ref = {
        ready: _ctx.state.ready,
        "page-mode": _ctx.pageMode
      }, _ref["direction-" + _ctx.direction] = true, _ref)]),
      onScrollPassive: _cache[0] || (_cache[0] = function() {
        return _ctx.handleScroll && _ctx.handleScroll.apply(_ctx, arguments);
      })
    },
    [_ctx.slots.before ? (openBlock(), createElementBlock(
      "div",
      _hoisted_1,
      [renderSlot(_ctx.$slots, "before")],
      512
      /* NEED_PATCH */
    )) : createCommentVNode("v-if", true), (openBlock(), createBlock(resolveDynamicComponent(_ctx.listTag), {
      ref: "wrapper",
      style: normalizeStyle((_normalizeStyle = {}, _normalizeStyle[_ctx.direction === "vertical" ? "minHeight" : "minWidth"] = _ctx.state.totalSize + "px", _normalizeStyle)),
      class: normalizeClass(["tiny-recycle-scroller__item-wrapper", _ctx.listClass])
    }, {
      default: withCtx(function() {
        return [(openBlock(true), createElementBlock(
          Fragment,
          null,
          renderList(_ctx.state.pool, function(view) {
            return openBlock(), createBlock(resolveDynamicComponent(_ctx.itemTag), mergeProps({
              key: view.nr.id,
              style: _ctx.computeViewStyle(view),
              class: ["tiny-recycle-scroller__item-view", [_ctx.itemClass, {
                hover: !_ctx.skipHover && _ctx.state.hoverKey === view.nr.key
              }]]
            }, toHandlers(_ctx.computeViewEvent(view))), {
              default: withCtx(function() {
                return [renderSlot(_ctx.$slots, "default", {
                  item: view.item,
                  index: view.nr.index,
                  active: view.nr.used
                })];
              }),
              _: 2
              /* DYNAMIC */
            }, 1040, ["style", "class"]);
          }),
          128
          /* KEYED_FRAGMENT */
        )), renderSlot(_ctx.$slots, "empty")];
      }),
      _: 3
      /* FORWARDED */
    }, 8, ["style", "class"])), _ctx.slots.after ? (openBlock(), createElementBlock(
      "div",
      _hoisted_2,
      [renderSlot(_ctx.$slots, "after")],
      512
      /* NEED_PATCH */
    )) : createCommentVNode("v-if", true)],
    34
    /* CLASS, NEED_HYDRATION */
  )), [[_directive_observe_visibility, _ctx.handleVisibilityChange]]);
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  pc as default
};
