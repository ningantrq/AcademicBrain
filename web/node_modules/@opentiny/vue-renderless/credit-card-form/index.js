import {
  __spreadProps,
  __spreadValues
} from "../chunk-G2ADBYYC.js";
const generateMonthValue = (month) => month < 10 ? `0${month}` : month;
const changeName = ({ emit, state }) => (event) => {
  state.formData.cardName = event.target.value;
  emit("input-card-name", state.formData.cardName);
};
const changeNumber = ({ emit, state }) => (event) => {
  state.formData.cardNumber = event.target.value;
  state.mainCardNumber = event.target.value;
  let value = state.formData.cardNumber.replace(/\D/g, "");
  if (/^3[47]\d{0,13}$/.test(value)) {
    state.formData.cardNumber = value.replace(/^(\d{4})(?=\d)/, "$1 ").replace(/^(\d{4}) (\d{6})(?=\d)/, "$1 $2 ");
    state.cardNumberMaxLength = 17;
  } else if (/^3(?:0[0-5]|[68]\d)\d{0,11}$/.test(value)) {
    state.formData.cardNumber = value.replace(/^(\d{4})(?=\d)/, "$1 ").replace(/^(\d{4}) (\d{6})(?=\d)/, "$1 $2 ");
    state.cardNumberMaxLength = 16;
  } else if (/^\d{0,16}$/.test(value)) {
    state.formData.cardNumber = value.replace(/^(\d{4})(?=\d)/, "$1 ").replace(/^(\d{4}) (\d{4})(?=\d)/, "$1 $2 ").replace(/^(\d{4}) (\d{4}) (\d{4})(?=\d)/, "$1 $2 $3 ");
    state.cardNumberMaxLength = 19;
  }
  emit("input-card-number", state.formData.cardNumber);
};
const changeMonth = ({ emit, state }) => () => {
  emit("input-card-month", state.cardMonth);
};
const changeYear = ({ emit, state }) => () => {
  emit("input-card-year", state.cardYear);
};
const changeCvv = ({ emit, state }) => (event) => {
  state.formData.cardCvv = event.target.value;
  emit("input-card-cvv", state.formData.cardCvv);
};
const invaildCard = (props) => () => {
  let number = props.formData.cardNumber;
  let sum = 0;
  let isOdd = true;
  if (!number) {
    return true;
  }
  for (let i = number.length - 1; i >= 0; i--) {
    let code = number.charAt(i);
    if (isOdd) {
      sum += code;
    } else {
      code = code * 2;
      if (code > 9) {
        code = code.toString().split("").join("+");
      }
      sum += code;
    }
    isOdd = !isOdd;
  }
  if (sum % 10 !== 0) {
    return true;
  }
  return false;
};
const handleSubmit = ({ api, emit, props, state }) => () => {
  const invaildCard2 = api.invaildCard();
  emit("submit", __spreadProps(__spreadValues({
    invaildCard: invaildCard2
  }, props.formData), {
    cardNumber: state.mainCardNumber.replace(/ /g, "")
  }));
};
const blurCardNumber = ({ api, state }) => () => {
  if (state.isCardNumberMasked) {
    api.maskCardNumber();
  }
};
const maskCardNumber = ({ props, state }) => () => {
  state.mainCardNumber = props.formData.cardNumber;
  let arr = props.formData.cardNumber.split("");
  arr.forEach((element, index) => {
    if (index > 4 && index < 14 && element.trim() !== "") {
      arr[index] = "*";
    }
  });
  props.formData.cardNumber = arr.join("");
};
const unMaskCardNumber = ({ props, state }) => () => {
  props.formData.cardNumber = state.mainCardNumber;
};
const focusCardNumber = (api) => () => {
  api.unMaskCardNumber();
};
const toggleMask = ({ api, state }) => () => {
  state.isCardNumberMasked = !state.isCardNumberMasked;
  if (state.isCardNumberMasked) {
    api.maskCardNumber();
  } else {
    api.unMaskCardNumber();
  }
};
export {
  blurCardNumber,
  changeCvv,
  changeMonth,
  changeName,
  changeNumber,
  changeYear,
  focusCardNumber,
  generateMonthValue,
  handleSubmit,
  invaildCard,
  maskCardNumber,
  toggleMask,
  unMaskCardNumber
};
