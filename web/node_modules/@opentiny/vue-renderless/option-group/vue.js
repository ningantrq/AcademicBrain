import "../chunk-G2ADBYYC.js";
import { queryChange } from "./index";
const api = ["state", "queryChange"];
const renderless = (props, { onMounted, reactive, watch, inject }, { broadcast, vm }) => {
  const select = inject("select");
  const constants = select._constants;
  const state = reactive({
    visible: true
  });
  const api2 = {
    state,
    queryChange: queryChange({ select, state, vm })
  };
  watch(
    () => props.disabled,
    (value) => {
      broadcast(constants.COMPONENT_NAME.Option, constants.EVENT_NAME.handleGroupDisabled, value);
    },
    { immediate: true }
  );
  onMounted(() => {
    if (props.disabled) {
      broadcast(constants.COMPONENT_NAME.Option, constants.EVENT_NAME.handleGroupDisabled, props.disabled);
    }
    select.state.selectEmitter.on(constants.EVENT_NAME.queryChange, api2.queryChange);
  });
  return api2;
};
export {
  api,
  renderless
};
