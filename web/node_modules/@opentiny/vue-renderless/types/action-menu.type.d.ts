import { ComputedRef, ExtractPropTypes, ComponentPublicInstance } from 'vue';
import { ISharedRenderlessFunctionParams, ISharedRenderlessParamUtils } from './shared.type.js';

/**
 * Copyright (c) 2022 - present TinyVue Authors.
 * Copyright (c) 2022 - present Huawei Cloud Computing Technologies Co., Ltd.
 *
 * Use of this source code is governed by an MIT-style license.
 *
 * THE OPEN SOURCE SOFTWARE IN THIS PRODUCT IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL,
 * BUT WITHOUT ANY WARRANTY, WITHOUT EVEN THE IMPLIED WARRANTY OF MERCHANTABILITY OR FITNESS FOR
 * A PARTICULAR PURPOSE. SEE THE APPLICABLE LICENSES FOR MORE DETAILS.
 *
 */
declare const actionMenuProps: {
    options: {
        type: ArrayConstructor;
        default: () => never[];
    };
    maxShowNum: {
        type: NumberConstructor;
        default: number;
    };
    moreText: StringConstructor;
    spacing: {
        type: (StringConstructor | NumberConstructor)[];
        default: string;
    };
    textField: {
        type: StringConstructor;
        default: string;
    };
    popperClass: {
        type: StringConstructor;
        default: string;
    };
    popperAppendToBody: {
        type: BooleanConstructor;
        default: boolean;
    };
    trigger: {
        type: StringConstructor;
        default: string;
    };
    suffixIcon: ObjectConstructor;
    showIcon: {
        type: BooleanConstructor;
        default: boolean;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (FunctionConstructor | ObjectConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
};

/**
 * Copyright (c) 2022 - present TinyVue Authors.
 * Copyright (c) 2022 - present Huawei Cloud Computing Technologies Co., Ltd.
 *
 * Use of this source code is governed by an MIT-style license.
 *
 * THE OPEN SOURCE SOFTWARE IN THIS PRODUCT IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL,
 * BUT WITHOUT ANY WARRANTY, WITHOUT EVEN THE IMPLIED WARRANTY OF MERCHANTABILITY OR FITNESS FOR
 * A PARTICULAR PURPOSE. SEE THE APPLICABLE LICENSES FOR MORE DETAILS.
 *
 */

interface IActionMenuState {
    visibleOptions: ComputedRef<object>;
    moreOptions: ComputedRef<object>;
    spacing: ComputedRef<string | number>;
}
type IActionMenuProps = ExtractPropTypes<typeof actionMenuProps>;
type IActionMenuRenderlessParams = ISharedRenderlessFunctionParams<null> & {
    state: IActionMenuState;
    props: IActionMenuProps;
};
interface IActionMenuItemData {
    itemData: object;
    vm: ComponentPublicInstance;
    disabled: boolean;
}
interface IActionMenuApi {
    handleMoreClick: () => void;
    handleItemClick: (data: IActionMenuItemData) => void;
    visibleChange: (status: boolean) => void;
    state: IActionMenuState;
}
type IActionMenuRenderlessParamUtils = ISharedRenderlessParamUtils<null>;

export { IActionMenuApi, IActionMenuItemData, IActionMenuProps, IActionMenuRenderlessParamUtils, IActionMenuRenderlessParams, IActionMenuState };
