import { ExtractPropTypes } from 'vue';
import { ISharedRenderlessFunctionParams, ISharedRenderlessParamUtils } from './shared.type.js';

interface ISearchState {
    show: boolean;
    focus: boolean;
    hovering: boolean;
    collapse: boolean;
    currentValue: string;
    searchValue: object;
    types: string[];
    showClear: boolean;
}
type ISearchProps = ExtractPropTypes<typeof ISearchProps>;
type ISearchRenderlessParams = ISharedRenderlessFunctionParams<never> & {
    state: ISearchState;
    props: ISearchProps;
    api: ISearchApi;
};
interface ISearchValue {
    text: string;
    value: number;
}
interface ISearchApi {
    state: ISearchState;
    changeKey: (key: ISearchValue) => void;
    handleChange: (event: Event) => void;
    showSelector: () => void;
    searchClick: (event: Event) => void;
    clickOutside: (event: Event) => void;
    emitInput: (...args: [string, ISearchValue]) => void;
    setDefaultType: (searchTypes: ISearchValue[]) => ISearchValue;
    formatSearchTypes: (searchTypes: ISearchValue[]) => ISearchValue[];
    clear: (event: Event) => void;
    handleInput: (event: Event) => void;
    searchEnterKey: () => void;
}
type ISearchRenderlessParamUtils = ISharedRenderlessParamUtils<never>;

export { ISearchApi, ISearchProps, ISearchRenderlessParamUtils, ISearchRenderlessParams, ISearchState, ISearchValue };
