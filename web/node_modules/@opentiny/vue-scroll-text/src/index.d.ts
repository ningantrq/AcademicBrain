declare const _default: import("@vue/runtime-core").DefineComponent<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            ANIMATION_DURATION: string;
        };
    };
    text: {
        type: StringConstructor;
        default: string;
    };
    time: {
        type: NumberConstructor;
        default: number;
    };
    styles: {
        type: StringConstructor;
        default: string;
    };
    direction: {
        type: StringConstructor;
        default: string;
        validator: (value: string) => boolean;
    };
    hoverStop: {
        type: BooleanConstructor;
        default: boolean;
    };
    widthAdapt: {
        type: BooleanConstructor;
        default: boolean;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            ANIMATION_DURATION: string;
        };
    };
    text: {
        type: StringConstructor;
        default: string;
    };
    time: {
        type: NumberConstructor;
        default: number;
    };
    styles: {
        type: StringConstructor;
        default: string;
    };
    direction: {
        type: StringConstructor;
        default: string;
        validator: (value: string) => boolean;
    };
    hoverStop: {
        type: BooleanConstructor;
        default: boolean;
    };
    widthAdapt: {
        type: BooleanConstructor;
        default: boolean;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    text: string;
    time: number;
    tiny_mode_root: boolean;
    _constants: Record<string, any>;
    direction: string;
    styles: string;
    hoverStop: boolean;
    widthAdapt: boolean;
}, {}>;
export default _default;
