import { renderless, api } from "@opentiny/vue-renderless/search/vue";
import { defineComponent, props, setup as _setup } from "@opentiny/vue-common";
import { IconChevronDown, IconSearch, IconClose } from "@opentiny/vue-icon";
import Input from "@opentiny/vue-input";
import Button from "@opentiny/vue-button";
import { resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, createVNode, Transition, withCtx, withDirectives, renderSlot, toDisplayString, vShow, normalizeStyle, withKeys, withModifiers, vModelText, createCommentVNode, Fragment, renderList, createTextVNode, createSlots } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var classes = {
  "search-default": "relative inline-block text-xs w-full px-3 sm:px-0",
  "pc-search-line": "w-full border border-solid rounded-full lg:rounded bg-color-bg-1 transition duration-300 ease-in-out border-separate hidden sm:inline-table",
  "pc-search-line-focus": "border-color-border-focus",
  "pc-search-line-unfocus": "border-color-border hover:border-color-border-hover",
  "pc-search-line-big": "h-[calc(theme(spacing.8)-2*theme(borderWidth.DEFAULT))]",
  "pc-search-line-unbig": "h-[calc(theme(spacing.7)-2*theme(borderWidth.DEFAULT))]",
  "pc-search-present": "table-cell relative align-middle right-0 text-color-text-primary w-px whitespace-nowrap",
  "pc-search-present-big": "pl-4 text-sm leading-[calc(theme(spacing.8)-2*theme(borderWidth.DEFAULT))",
  "pc-search-present-unbig": "pl-3 text-xs leading-[calc(theme(spacing.7)-2*theme(borderWidth.DEFAULT))]",
  "pc-search-present-pointer": "cursor-pointer",
  "pc-search-present-icon-outer": "h-4 leading-4 inline-block pl-2 pr-3 py-0 border-r border-solid border-color-border-separator cursor-pointer",
  "pc-search-present-icon-chevron-down": "text-base fill-color-icon-primary hover:fill-color-icon-hover",
  "pc-search-input-background-transparent": " border-transparent",
  "pc-search-input-background-transparent-collapse": "bg-color-bg-1",
  "pc-search-input-default": "pl-2 table-cell relative align-middle right-0 text-color-text-primary border-0 outline-0 bg-transparent placeholder:text-color-none focus:placeholder:text-color-text-placeholder",
  "pc-search-input-collapse": "w-7 float-right p-0",
  "pc-search-input-uncollapse": "w-full",
  "pc-search-input-collapse-big": "pl-3",
  "pc-search-input-collapse-unbig": "pl-2",
  "pc-search-input-big": "pl-3 text-sm h-[calc(theme(spacing.8)-2*theme(borderWidth.DEFAULT))] leading-[calc(theme(spacing.8)-2*theme(borderWidth.DEFAULT))]",
  "pc-search-input-unbig": "text-xs h-[calc(theme(spacing.7)-2*theme(borderWidth.DEFAULT))] leading-[calc(theme(spacing.7)-2*theme(borderWidth.DEFAULT))]",
  "pc-search-input-btn-transtion": "table-cell relative align-middle right-0 w-8 text-center z-10",
  "pc-search-input-btn-transtion-big": "h-[calc(theme(spacing.8)-2*theme(borderWidth.DEFAULT))] translate-x-4",
  "pc-search-input-btn-transtion-unbig": "h-[calc(theme(spacing.7)-2*theme(borderWidth.DEFAULT))] translate-x-3.5",
  "pc-search-input-btn-transtion-a": "no-underline block w-8",
  "pc-search-input-btn-transtion-a-big": "leading-[calc(theme(spacing.8)-2*theme(borderWidth.DEFAULT))]",
  "pc-search-input-btn-transtion-a-unbig": "leading-[calc(theme(spacing.7)-2*theme(borderWidth.DEFAULT))]",
  "pc-search-input-btn-transtion-svg-size": "text-base fill-color-icon-primary hover:fill-color-icon-hover",
  "pc-search-input-btn": "table-cell relative align-middle right-0 text-center",
  "pc-search-input-btn-big": "h-[calc(theme(spacing.8)-2*theme(borderWidth.DEFAULT))] w-11",
  "pc-search-input-btn-unbig": "h-[calc(theme(spacing.7)-2*theme(borderWidth.DEFAULT))] w-10",
  "pc-search-input-btn-a": "no-underline block",
  "pc-search-input-btn-a-big": "w-11 leading-[calc(theme(spacing.8)-2*theme(borderWidth.DEFAULT))]",
  "pc-search-input-btn-a-unbig": "w-10 leading-[calc(theme(spacing.7)-2*theme(borderWidth.DEFAULT))]",
  "pc-search-input-btn-icon-search-transparent": "fill-color-bg-1",
  "pc-search-input-btn-icon-search": "text-base fill-color-none",
  "search-selector": "absolute top-full left-0 overflow-hidden min-w-[theme(spacing.18)] border border-solid border-color-border rounded text-xs shadow bg-white text-color-text-primary mt-0.5 py-1 hidden sm:block",
  "search-selector-body": "max-h-[theme(spacing.72)] overflow-x-hidden overflow-y-auto",
  "search-selector-poplist-item": "px-3 min-h-[theme(spacing.6)] leading-6 max-w-full overflow-hidden text-left text-ellipsis whitespace-nowrap cursor-pointer hover:bg-color-bg-2",
  "search-selector-poplist-item-big": "text-sm",
  "search-selector-poplist-item-unbig": "text-xs",
  "mobile-search": "flex sm:hidden w-full items-center shrink-0",
  "mobile-search-input": "bg-color-bg-4 pl-9    placeholder:text-color-none focus:placeholder:text-color-text-placeholder rounded-full",
  "mobile-search-input-bg-change": "bg-color-bg-1",
  "mobile-search-svg-size": "text-base fill-color-none translate-x-1.5",
  "mobile-search-svg-size-color": "fill-color-bg-1",
  "mobile-search-button": "w-16 text-center cursor-pointer",
  "mobile-search-button-notShowButton": "hidden"
};
var _sfc_main = defineComponent({
  props: [].concat(props, ["mini", "big", "transparent", "searchTypes", "placeholder", "modelValue", "tabindex", "clearable", "isEnterSearch", "showButton", "changeBgColor"]),
  components: {
    IconChevronDown: IconChevronDown(),
    IconSearch: IconSearch(),
    IconClose: IconClose(),
    TinyInput: Input,
    TinyButton: Button
  },
  emits: ["change", "update:modelValue", "select", "search", "clear", "input"],
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api,
      classes
    });
  }
});
var _hoisted_1 = ["placeholder", "tabindex"];
var _hoisted_2 = {
  "data-tag": "tiny-search__poplist"
};
var _hoisted_3 = ["onClick"];
var _hoisted_4 = {
  class: "inline-block w-3.5 h-3.5 rounded-full bg-color-none-hover"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_icon_chevron_down = resolveComponent("icon-chevron-down");
  var _component_icon_close = resolveComponent("icon-close");
  var _component_icon_search = resolveComponent("icon-search");
  var _component_tiny_input = resolveComponent("tiny-input");
  var _component_tiny_button = resolveComponent("tiny-button");
  return openBlock(), createElementBlock(
    "div",
    {
      class: normalizeClass(_ctx.m(_ctx.gcls("search-default"))),
      "data-tag": "tiny-search",
      onMouseenter: _cache[12] || (_cache[12] = function($event) {
        return _ctx.state.hovering = true;
      }),
      onMouseleave: _cache[13] || (_cache[13] = function($event) {
        return _ctx.state.hovering = false;
      })
    },
    [createElementVNode(
      "div",
      {
        class: normalizeClass(_ctx.m(_ctx.gcls("pc-search-line"), _ctx.gcls({
          "pc-search-line-focus": _ctx.state.focus
        }), _ctx.gcls({
          "pc-search-line-unfocus": !_ctx.state.focus
        }), _ctx.gcls({
          "pc-search-line-big": _ctx.big
        }), _ctx.gcls({
          "pc-search-line-unbig": !_ctx.big
        }))),
        "data-tag": "tiny-search__line"
      },
      [createVNode(Transition, {
        name: "mf-transition-search-line-fade",
        mode: "out-in",
        persisted: ""
      }, {
        default: withCtx(function() {
          return [withDirectives(createElementVNode(
            "div",
            {
              "data-tag": "tiny-search__present",
              class: normalizeClass(_ctx.m(_ctx.gcls("pc-search-present"), _ctx.gcls({
                "pc-search-present-big": _ctx.big
              }), _ctx.gcls({
                "pc-search-present-unbig": !_ctx.big
              }))),
              onClick: _cache[0] || (_cache[0] = function() {
                return _ctx.showSelector && _ctx.showSelector.apply(_ctx, arguments);
              })
            },
            [renderSlot(_ctx.$slots, "text", {
              slotScope: _ctx.state.searchValue
            }, function() {
              return [createElementVNode(
                "span",
                {
                  "data-tag": "tiny-search__text",
                  class: normalizeClass(_ctx.m(_ctx.gcls("pc-search-present-pointer")))
                },
                toDisplayString(_ctx.state.searchValue.text),
                3
                /* TEXT, CLASS */
              )];
            }), createElementVNode(
              "span",
              {
                "data-tag": "tiny-icon-outer",
                class: normalizeClass(_ctx.m(_ctx.gcls("pc-search-present-icon-outer")))
              },
              [createVNode(_component_icon_chevron_down, {
                "data-tag": "tiny-svg-size",
                class: normalizeClass(_ctx.m(_ctx.gcls("pc-search-present-icon-chevron-down")))
              }, null, 8, ["class"])],
              2
              /* CLASS */
            )],
            2
            /* CLASS */
          ), [[vShow, !_ctx.state.collapse && _ctx.state.types.length]])];
        }),
        _: 3
        /* FORWARDED */
      }), withDirectives(createElementVNode("input", {
        ref: "input",
        "onUpdate:modelValue": _cache[1] || (_cache[1] = function($event) {
          return _ctx.state.currentValue = $event;
        }),
        class: normalizeClass(_ctx.m(_ctx.gcls({
          "pc-search-input-background-transparent": _ctx.transparent
        }), _ctx.gcls({
          "pc-search-input-background-transparent-collapse": _ctx.transparent && _ctx.state.collapse
        }), _ctx.gcls("pc-search-input-default"), _ctx.gcls({
          "pc-search-input-collapse": _ctx.state.collapse
        }), _ctx.gcls({
          "pc-search-input-uncollapse": !_ctx.state.collapse
        }), _ctx.gcls({
          "pc-search-input-collapse-big": _ctx.state.collapse && _ctx.big
        }), _ctx.gcls({
          "pc-search-input-collapse-unbig": _ctx.state.collapse && !_ctx.big
        }), _ctx.gcls({
          "pc-search-input-big": _ctx.big
        }), _ctx.gcls({
          "pc-search-input-unbig": !_ctx.big
        }))),
        style: normalizeStyle(_ctx.transparent && _ctx.state.collapse ? {
          background: "rgba(255,255,255,0.3)"
        } : {}),
        placeholder: _ctx.placeholder,
        type: "text",
        "data-tag": "tiny-search__input",
        onKeyup: _cache[2] || (_cache[2] = withKeys(function() {
          return _ctx.searchEnterKey && _ctx.searchEnterKey.apply(_ctx, arguments);
        }, ["enter"])),
        onInput: _cache[3] || (_cache[3] = function() {
          return _ctx.handleInput && _ctx.handleInput.apply(_ctx, arguments);
        }),
        onChange: _cache[4] || (_cache[4] = function() {
          return _ctx.handleInput && _ctx.handleInput.apply(_ctx, arguments);
        }),
        onFocus: _cache[5] || (_cache[5] = function($event) {
          return _ctx.state.focus = true;
        }),
        onBlur: _cache[6] || (_cache[6] = function($event) {
          return _ctx.state.focus = false;
        }),
        onSelect: _cache[7] || (_cache[7] = withModifiers(function() {
        }, ["stop"])),
        tabindex: _ctx.tabindex
      }, null, 46, _hoisted_1), [[vModelText, _ctx.state.currentValue]]), createVNode(Transition, {
        name: "mf-transition-icon-scale-in"
      }, {
        default: withCtx(function() {
          return [_ctx.state.showClear && !_ctx.state.collapse ? (openBlock(), createElementBlock(
            "div",
            {
              key: 0,
              "data-tag": "tiny-search__input-btn",
              class: normalizeClass(_ctx.m(_ctx.gcls("pc-search-input-btn-transtion"), _ctx.gcls({
                "pc-search-input-btn-transtion-big": _ctx.big
              }), _ctx.gcls({
                "pc-search-input-btn-transtion-unbig": !_ctx.big
              })))
            },
            [createElementVNode(
              "a",
              {
                class: normalizeClass(_ctx.m(_ctx.gcls("pc-search-input-btn-transtion-a"), _ctx.gcls({
                  "pc-search-input-btn-transtion-a-big": _ctx.big
                }), _ctx.gcls({
                  "pc-search-input-btn-transtion-a-unbig": !_ctx.big
                }))),
                onClick: _cache[9] || (_cache[9] = function() {
                  return _ctx.clear && _ctx.clear.apply(_ctx, arguments);
                })
              },
              [createVNode(_component_icon_close, {
                onMousedown: _cache[8] || (_cache[8] = withModifiers(function() {
                }, ["prevent"])),
                "data-tag": "tiny-svg-size",
                class: normalizeClass(_ctx.m(_ctx.gcls("pc-search-input-btn-transtion-svg-size")))
              }, null, 8, ["class"])],
              2
              /* CLASS */
            )],
            2
            /* CLASS */
          )) : createCommentVNode("v-if", true)];
        }),
        _: 1
        /* STABLE */
      }), createElementVNode(
        "div",
        {
          "data-tag": "tiny-search__input-btn",
          class: normalizeClass(_ctx.m(_ctx.gcls("pc-search-input-btn"), _ctx.gcls({
            "pc-search-input-btn-big": _ctx.big
          }), _ctx.gcls({
            "pc-search-input-btn-unbig": !_ctx.big
          })))
        },
        [createElementVNode(
          "a",
          {
            class: normalizeClass(_ctx.m(_ctx.gcls("pc-search-input-btn-a"), _ctx.gcls({
              "pc-search-input-btn-a-big": _ctx.big
            }), _ctx.gcls({
              "pc-search-input-btn-a-unbig": !_ctx.big
            }))),
            onClick: _cache[10] || (_cache[10] = function() {
              return _ctx.searchClick && _ctx.searchClick.apply(_ctx, arguments);
            })
          },
          [createVNode(_component_icon_search, {
            class: normalizeClass(_ctx.m(_ctx.gcls("pc-search-input-btn-icon-search"), _ctx.gcls({
              "pc-search-input-btn-icon-search-transparent": _ctx.state.collapse && _ctx.transparent
            }))),
            "data-tag": "tiny-svg-size"
          }, null, 8, ["class"])],
          2
          /* CLASS */
        )],
        2
        /* CLASS */
      )],
      2
      /* CLASS */
    ), createVNode(Transition, {
      name: "mf-transition-zoom-in-top",
      mode: "out-in",
      persisted: ""
    }, {
      default: withCtx(function() {
        return [withDirectives(createElementVNode(
          "div",
          {
            ref: "selector",
            "data-tag": "tiny-search__selector",
            class: normalizeClass(_ctx.m(_ctx.gcls("search-selector")))
          },
          [createElementVNode(
            "div",
            {
              "data-tag": "tiny-search__selector-body",
              class: normalizeClass(_ctx.m(_ctx.gcls("search-selector-body")))
            },
            [createElementVNode("ul", _hoisted_2, [(openBlock(true), createElementBlock(
              Fragment,
              null,
              renderList(_ctx.state.types, function(item, index) {
                return openBlock(), createElementBlock("li", {
                  key: index,
                  "data-tag": "tiny-search__poplist-item",
                  class: normalizeClass(_ctx.m(_ctx.gcls("search-selector-poplist-item"), _ctx.gcls({
                    "search-selector-poplist-item-big": _ctx.big
                  }), _ctx.gcls({
                    "search-selector-poplist-item-unbig": !_ctx.big
                  }))),
                  onClick: function onClick($event) {
                    return _ctx.changeKey(item);
                  }
                }, [renderSlot(_ctx.$slots, "poplist", {
                  slotScope: item
                }, function() {
                  return [createTextVNode(
                    toDisplayString(item.text),
                    1
                    /* TEXT */
                  )];
                })], 10, _hoisted_3);
              }),
              128
              /* KEYED_FRAGMENT */
            ))])],
            2
            /* CLASS */
          )],
          2
          /* CLASS */
        ), [[vShow, _ctx.state.show && _ctx.state.types.length]])];
      }),
      _: 3
      /* FORWARDED */
    }), createElementVNode(
      "div",
      {
        class: normalizeClass(_ctx.m(_ctx.gcls("mobile-search")))
      },
      [createVNode(_component_tiny_input, {
        modelValue: _ctx.state.currentValue,
        "onUpdate:modelValue": _cache[11] || (_cache[11] = function($event) {
          return _ctx.state.currentValue = $event;
        }),
        onInput: _ctx.handleInput,
        "custom-class": _ctx.m(_ctx.gcls("mobile-search-input"), _ctx.gcls({
          "mobile-search-input-bg-change": _ctx.changeBgColor
        })),
        placeholder: _ctx.placeholder
      }, createSlots({
        prefix: withCtx(function() {
          return [createVNode(_component_icon_search, {
            class: normalizeClass(_ctx.m(_ctx.gcls("mobile-search-svg-size"), _ctx.gcls({
              "mobile-search-svg-size-color": _ctx.state.collapse && _ctx.transparent
            }))),
            "data-tag": "tiny-svg-size"
          }, null, 8, ["class"])];
        }),
        _: 2
        /* DYNAMIC */
      }, [_ctx.state.showClear && !_ctx.state.collapse ? {
        name: "suffix",
        fn: withCtx(function() {
          return [createElementVNode("span", _hoisted_4, [createVNode(_component_icon_close, {
            "data-tag": "tiny-svg-size",
            "custom-class": "w-3 h-3 fill-color-bg-1 relative -top-0.5",
            onClick: _ctx.clear
          }, null, 8, ["onClick"])])];
        }),
        key: "0"
      } : void 0]), 1032, ["modelValue", "onInput", "custom-class", "placeholder"]), createVNode(_component_tiny_button, {
        type: "text",
        onClick: _ctx.searchClick,
        class: normalizeClass(_ctx.m(_ctx.gcls("mobile-search-button"), _ctx.gcls({
          "mobile-search-button-notShowButton": !_ctx.showButton
        })))
      }, {
        default: withCtx(function() {
          return [createTextVNode(
            toDisplayString(_ctx.t("ui.search.placeholder")),
            1
            /* TEXT */
          )];
        }),
        _: 1
        /* STABLE */
      }, 8, ["onClick", "class"])],
      2
      /* CLASS */
    )],
    34
    /* CLASS, NEED_HYDRATION */
  );
}
var mobileFirst = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  mobileFirst as default
};
