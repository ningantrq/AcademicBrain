import { renderless, api } from "@opentiny/vue-renderless/search/vue";
import { defineComponent, props, setup as _setup } from "@opentiny/vue-common";
import { iconSearch, iconOperationfaild } from "@opentiny/vue-icon";
import "@opentiny/vue-theme-mobile/search/index.css";
import { resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, createVNode, normalizeStyle, withDirectives, withKeys, withModifiers, vModelText, vShow, toDisplayString, renderSlot } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = /* @__PURE__ */ defineComponent({
  props: [].concat(props, ["transparent", "searchTypes", "placeholder", "buttonText", "modelValue", "themeType", "isEnterSearch"]),
  components: {
    IconSearch: iconSearch(),
    IconOperationfaild: iconOperationfaild()
  },
  emits: ["change", "search", "update:modelValue", "clear", "select", "input"],
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  class: /* @__PURE__ */ normalizeClass(["tiny-mobile-search__line"])
};
var _hoisted_2 = {
  class: "tiny-mobile-search__box"
};
var _hoisted_3 = {
  class: "tiny-mobile-search__input-btn"
};
var _hoisted_4 = {
  class: "tiny-mobile-search__icon"
};
var _hoisted_5 = ["placeholder"];
var _hoisted_6 = {
  class: "tiny-mobile-search__close-icon"
};
var _hoisted_7 = {
  class: "tiny-mobile-search__label"
};
var _hoisted_8 = {
  class: "tiny-mobile-search__right"
};
var _hoisted_9 = {
  class: "tiny-mobile-search__text"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_icon_search = resolveComponent("icon-search");
  var _component_icon_operationfaild = resolveComponent("icon-operationfaild");
  return openBlock(), createElementBlock(
    "div",
    {
      class: normalizeClass(["tiny-mobile-search", "tiny-mobile-search-" + _ctx.themeType, {
        collapse: _ctx.state.collapse
      }, {
        focus: _ctx.state.focus || !_ctx.state.focus && _ctx.state.currentValue
      }])
    },
    [createElementVNode("div", _hoisted_1, [createElementVNode("div", _hoisted_2, [createElementVNode("div", _hoisted_3, [createElementVNode("a", _hoisted_4, [createVNode(_component_icon_search, {
      style: normalizeStyle({
        fill: _ctx.state.collapse && _ctx.transparent ? "#fff" : ""
      }),
      onClick: _ctx.searchClick
    }, null, 8, ["style", "onClick"])])]), withDirectives(createElementVNode("input", {
      ref: "input",
      "onUpdate:modelValue": _cache[0] || (_cache[0] = function($event) {
        return _ctx.state.currentValue = $event;
      }),
      style: normalizeStyle(_ctx.transparent ? {
        border: "transparent",
        background: _ctx.state.collapse ? "rgba(255,255,255,0.3)" : "#fff"
      } : {}),
      placeholder: _ctx.placeholder,
      type: "text",
      class: normalizeClass(["tiny-mobile-search__input", "tiny-mobile-search__input-" + _ctx.themeType]),
      onKeyup: _cache[1] || (_cache[1] = withKeys(function() {
        return _ctx.searchEnterKey && _ctx.searchEnterKey.apply(_ctx, arguments);
      }, ["enter"])),
      onChange: _cache[2] || (_cache[2] = function() {
        return _ctx.handleChange && _ctx.handleChange.apply(_ctx, arguments);
      }),
      onInput: _cache[3] || (_cache[3] = function() {
        return _ctx.handleInput && _ctx.handleInput.apply(_ctx, arguments);
      }),
      onFocus: _cache[4] || (_cache[4] = function($event) {
        return _ctx.state.focus = true;
      }),
      onBlur: _cache[5] || (_cache[5] = function($event) {
        return _ctx.state.focus = false;
      }),
      onSelect: _cache[6] || (_cache[6] = withModifiers(function() {
      }, ["stop"]))
    }, null, 46, _hoisted_5), [[vModelText, _ctx.state.currentValue]]), withDirectives(createElementVNode(
      "span",
      _hoisted_6,
      [createVNode(_component_icon_operationfaild, {
        onClick: _ctx.clear
      }, null, 8, ["onClick"])],
      512
      /* NEED_PATCH */
    ), [[vShow, _ctx.state.currentValue]])]), createElementVNode("label", _hoisted_7, [createElementVNode(
      "span",
      null,
      toDisplayString(_ctx.placeholder),
      1
      /* TEXT */
    )])]), createElementVNode("div", _hoisted_8, [renderSlot(_ctx.$slots, "default", {}, function() {
      return [createElementVNode("div", {
        class: "tiny-mobile-search__present",
        onClick: _cache[7] || (_cache[7] = function() {
          return _ctx.searchClick && _ctx.searchClick.apply(_ctx, arguments);
        })
      }, [createElementVNode(
        "span",
        _hoisted_9,
        toDisplayString(_ctx.buttonText),
        1
        /* TEXT */
      )])];
    })])],
    2
    /* CLASS */
  );
}
var mobile = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  mobile as default
};
