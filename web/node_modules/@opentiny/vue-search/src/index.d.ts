export declare const ISearchProps: {
    mini: {
        type: BooleanConstructor;
        default: boolean;
    };
    big: {
        type: BooleanConstructor;
        default: boolean;
    };
    buttonText: {
        type: StringConstructor;
        default: () => any;
    };
    /**
     * 设置为透明模式，配置为true时，边框变为透明且收缩后半透明显示，一般用在带有背景的场景
     */
    transparent: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * 搜索的类型选项，格式为[{text:'文档',value:1},...]，不配置时类型选择固定显示为All
     */
    searchTypes: {
        type: ArrayConstructor;
        default: () => never[];
    };
    /**
     * 设置搜索输入框内的提示占位文本
     */
    placeholder: {
        type: StringConstructor;
        default: string;
    };
    modelValue: {
        type: StringConstructor;
        default: string;
    };
    clearable: {
        type: BooleanConstructor;
        default: boolean;
    };
    tabindex: {
        type: StringConstructor;
        default: string;
    };
    /**
     * 配置搜索输入框enter键,enter按下触发搜索
     */
    isEnterSearch: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * 配置主题色，primary:蓝 gray:灰
     */
    themeType: {
        type: StringConstructor;
        default: string;
        validator: (value: string) => boolean;
    };
    showButton: {
        type: BooleanConstructor;
        default: boolean;
    };
    changeBgColor: {
        type: BooleanConstructor;
        default: boolean;
    };
    typeValue: ObjectConstructor;
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor; /**
     * 设置为透明模式，配置为true时，边框变为透明且收缩后半透明显示，一般用在带有背景的场景
     */
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
};
declare const _default: import("@vue/runtime-core").DefineComponent<{
    mini: {
        type: BooleanConstructor;
        default: boolean;
    };
    big: {
        type: BooleanConstructor;
        default: boolean;
    };
    buttonText: {
        type: StringConstructor;
        default: () => any;
    };
    /**
     * 设置为透明模式，配置为true时，边框变为透明且收缩后半透明显示，一般用在带有背景的场景
     */
    transparent: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * 搜索的类型选项，格式为[{text:'文档',value:1},...]，不配置时类型选择固定显示为All
     */
    searchTypes: {
        type: ArrayConstructor;
        default: () => never[];
    };
    /**
     * 设置搜索输入框内的提示占位文本
     */
    placeholder: {
        type: StringConstructor;
        default: string;
    };
    modelValue: {
        type: StringConstructor;
        default: string;
    };
    clearable: {
        type: BooleanConstructor;
        default: boolean;
    };
    tabindex: {
        type: StringConstructor;
        default: string;
    };
    /**
     * 配置搜索输入框enter键,enter按下触发搜索
     */
    isEnterSearch: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * 配置主题色，primary:蓝 gray:灰
     */
    themeType: {
        type: StringConstructor;
        default: string;
        validator: (value: string) => boolean;
    };
    showButton: {
        type: BooleanConstructor;
        default: boolean;
    };
    changeBgColor: {
        type: BooleanConstructor;
        default: boolean;
    };
    typeValue: ObjectConstructor;
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor; /**
     * 设置为透明模式，配置为true时，边框变为透明且收缩后半透明显示，一般用在带有背景的场景
     */
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    mini: {
        type: BooleanConstructor;
        default: boolean;
    };
    big: {
        type: BooleanConstructor;
        default: boolean;
    };
    buttonText: {
        type: StringConstructor;
        default: () => any;
    };
    /**
     * 设置为透明模式，配置为true时，边框变为透明且收缩后半透明显示，一般用在带有背景的场景
     */
    transparent: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * 搜索的类型选项，格式为[{text:'文档',value:1},...]，不配置时类型选择固定显示为All
     */
    searchTypes: {
        type: ArrayConstructor;
        default: () => never[];
    };
    /**
     * 设置搜索输入框内的提示占位文本
     */
    placeholder: {
        type: StringConstructor;
        default: string;
    };
    modelValue: {
        type: StringConstructor;
        default: string;
    };
    clearable: {
        type: BooleanConstructor;
        default: boolean;
    };
    tabindex: {
        type: StringConstructor;
        default: string;
    };
    /**
     * 配置搜索输入框enter键,enter按下触发搜索
     */
    isEnterSearch: {
        type: BooleanConstructor;
        default: boolean;
    };
    /**
     * 配置主题色，primary:蓝 gray:灰
     */
    themeType: {
        type: StringConstructor;
        default: string;
        validator: (value: string) => boolean;
    };
    showButton: {
        type: BooleanConstructor;
        default: boolean;
    };
    changeBgColor: {
        type: BooleanConstructor;
        default: boolean;
    };
    typeValue: ObjectConstructor;
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor; /**
     * 设置为透明模式，配置为true时，边框变为透明且收缩后半透明显示，一般用在带有背景的场景
     */
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    big: boolean;
    tiny_mode_root: boolean;
    modelValue: string;
    tabindex: string;
    mini: boolean;
    clearable: boolean;
    placeholder: string;
    transparent: boolean;
    buttonText: string;
    searchTypes: unknown[];
    themeType: string;
    isEnterSearch: boolean;
    showButton: boolean;
    changeBgColor: boolean;
}, {}>;
export default _default;
