declare const _default: import("@vue/runtime-core").DefineComponent<Readonly<{
    label?: any;
    name?: any;
    disabled?: any;
    tiny_mode?: any;
    tiny_mode_root?: any;
    tiny_template?: any;
    tiny_renderless?: any;
    _constants?: any;
    tiny_theme?: any;
    tiny_chart_theme?: any;
    modelValue?: any;
    size?: any;
    tabindex?: any;
    placement?: any;
    popperClass?: any;
    popperAppendToBody?: any;
    options?: any;
    textField?: any;
    tip?: any;
    valueField?: any;
    loading?: any;
    delay?: any;
    id?: any;
    readonly?: any;
    hoverExpand?: any;
    clearable?: any;
    autocomplete?: any;
    displayOnly?: any;
    valueKey?: any;
    placeholder?: any;
    shape?: any;
    showTips?: any;
    multiple?: any;
    filterable?: any;
    filterMethod?: any;
    collapseTags?: any;
    remote?: any;
    remoteConfig?: any;
    dataset?: any;
    showCheck?: any;
    showAlloption?: any;
    noDataText?: any;
    loadingText?: any;
    noMatchText?: any;
    allowCreate?: any;
    remoteMethod?: any;
    reserveKeyword?: any;
    automaticDropdown?: any;
    defaultFirstOption?: any;
    multipleLimit?: any;
    hideDrop?: any;
    copyable?: any;
    renderType?: any;
    gridOp?: any;
    treeOp?: any;
    dropStyle?: any;
    cacheOp?: any;
    isDropInheritWidth?: any;
    tagSelectable?: any;
    selectConfig?: any;
    radioConfig?: any;
    allowCopy?: any;
    textSplit?: any;
    autoClose?: any;
    queryDebounce?: any;
    ignoreEnter?: any;
    dropdownIcon?: any;
    disabledTooltipContent?: any;
    optimization?: any;
    initQuery?: any;
    extraQueryParams?: any;
    searchable?: any;
    showEmptyImage?: any;
    tagType?: any;
    clearNoMatchValue?: any;
    showOverflowTooltip?: any;
    showDropdown?: any;
    expandTags?: any;
    inputBoxType?: any;
}>, {
    t: (this: any, path: any, options?: any) => any;
    vm: any;
    f: (props: any, attrs?: {}) => {};
    a: (attrs: any, filters: any, include: any) => {};
    d: (props: any) => void;
    dp: (props: any) => void;
    gcls: (key: any) => any;
}, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, ("visible-change" | "update:modelValue" | "change" | "blur" | "focus" | "clear" | "remove-tag" | "dropdown-click" | "handleDropdownClick")[], "visible-change" | "update:modelValue" | "change" | "blur" | "focus" | "clear" | "remove-tag" | "dropdown-click" | "handleDropdownClick", import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<Readonly<{
    label?: any;
    name?: any;
    disabled?: any;
    tiny_mode?: any;
    tiny_mode_root?: any;
    tiny_template?: any;
    tiny_renderless?: any;
    _constants?: any;
    tiny_theme?: any;
    tiny_chart_theme?: any;
    modelValue?: any;
    size?: any;
    tabindex?: any;
    placement?: any;
    popperClass?: any;
    popperAppendToBody?: any;
    options?: any;
    textField?: any;
    tip?: any;
    valueField?: any;
    loading?: any;
    delay?: any;
    id?: any;
    readonly?: any;
    hoverExpand?: any;
    clearable?: any;
    autocomplete?: any;
    displayOnly?: any;
    valueKey?: any;
    placeholder?: any;
    shape?: any;
    showTips?: any;
    multiple?: any;
    filterable?: any;
    filterMethod?: any;
    collapseTags?: any;
    remote?: any;
    remoteConfig?: any;
    dataset?: any;
    showCheck?: any;
    showAlloption?: any;
    noDataText?: any;
    loadingText?: any;
    noMatchText?: any;
    allowCreate?: any;
    remoteMethod?: any;
    reserveKeyword?: any;
    automaticDropdown?: any;
    defaultFirstOption?: any;
    multipleLimit?: any;
    hideDrop?: any;
    copyable?: any;
    renderType?: any;
    gridOp?: any;
    treeOp?: any;
    dropStyle?: any;
    cacheOp?: any;
    isDropInheritWidth?: any;
    tagSelectable?: any;
    selectConfig?: any;
    radioConfig?: any;
    allowCopy?: any;
    textSplit?: any;
    autoClose?: any;
    queryDebounce?: any;
    ignoreEnter?: any;
    dropdownIcon?: any;
    disabledTooltipContent?: any;
    optimization?: any;
    initQuery?: any;
    extraQueryParams?: any;
    searchable?: any;
    showEmptyImage?: any;
    tagType?: any;
    clearNoMatchValue?: any;
    showOverflowTooltip?: any;
    showDropdown?: any;
    expandTags?: any;
    inputBoxType?: any;
}>>> & {
    "onVisible-change"?: ((...args: any[]) => any) | undefined;
    onFocus?: ((...args: any[]) => any) | undefined;
    onBlur?: ((...args: any[]) => any) | undefined;
    onChange?: ((...args: any[]) => any) | undefined;
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
    onClear?: ((...args: any[]) => any) | undefined;
    "onRemove-tag"?: ((...args: any[]) => any) | undefined;
    "onDropdown-click"?: ((...args: any[]) => any) | undefined;
    onHandleDropdownClick?: ((...args: any[]) => any) | undefined;
}, {
    readonly label?: any;
    readonly name?: any;
    readonly disabled?: any;
    readonly tiny_mode?: any;
    readonly tiny_mode_root?: any;
    readonly tiny_template?: any;
    readonly tiny_renderless?: any;
    readonly _constants?: any;
    readonly tiny_theme?: any;
    readonly tiny_chart_theme?: any;
    readonly modelValue?: any;
    readonly size?: any;
    readonly tabindex?: any;
    readonly placement?: any;
    readonly popperClass?: any;
    readonly popperAppendToBody?: any;
    readonly options?: any;
    readonly textField?: any;
    readonly tip?: any;
    readonly valueField?: any;
    readonly loading?: any;
    readonly delay?: any;
    readonly id?: any;
    readonly readonly?: any;
    readonly hoverExpand?: any;
    readonly clearable?: any;
    readonly autocomplete?: any;
    readonly displayOnly?: any;
    readonly valueKey?: any;
    readonly placeholder?: any;
    readonly shape?: any;
    readonly showTips?: any;
    readonly multiple?: any;
    readonly filterable?: any;
    readonly filterMethod?: any;
    readonly collapseTags?: any;
    readonly remote?: any;
    readonly remoteConfig?: any;
    readonly dataset?: any;
    readonly showCheck?: any;
    readonly showAlloption?: any;
    readonly noDataText?: any;
    readonly loadingText?: any;
    readonly noMatchText?: any;
    readonly allowCreate?: any;
    readonly remoteMethod?: any;
    readonly reserveKeyword?: any;
    readonly automaticDropdown?: any;
    readonly defaultFirstOption?: any;
    readonly multipleLimit?: any;
    readonly hideDrop?: any;
    readonly copyable?: any;
    readonly renderType?: any;
    readonly gridOp?: any;
    readonly treeOp?: any;
    readonly dropStyle?: any;
    readonly cacheOp?: any;
    readonly isDropInheritWidth?: any;
    readonly tagSelectable?: any;
    readonly selectConfig?: any;
    readonly radioConfig?: any;
    readonly allowCopy?: any;
    readonly textSplit?: any;
    readonly autoClose?: any;
    readonly queryDebounce?: any;
    readonly ignoreEnter?: any;
    readonly dropdownIcon?: any;
    readonly disabledTooltipContent?: any;
    readonly optimization?: any;
    readonly initQuery?: any;
    readonly extraQueryParams?: any;
    readonly searchable?: any;
    readonly showEmptyImage?: any;
    readonly tagType?: any;
    readonly clearNoMatchValue?: any;
    readonly showOverflowTooltip?: any;
    readonly showDropdown?: any;
    readonly expandTags?: any;
    readonly inputBoxType?: any;
}, {}>;
export default _default;
