function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
import { renderless as renderless$1, api as api$1 } from "@opentiny/vue-renderless/slider-button-group/vue";
import { defineComponent, $props, setup as _setup, props } from "@opentiny/vue-common";
import SliderButton from "@opentiny/vue-slider-button";
import { renderless, api } from "@opentiny/vue-renderless/slider-button-group/slide-button";
import { iconChevronRight, iconChevronLeft } from "@opentiny/vue-icon";
import { resolveComponent, openBlock, createElementBlock, createElementVNode, normalizeClass, renderSlot, createVNode, normalizeStyle, Fragment, renderList, createBlock, resolveDynamicComponent, withCtx, mergeProps, createSlots, normalizeProps, guardReactiveProps } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main$1 = defineComponent({
  emits: ["click"],
  components: {
    IconChevronRight: iconChevronRight(),
    IconChevronLeft: iconChevronLeft()
  },
  props: _extends({}, $props, {
    noArrow: Boolean,
    flex: Boolean,
    size: String,
    sliderSpace: Number,
    sliderWidth: Number,
    delay: {
      type: Number,
      default: 5
    },
    sliderHeight: Number,
    data: Array,
    duration: {
      type: Number,
      default: 300
    },
    sliderCount: {
      type: Number,
      default: 0
    },
    currentIndex: {
      type: Number,
      default: 0
    }
  }),
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1$1 = {
  class: "items-center w-full flex",
  "data-tag": "tiny-slider-button-bar"
};
var _hoisted_2$1 = {
  class: "w-7 flex items-center justify-center h-full pr-2"
};
var _hoisted_3 = {
  class: "flex bg-color-bg-2 rounded-md"
};
var _hoisted_4 = ["onClick"];
var _hoisted_5 = {
  class: "w-7 h-full flex items-center justify-center pl-2"
};
function _sfc_render$1(_ctx, _cache, $props2, $setup, $data, $options) {
  var _component_IconChevronLeft = resolveComponent("IconChevronLeft");
  var _component_IconChevronRight = resolveComponent("IconChevronRight");
  return openBlock(), createElementBlock("div", _hoisted_1$1, [createElementVNode(
    "div",
    {
      class: normalizeClass(["hidden flex-none h-12 items-center select-none cursor-pointer bg-color-bg-1", {
        "sm:flex": _ctx.sliderState.canLeftScroll || _ctx.sliderState.canRightScroll
      }]),
      onClick: _cache[0] || (_cache[0] = function() {
        return _ctx.arrowLeftHandler && _ctx.arrowLeftHandler.apply(_ctx, arguments);
      })
    },
    [renderSlot(_ctx.$slots, "left-bar", {
      dataTag: "tiny-slider-button-bar-left"
    }, function() {
      return [createElementVNode("div", _hoisted_2$1, [createVNode(_component_IconChevronLeft, {
        class: normalizeClass(["h-5 w-5", _ctx.sliderState.canLeftScroll ? "fill-color-icon-primary" : "fill-color-text-disabled"])
      }, null, 8, ["class"])])];
    })],
    2
    /* CLASS */
  ), createElementVNode(
    "div",
    {
      ref: "slideMain",
      class: normalizeClass(["inline-flex rounded relative scrollbar-size-0 box-border flex-auto overflow-auto", _ctx.size === "large" ? "h-auto" : _ctx.size === "medium" ? "h-8" : "h-7"])
    },
    [createElementVNode(
      "div",
      {
        class: normalizeClass(["absolute bg-color-bg-1 shadow h-6 rounded", _ctx.size === "large" ? "top-1" : "top-0.5"]),
        style: normalizeStyle({
          "transition": "left 0.5s",
          "left": _ctx.sliderSpace + "px",
          "width": _ctx.sliderWidth + "px",
          "height": _ctx.sliderHeight + "px"
        })
      },
      null,
      6
      /* CLASS, STYLE */
    ), createElementVNode("div", _hoisted_3, [(openBlock(true), createElementBlock(
      Fragment,
      null,
      renderList(_ctx.data, function(node, index) {
        return openBlock(), createElementBlock("div", {
          ref_for: true,
          ref: "block" + index,
          key: index,
          style: normalizeStyle({
            width: _ctx.flex ? 100 / _ctx.data.length + "%" : null
          }),
          onClick: function onClick($event) {
            return _ctx.clickHandler(index);
          }
        }, [renderSlot(_ctx.$slots, "content", {
          dataTag: "tiny-slider-button-bar-content",
          slotScoped: {
            node,
            index,
            show: index > _ctx.sliderState.boundingIndex.left && (_ctx.sliderState.boundingIndex.right === -1 || index < _ctx.sliderState.boundingIndex.right)
          }
        })], 12, _hoisted_4);
      }),
      128
      /* KEYED_FRAGMENT */
    ))])],
    2
    /* CLASS */
  ), createElementVNode(
    "div",
    {
      class: normalizeClass(["hidden flex-none h-12 cursor-pointer items-center select-none bg-color-bg-1", {
        "sm:flex": _ctx.sliderState.canLeftScroll || _ctx.sliderState.canRightScroll
      }]),
      onClick: _cache[1] || (_cache[1] = function() {
        return _ctx.arrowRightHandler && _ctx.arrowRightHandler.apply(_ctx, arguments);
      })
    },
    [renderSlot(_ctx.$slots, "right-bar", {
      dataTag: "tiny-slider-button-bar-right"
    }, function() {
      return [createElementVNode("div", _hoisted_5, [createVNode(_component_IconChevronRight, {
        class: normalizeClass(["h-5 w-5", _ctx.sliderState.canRightScroll ? "fill-color-icon-primary" : "fill-color-text-disabled"])
      }, null, 8, ["class"])])];
    })],
    2
    /* CLASS */
  )]);
}
var SlideBar = /* @__PURE__ */ _export_sfc(_sfc_main$1, [["render", _sfc_render$1]]);
var _sfc_main = defineComponent({
  components: {
    SliderButton,
    SlideBar
  },
  emits: ["change"],
  props: [].concat(props, ["options", "modelValue", "type", "size", "pageTurn", "duration", "nameField", "iconField", "noArrow", "flex", "delay", "disabled"]),
  setup: function setup2(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless: renderless$1,
      api: api$1
    });
  }
});
var _hoisted_1 = {
  "data-tag": "tiny-slider-button-group"
};
var _hoisted_2 = {
  class: "bg-color-bg-3 inline-flex h-auto rounded-md relative box-border"
};
function _sfc_render(_ctx, _cache, $props2, $setup, $data, $options) {
  var _component_slider_button = resolveComponent("slider-button");
  var _component_SlideBar = resolveComponent("SlideBar");
  return openBlock(), createElementBlock("div", _hoisted_1, [!_ctx.pageTurn ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.state.tag), {
    key: 0,
    class: "inline-flex",
    role: "sliderButtonGroup"
  }, {
    default: withCtx(function() {
      return [createElementVNode("div", _hoisted_2, [createElementVNode(
        "div",
        {
          class: normalizeClass(["absolute bg-color-bg-1 shadow-sm h-6 rounded", _ctx.size === "large" ? "top-1" : "top-0.5"]),
          style: normalizeStyle({
            "transition": "left 0.25s,width 0.25s",
            "left": _ctx.state.sliderSpace + "px",
            "width": _ctx.state.sliderWidth + "px",
            "height": _ctx.state.sliderHeight + "px"
          })
        },
        null,
        6
        /* CLASS, STYLE */
      ), _ctx.options && _ctx.options.length !== 0 ? renderSlot(_ctx.$slots, "default", {
        key: 0
      }, function() {
        return [(openBlock(true), createElementBlock(
          Fragment,
          null,
          renderList(_ctx.options, function(item, index) {
            return openBlock(), createBlock(
              _component_slider_button,
              mergeProps({
                key: index
              }, item),
              null,
              16
              /* FULL_PROPS */
            );
          }),
          128
          /* KEYED_FRAGMENT */
        ))];
      }) : renderSlot(_ctx.$slots, "default", {
        key: 1
      })])];
    }),
    _: 3
    /* FORWARDED */
  })) : (openBlock(), createBlock(resolveDynamicComponent(_ctx.state.tag), {
    key: 1,
    class: "flex",
    role: "sliderButtonGroup"
  }, {
    default: withCtx(function() {
      return [createVNode(_component_SlideBar, {
        ref: "slideBar",
        data: _ctx.options,
        duration: _ctx.duration,
        "no-arrow": _ctx.noArrow,
        flex: _ctx.flex,
        size: _ctx.size,
        "slider-space": _ctx.state.sliderSpace,
        "slider-width": _ctx.state.sliderWidth,
        "slider-height": _ctx.state.sliderHeight,
        type: _ctx.type,
        sliderCount: _ctx.state.sliderCount,
        currentIndex: _ctx.state.currentIndex,
        delay: _ctx.delay
      }, createSlots({
        "left-bar": withCtx(function() {
          return [];
        }),
        "right-bar": withCtx(function() {
          return [];
        }),
        _: 2
        /* DYNAMIC */
      }, [_ctx.options && _ctx.options.length !== 0 ? {
        name: "content",
        fn: withCtx(function(_ref) {
          var _ref$slotScoped = _ref.slotScoped, node = _ref$slotScoped.node, index = _ref$slotScoped.index;
          return [_ctx.type !== "icon" ? renderSlot(_ctx.$slots, "item", {
            key: 0,
            slotScope: node,
            index
          }, function() {
            return [createVNode(_component_slider_button, mergeProps({
              label: node[_ctx.nameField]
            }, node), null, 16, ["label"])];
          }) : renderSlot(_ctx.$slots, "default", {
            key: 1,
            index
          }, function() {
            return [createVNode(
              _component_slider_button,
              normalizeProps(guardReactiveProps(node)),
              {
                default: withCtx(function() {
                  return [(openBlock(), createBlock(resolveDynamicComponent(node[_ctx.iconField])))];
                }),
                _: 2
                /* DYNAMIC */
              },
              1040
              /* FULL_PROPS, DYNAMIC_SLOTS */
            )];
          })];
        }),
        key: "0"
      } : void 0]), 1032, ["data", "duration", "no-arrow", "flex", "size", "slider-space", "slider-width", "slider-height", "type", "sliderCount", "currentIndex", "delay"])];
    }),
    _: 3
    /* FORWARDED */
  }))]);
}
var mobileFirst = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  mobileFirst as default
};
