import { renderless, api } from "@opentiny/vue-renderless/slider-button/vue";
import { defineComponent, props, setup as _setup } from "@opentiny/vue-common";
import { openBlock, createElementBlock, normalizeClass, withDirectives, createElementVNode, vModelRadio, withModifiers, renderSlot, Fragment, createTextVNode, toDisplayString, createCommentVNode } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  emits: ["change"],
  props: [].concat(props, ["label", "events", "text", "size", "disabled"]),
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = ["aria-checked", "tabindex"];
var _hoisted_2 = ["value"];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("label", {
    "data-tag": "tiny-slider-button",
    ref: "sliderButton",
    class: normalizeClass(["inline-flex relative outline-0 cursor-pointer items-center", {
      "hover:bg-color-fill-1 hover:rounded hover:shadow-sm": _ctx.state.value !== (_ctx.label || _ctx.text) & !_ctx.state.disabled
    }, _ctx.state.size === "large" ? "m-1" : "m-0.5"]),
    role: "radio",
    "aria-checked": _ctx.state.value === (_ctx.label || _ctx.text),
    tabindex: _ctx.state.tabIndex
  }, [withDirectives(createElementVNode("input", {
    class: "opacity-0 outline-0 absolute -z-10",
    value: _ctx.label || _ctx.text,
    type: "radio",
    "onUpdate:modelValue": _cache[0] || (_cache[0] = function($event) {
      return _ctx.state.value = $event;
    }),
    onChange: _cache[1] || (_cache[1] = function() {
      return _ctx.handleChange && _ctx.handleChange.apply(_ctx, arguments);
    }),
    tabindex: "-1",
    ref: "sliderInput"
  }, null, 40, _hoisted_2), [[vModelRadio, _ctx.state.value]]), createElementVNode(
    "span",
    {
      "data-tag": "tiny-slider-button-text",
      class: normalizeClass(_ctx.m("relative items-center text-center overflow-hidden text-ellipsis whitespace-nowrap cursor-pointer box-border", _ctx.state.value !== (_ctx.label || _ctx.text) ? !_ctx.state.disabled && "shadow-none text-color-text-secondary hover:text-color-text-primary" : !_ctx.state.disabled && "text-color-brand active:text-color-brand", _ctx.state.type === "icon" ? "flex items-center justify-center w-6 h-6 p-1 [&_svg]:w-6 [&_svg]:h-6" : "inline-block", _ctx.state.size === "large" ? _ctx.state.type === "icon" ? "w-10 h-10 p-2" : "h-10 px-4 min-w-[theme(spacing.12)] max-w-[theme(spacing.32)] text-sm leading-10" : _ctx.state.type !== "icon" && "h-6 px-2 min-w-[theme(spacing.10)] max-w-[theme(spacing.28)] text-xs leading-6", {
        "p-1 w-7 h-7 [&_svg]:w-4.5 [&_svg]:h-4.5": _ctx.state.size === "medium" && _ctx.state.type === "icon"
      }, _ctx.state.type === "icon" && _ctx.state.value === (_ctx.label || _ctx.text) ? "fill-color-brand active:fill-color-brand" : "fill-color-none-hover active:fill-color-none-hover hover:fill-color-icon-secondary", _ctx.state.value === (_ctx.label || _ctx.text) && _ctx.state.disabled ? _ctx.state.type === "icon" ? "fill-color-brand-disabled cursor-not-allowed" : "text-color-brand-disabled cursor-not-allowed" : "", _ctx.state.value !== (_ctx.label || _ctx.text) && _ctx.state.disabled ? _ctx.state.type === "icon" ? "fill-color-icon-disabled cursor-not-allowed" : "text-color-text-disabled cursor-not-allowed" : "")),
      onKeydown: _cache[2] || (_cache[2] = withModifiers(function() {
      }, ["stop"]))
    },
    [renderSlot(_ctx.$slots, "default"), !_ctx.slots.default ? (openBlock(), createElementBlock(
      Fragment,
      {
        key: 0
      },
      [createTextVNode(
        toDisplayString(_ctx.text || _ctx.label),
        1
        /* TEXT */
      )],
      64
      /* STABLE_FRAGMENT */
    )) : createCommentVNode("v-if", true)],
    34
    /* CLASS, NEED_HYDRATION */
  )], 10, _hoisted_1);
}
var mobileFirst = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  mobileFirst as default
};
