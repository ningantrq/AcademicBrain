function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
import { defineComponent, props, setup as _setup, $props, $prefix, $setup } from "@opentiny/vue-common";
import { renderless, api } from "@opentiny/vue-renderless/steps/vue";
import { iconRefres, iconYes, iconChevronLeft, iconChevronRight, iconFinish, iconWarn, IconFinish, IconWarn } from "@opentiny/vue-icon";
import "@opentiny/vue-theme/steps/index.css";
import { resolveComponent, openBlock, createElementBlock, createElementVNode, Fragment, renderList, normalizeStyle, normalizeClass, renderSlot, toDisplayString, createCommentVNode, createBlock, createVNode, createTextVNode, withCtx, withDirectives, vShow } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

import { renderless as renderless$1, api as api$1 } from "@opentiny/vue-renderless/steps/slide-bar";
var _sfc_main$4 = defineComponent({
  emits: ["click"],
  components: {
    IconRefres: iconRefres(),
    IconYes: iconYes()
  },
  props: [].concat(props, ["vertical", "showNumber", "nameField", "statusField", "countField", "start", "data", "space", "active", "reverse"]),
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1$3 = {
  class: "tiny-steps"
};
var _hoisted_2$3 = {
  class: "tiny-steps-advanced"
};
var _hoisted_3$3 = ["onClick"];
var _hoisted_4$3 = ["title"];
var _hoisted_5$2 = {
  key: 0,
  class: "count"
};
function _sfc_render$3(_ctx, _cache, $props2, $setup2, $data, $options) {
  var _component_icon_refres = resolveComponent("icon-refres");
  var _component_icon_yes = resolveComponent("icon-yes");
  return openBlock(), createElementBlock("div", _hoisted_1$3, [createElementVNode("ul", _hoisted_2$3, [(openBlock(true), createElementBlock(
    Fragment,
    null,
    renderList(_ctx.data, function(node, index) {
      var _normalizeClass;
      return openBlock(), createElementBlock("li", {
        key: index,
        style: normalizeStyle({
          width: _ctx.space ? _ctx.state.computedSpace : 100 / _ctx.data.length + "%"
        }),
        class: normalizeClass((_normalizeClass = {
          current: index === _ctx.active
        }, _normalizeClass[node[_ctx.statusField]] = node[_ctx.statusField], _normalizeClass)),
        onClick: function onClick($event) {
          return _ctx.$emit("click", index, node);
        }
      }, [renderSlot(_ctx.$slots, "item", {
        slotScope: node,
        index
      }, function() {
        return [createElementVNode("div", {
          class: "label",
          title: node[_ctx.nameField]
        }, [createElementVNode(
          "span",
          null,
          toDisplayString(node[_ctx.nameField]),
          1
          /* TEXT */
        )], 8, _hoisted_4$3), node[_ctx.countField] ? (openBlock(), createElementBlock(
          "div",
          _hoisted_5$2,
          toDisplayString(node[_ctx.countField]),
          1
          /* TEXT */
        )) : createCommentVNode("v-if", true), node[_ctx.statusField] ? (openBlock(), createElementBlock(
          "div",
          {
            key: 1,
            class: normalizeClass(["dot", node[_ctx.statusField]])
          },
          [node[_ctx.statusField] === "doing" ? (openBlock(), createBlock(_component_icon_refres, {
            key: 0
          })) : node[_ctx.statusField] === "done" ? (openBlock(), createBlock(_component_icon_yes, {
            key: 1
          })) : createCommentVNode("v-if", true)],
          2
          /* CLASS */
        )) : createCommentVNode("v-if", true)];
      })], 14, _hoisted_3$3);
    }),
    128
    /* KEYED_FRAGMENT */
  ))])]);
}
var PcStandardTemplate = /* @__PURE__ */ _export_sfc(_sfc_main$4, [["render", _sfc_render$3]]);
var _sfc_main$3 = defineComponent({
  emits: ["click"],
  components: {
    IconChevronLeft: iconChevronLeft(),
    IconChevronRight: iconChevronRight()
  },
  props: _extends({}, $props, {
    data: Array,
    duration: {
      type: Number,
      default: 300
    },
    delay: {
      type: Number,
      default: 5
    },
    noArrow: Boolean,
    flex: Boolean
  }),
  setup: function setup2(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless: renderless$1,
      api: api$1
    });
  }
});
var _hoisted_1$2 = {
  "data-tag": "tiny-steps-slide-bar",
  class: "tiny-steps-slide-bar"
};
var _hoisted_2$2 = {
  class: "content"
};
var _hoisted_3$2 = {
  ref: "slideMain",
  class: "slide-main"
};
var _hoisted_4$2 = {
  class: "content"
};
function _sfc_render$2(_ctx, _cache, $props2, $setup2, $data, $options) {
  var _component_IconChevronLeft = resolveComponent("IconChevronLeft");
  var _component_IconChevronRight = resolveComponent("IconChevronRight");
  return openBlock(), createElementBlock("div", _hoisted_1$2, [createElementVNode(
    "div",
    {
      ref: "leftButton",
      class: normalizeClass(["more-button left", {
        "display-flex": _ctx.slideBarState.canLeftScroll || _ctx.slideBarState.canRightScroll
      }]),
      onClick: _cache[0] || (_cache[0] = function() {
        return _ctx.leftSlideHandler && _ctx.leftSlideHandler.apply(_ctx, arguments);
      })
    },
    [renderSlot(_ctx.$slots, "left-button", {
      show: _ctx.slideBarState.canLeftScroll,
      index: _ctx.slideBarState.boundingIndex.left
    }, function() {
      return [createElementVNode("div", _hoisted_2$2, [createVNode(_component_IconChevronLeft, {
        class: "icon"
      })])];
    })],
    2
    /* CLASS */
  ), createElementVNode(
    "div",
    _hoisted_3$2,
    [createElementVNode("div", null, [(openBlock(true), createElementBlock(
      Fragment,
      null,
      renderList(_ctx.data, function(node, index) {
        return openBlock(), createElementBlock(
          "div",
          {
            ref_for: true,
            ref: "block" + index,
            key: index,
            style: normalizeStyle({
              width: _ctx.flex ? 100 / _ctx.data.length + "%" : null
            })
          },
          [renderSlot(_ctx.$slots, "block", {
            slotScoped: {
              node,
              index,
              show: index > _ctx.slideBarState.boundingIndex.left && (_ctx.slideBarState.boundingIndex.right === -1 || index < _ctx.slideBarState.boundingIndex.right)
            }
          }, function() {
            return [createTextVNode(
              toDisplayString(index),
              1
              /* TEXT */
            )];
          }), renderSlot(_ctx.$slots, "block-bottom", {
            node,
            index
          })],
          4
          /* STYLE */
        );
      }),
      128
      /* KEYED_FRAGMENT */
    ))])],
    512
    /* NEED_PATCH */
  ), createElementVNode(
    "div",
    {
      ref: "rightButton",
      class: normalizeClass(["more-button right", {
        "display-flex": _ctx.slideBarState.canLeftScroll || _ctx.slideBarState.canRightScroll
      }]),
      onClick: _cache[1] || (_cache[1] = function() {
        return _ctx.rightSlideHandler && _ctx.rightSlideHandler.apply(_ctx, arguments);
      })
    },
    [renderSlot(_ctx.$slots, "right-button", {
      show: _ctx.slideBarState.canRightScroll,
      index: _ctx.slideBarState.boundingIndex.right
    }, function() {
      return [createElementVNode("div", _hoisted_4$2, [createVNode(_component_IconChevronRight, {
        class: "icon"
      })])];
    })],
    2
    /* CLASS */
  )]);
}
var SlideBar = /* @__PURE__ */ _export_sfc(_sfc_main$3, [["render", _sfc_render$2]]);
var _sfc_main$2 = defineComponent({
  emits: ["click"],
  components: {
    SlideBar,
    IconFinish: iconFinish(),
    IconWarn: iconWarn(),
    IconChevronLeft: iconChevronLeft(),
    IconChevronRight: iconChevronRight()
  },
  props: [].concat(props, ["vertical", "nameField", "statusField", "data", "active", "visibleNum", "duration", "noArrow", "flex"]),
  setup: function setup3(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1$1 = {
  "data-tag": "tiny-steps-senior",
  class: "tiny-steps-senior"
};
var _hoisted_2$1 = ["onClick"];
var _hoisted_3$1 = {
  class: "tiny-steps-content"
};
var _hoisted_4$1 = {
  key: 2
};
var _hoisted_5$1 = {
  class: "tiny-steps-prefixslot"
};
var _hoisted_6$1 = /* @__PURE__ */ createElementVNode(
  "div",
  {
    class: "prefix"
  },
  null,
  -1
  /* HOISTED */
);
function _sfc_render$1(_ctx, _cache, $props2, $setup2, $data, $options) {
  var _component_IconChevronLeft = resolveComponent("IconChevronLeft");
  var _component_IconChevronRight = resolveComponent("IconChevronRight");
  var _component_icon_finish = resolveComponent("icon-finish");
  var _component_icon_warn = resolveComponent("icon-warn");
  var _component_SlideBar = resolveComponent("SlideBar");
  return openBlock(), createElementBlock("div", _hoisted_1$1, [createVNode(_component_SlideBar, {
    ref: "slideBar",
    data: _ctx.data,
    duration: _ctx.duration,
    "no-arrow": _ctx.noArrow,
    flex: _ctx.flex
  }, {
    "left-button": withCtx(function(slotScoped) {
      return [createElementVNode(
        "div",
        {
          class: normalizeClass(["more-button-con left", {
            "bar-visible": slotScoped.show
          }])
        },
        [createVNode(_component_IconChevronLeft, {
          class: "icon"
        })],
        2
        /* CLASS */
      )];
    }),
    "right-button": withCtx(function(slotScoped) {
      return [createElementVNode(
        "div",
        {
          class: normalizeClass(["more-button-con right", {
            "bar-visible": slotScoped.show
          }])
        },
        [createVNode(_component_IconChevronRight, {
          class: "icon"
        })],
        2
        /* CLASS */
      )];
    }),
    block: withCtx(function(_ref) {
      var _ref$slotScoped = _ref.slotScoped, node = _ref$slotScoped.node, index = _ref$slotScoped.index;
      return [createElementVNode("div", {
        class: normalizeClass(["tiny-steps-block", {
          "not-flex": !_ctx.flex
        }, node[_ctx.statusField] === "error" ? "fault" : node[_ctx.statusField], {
          "active": index === _ctx.active
        }]),
        onClick: function onClick($event) {
          return _ctx.$emit("click", index, node, $event);
        }
      }, [createElementVNode("div", _hoisted_3$1, [renderSlot(_ctx.$slots, "item", {
        slotScope: node,
        index
      }, function() {
        return [createElementVNode(
          "div",
          {
            class: normalizeClass(["tiny-steps-icon", node[_ctx.statusField] === "error" ? "fault" : node[_ctx.statusField], {
              "active": index === _ctx.active
            }])
          },
          [node[_ctx.statusField] === "done" ? (openBlock(), createBlock(_component_icon_finish, {
            key: 0,
            class: "icon icon-finish"
          })) : node[_ctx.statusField] === "error" ? (openBlock(), createBlock(_component_icon_warn, {
            key: 1,
            class: "icon icon-warn"
          })) : (openBlock(), createElementBlock(
            "span",
            _hoisted_4$1,
            toDisplayString(index + 1),
            1
            /* TEXT */
          ))],
          2
          /* CLASS */
        ), createElementVNode("div", _hoisted_5$1, [renderSlot(_ctx.$slots, "prefix", {
          slotScope: {
            node,
            index
          }
        }, function() {
          return [_hoisted_6$1];
        })]), createElementVNode(
          "div",
          {
            class: normalizeClass(["tiny-steps-text", node[_ctx.statusField] === "error" ? "fault" : node[_ctx.statusField], {
              "active": index === _ctx.active
            }])
          },
          toDisplayString(node[_ctx.nameField]),
          3
          /* TEXT, CLASS */
        )];
      })]), createElementVNode(
        "div",
        {
          class: normalizeClass(["left-arrow arrow", {
            "hide": index === 0
          }])
        },
        null,
        2
        /* CLASS */
      ), createElementVNode(
        "div",
        {
          class: normalizeClass(["right-arrow arrow", {
            "hide": index === _ctx.data.length - 1
          }])
        },
        null,
        2
        /* CLASS */
      )], 10, _hoisted_2$1)];
    }),
    "block-bottom": withCtx(function(_ref2) {
      var node = _ref2.node, index = _ref2.index;
      return [renderSlot(_ctx.$slots, "block-bottom", {
        node,
        index
      })];
    }),
    _: 3
    /* FORWARDED */
  }, 8, ["data", "duration", "no-arrow", "flex"])]);
}
var PcAdvancedTemplate = /* @__PURE__ */ _export_sfc(_sfc_main$2, [["render", _sfc_render$1]]);
var _sfc_main$1 = defineComponent({
  components: {
    IconFinish: IconFinish(),
    IconWarn: IconWarn()
  },
  emits: ["click"],
  props: [].concat(props, ["vertical", "nameField", "statusField", "data", "active", "visibleNum", "descriptionField", "size"]),
  setup: function setup4(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  class: "tiny-steps-main"
};
var _hoisted_2 = {
  class: "tiny-steps-icon"
};
var _hoisted_3 = {
  class: "item-number"
};
var _hoisted_4 = ["onClick"];
var _hoisted_5 = {
  class: "tiny-steps-main"
};
var _hoisted_6 = ["title"];
var _hoisted_7 = ["title"];
var _hoisted_8 = {
  class: "tiny-steps-main"
};
var _hoisted_9 = {
  class: "tiny-steps-icon"
};
var _hoisted_10 = {
  class: "item-number"
};
function _sfc_render(_ctx, _cache, $props2, $setup2, $data, $options) {
  var _component_icon_finish = resolveComponent("icon-finish");
  var _component_icon_warn = resolveComponent("icon-warn");
  return openBlock(), createElementBlock(
    "div",
    {
      "data-tag": "tiny-steps",
      class: normalizeClass(["tiny-steps-line", _ctx.size])
    },
    [withDirectives(createElementVNode(
      "div",
      {
        class: normalizeClass(["tiny-steps-left", {
          "vertical": _ctx.vertical
        }]),
        onClick: _cache[0] || (_cache[0] = function($event) {
          return _ctx.state.startIndex--;
        })
      },
      [createElementVNode("div", _hoisted_1, [createElementVNode(
        "div",
        {
          class: normalizeClass(["line left-line", {
            "not-vertical": !_ctx.vertical
          }])
        },
        null,
        2
        /* CLASS */
      ), createElementVNode("div", _hoisted_2, [createElementVNode(
        "div",
        _hoisted_3,
        toDisplayString(_ctx.size === "mini" ? "" : _ctx.state.startIndex),
        1
        /* TEXT */
      ), _ctx.state.startIndex - 1 > 0 ? (openBlock(true), createElementBlock(
        Fragment,
        {
          key: 0
        },
        renderList(_ctx.state.startIndex - 1, function(item, index) {
          return openBlock(), createElementBlock(
            "div",
            {
              class: "item-circle",
              style: normalizeStyle({
                right: (_ctx.state.startIndex - 1 - index) * 4 + "px"
              }),
              key: index
            },
            null,
            4
            /* STYLE */
          );
        }),
        128
        /* KEYED_FRAGMENT */
      )) : createCommentVNode("v-if", true)]), createElementVNode(
        "div",
        {
          class: normalizeClass(["line right-line", {
            "not-vertical": !_ctx.vertical
          }, {
            "line-brand": _ctx.data[_ctx.state.startIndex - 1] && _ctx.data[_ctx.state.startIndex - 1].status === "done"
          }])
        },
        null,
        2
        /* CLASS */
      )])],
      2
      /* CLASS */
    ), [[vShow, _ctx.state.startIndex !== 0]]), (openBlock(true), createElementBlock(
      Fragment,
      null,
      renderList(_ctx.data, function(node, index) {
        return withDirectives((openBlock(), createElementBlock("div", {
          key: index,
          class: normalizeClass(["tiny-steps-block", _ctx.size, node[_ctx.statusField] === "error" ? "fault" : node[_ctx.statusField], {
            "active": index === _ctx.active
          }, {
            "not-vertical": !_ctx.vertical
          }, {
            "flex-non": index === _ctx.data.length - 1 && !_ctx.vertical
          }]),
          onClick: function onClick($event) {
            return _ctx.$emit("click", index, node, $event);
          }
        }, [createElementVNode("div", _hoisted_5, [createElementVNode(
          "div",
          {
            class: normalizeClass(["line left-line", {
              "acetate": index === 0 && _ctx.state.startIndex === 0
            }, {
              "not-vertical": !_ctx.vertical
            }])
          },
          null,
          2
          /* CLASS */
        ), createElementVNode(
          "div",
          {
            class: normalizeClass(["tiny-steps-icon", node[_ctx.statusField] === "error" ? "fault" : node[_ctx.statusField], {
              "active": index === _ctx.active
            }])
          },
          [_ctx.size !== "mini" ? (openBlock(), createElementBlock(
            Fragment,
            {
              key: 0
            },
            [node[_ctx.statusField] === "done" ? (openBlock(), createBlock(_component_icon_finish, {
              key: 0,
              class: normalizeClass(["icon icon-finish", {
                "active": index === _ctx.active
              }])
            }, null, 8, ["class"])) : node[_ctx.statusField] === "error" ? (openBlock(), createBlock(_component_icon_warn, {
              key: 1,
              class: normalizeClass(["icon icon-warn", {
                "active": index === _ctx.active
              }])
            }, null, 8, ["class"])) : (openBlock(), createElementBlock(
              Fragment,
              {
                key: 2
              },
              [createTextVNode(
                toDisplayString(index + 1),
                1
                /* TEXT */
              )],
              64
              /* STABLE_FRAGMENT */
            ))],
            64
            /* STABLE_FRAGMENT */
          )) : createCommentVNode("v-if", true)],
          2
          /* CLASS */
        ), !_ctx.vertical ? (openBlock(), createElementBlock("div", {
          key: 0,
          title: node[_ctx.nameField],
          class: "title"
        }, toDisplayString(node[_ctx.nameField]), 9, _hoisted_6)) : createCommentVNode("v-if", true), createElementVNode(
          "div",
          {
            class: normalizeClass(["line right-line", {
              "hide": !_ctx.vertical && index === _ctx.data.length - 1
            }, {
              "acetate": index === _ctx.data.length - 1
            }, {
              "not-vertical": !_ctx.vertical
            }])
          },
          null,
          2
          /* CLASS */
        )]), renderSlot(_ctx.$slots, "item", {
          slotScope: node,
          index
        }, function() {
          return [createElementVNode("div", {
            title: node[_ctx.nameField],
            class: normalizeClass(["title-vertical", {
              "not-vertical": !_ctx.vertical
            }])
          }, toDisplayString(node[_ctx.nameField]), 11, _hoisted_7), node[_ctx.descriptionField] ? (openBlock(), createElementBlock(
            "div",
            {
              key: 0,
              class: normalizeClass(["description", node[_ctx.statusField] === "error" ? "fault" : node[_ctx.statusField], {
                "not-vertical": !_ctx.vertical
              }])
            },
            toDisplayString(node[_ctx.descriptionField]),
            3
            /* TEXT, CLASS */
          )) : createCommentVNode("v-if", true)];
        })], 10, _hoisted_4)), [[vShow, _ctx.isVisibleHandler(index) === "visible"]]);
      }),
      128
      /* KEYED_FRAGMENT */
    )), withDirectives(createElementVNode(
      "div",
      {
        class: normalizeClass(["tiny-steps-right", {
          "not-vertical": !_ctx.vertical
        }]),
        onClick: _cache[1] || (_cache[1] = function($event) {
          return _ctx.state.startIndex++;
        })
      },
      [createElementVNode("div", _hoisted_8, [createElementVNode(
        "div",
        {
          class: normalizeClass(["line left-line", {
            "not-vertical": !_ctx.vertical
          }, {
            "line-brand": _ctx.data[_ctx.state.endIndex] && ["done", "doing"].includes(_ctx.data[_ctx.state.endIndex].status)
          }])
        },
        null,
        2
        /* CLASS */
      ), createElementVNode("div", _hoisted_9, [createElementVNode(
        "div",
        _hoisted_10,
        toDisplayString(_ctx.size === "mini" ? "" : _ctx.state.endIndex + 1),
        1
        /* TEXT */
      ), _ctx.state.rightNodePositions.length > 0 ? (openBlock(true), createElementBlock(
        Fragment,
        {
          key: 0
        },
        renderList(_ctx.state.rightNodePositions, function(item, index) {
          return openBlock(), createElementBlock(
            "div",
            {
              class: "item-circle",
              style: normalizeStyle(item),
              key: index
            },
            null,
            4
            /* STYLE */
          );
        }),
        128
        /* KEYED_FRAGMENT */
      )) : createCommentVNode("v-if", true)]), createElementVNode(
        "div",
        {
          class: normalizeClass(["line right-line", {
            "not-vertical": !_ctx.vertical
          }])
        },
        null,
        2
        /* CLASS */
      )])],
      2
      /* CLASS */
    ), [[vShow, _ctx.state.startIndex + _ctx.visibleNum < _ctx.data.length]])],
    2
    /* CLASS */
  );
}
var PcLineTemplate = /* @__PURE__ */ _export_sfc(_sfc_main$1, [["render", _sfc_render]]);
var template = function template2(mode, props2) {
  if (props2.advanced) {
    return PcAdvancedTemplate;
  } else if (props2.line) {
    return PcLineTemplate;
  } else {
    return PcStandardTemplate;
  }
};
var _sfc_main = defineComponent({
  name: $prefix + "Steps",
  props: _extends({}, $props, {
    nameField: {
      type: String,
      default: "name"
    },
    statusField: {
      type: String,
      default: "status"
    },
    data: [Object, Array],
    active: {
      type: Number,
      default: -1
    },
    visibleNum: {
      type: Number,
      default: 3
    },
    descriptionField: {
      type: String,
      default: "description"
    },
    vertical: Boolean,
    advanced: Boolean,
    line: Boolean,
    duration: {
      type: Number,
      default: 300
    },
    size: {
      type: String,
      default: "medium"
    },
    noArrow: Boolean,
    flex: Boolean
  }),
  setup: function setup5(props2, context) {
    return $setup({
      props: props2,
      context,
      template
    });
  }
});
export {
  _sfc_main as default
};
