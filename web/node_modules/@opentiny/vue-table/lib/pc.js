import { renderless, api } from "@opentiny/vue-renderless/table/vue";
import { defineComponent, props, setup as _setup } from "@opentiny/vue-common";
import { iconRadioselected, iconRadio, iconCheck, iconCheckedSur, iconHalfselect } from "@opentiny/vue-icon";
import "@opentiny/vue-theme/table/index.css";
import { openBlock, createElementBlock, createElementVNode, Fragment, renderList, normalizeClass, createBlock, resolveDynamicComponent, createCommentVNode, createTextVNode, toDisplayString, normalizeStyle } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  components: {
    IconRadioselected: iconRadioselected(),
    IconRadio: iconRadio(),
    IconCheck: iconCheck(),
    IconCheckedSur: iconCheckedSur(),
    IconHalfselect: iconHalfselect()
  },
  props: [].concat(props, ["columns", "data", "width", "defaultChecked", "keys"]),
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  class: "tiny-table simple"
};
var _hoisted_2 = ["width"];
var _hoisted_3 = ["width"];
var _hoisted_4 = {
  class: "tiny-table-header"
};
var _hoisted_5 = {
  class: "tiny-table-cell"
};
var _hoisted_6 = {
  key: 0,
  class: "tiny-table-header__line"
};
var _hoisted_7 = ["title"];
var _hoisted_8 = {
  key: 0
};
var _hoisted_9 = {
  key: 0,
  class: "noData"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", _hoisted_1, [createElementVNode("table", {
    width: _ctx.width
  }, [createElementVNode("colgroup", null, [(openBlock(true), createElementBlock(
    Fragment,
    null,
    renderList(_ctx.columns, function(col, rowIndex) {
      return openBlock(), createElementBlock("col", {
        key: rowIndex,
        width: col.width
      }, null, 8, _hoisted_3);
    }),
    128
    /* KEYED_FRAGMENT */
  ))]), createElementVNode("thead", _hoisted_4, [createElementVNode("tr", null, [(openBlock(true), createElementBlock(
    Fragment,
    null,
    renderList(_ctx.columns, function(col, colIndex) {
      return openBlock(), createElementBlock(
        "th",
        {
          key: colIndex,
          class: normalizeClass({
            overflow: col.showOverflow
          })
        },
        [createElementVNode("div", _hoisted_5, [col.type === "selection" ? (openBlock(), createBlock(resolveDynamicComponent("icon-" + _ctx.state.selectCls), {
          key: 0,
          class: normalizeClass(["tiny-svg-size", {
            "is-check": _ctx.state.selectCls !== "check"
          }]),
          onClick: _ctx.togeSelectAll
        }, null, 8, ["class", "onClick"])) : createCommentVNode("v-if", true), !col.type ? (openBlock(), createElementBlock(
          Fragment,
          {
            key: 1
          },
          [colIndex !== _ctx.columns.length - 1 ? (openBlock(), createElementBlock("div", _hoisted_6)) : createCommentVNode("v-if", true), createTextVNode(
            " " + toDisplayString(col.title),
            1
            /* TEXT */
          )],
          64
          /* STABLE_FRAGMENT */
        )) : createCommentVNode("v-if", true)])],
        2
        /* CLASS */
      );
    }),
    128
    /* KEYED_FRAGMENT */
  ))])]), createElementVNode("tbody", null, [(openBlock(true), createElementBlock(
    Fragment,
    null,
    renderList(_ctx.data, function(row, rowIndex) {
      return openBlock(), createElementBlock(
        "tr",
        {
          key: rowIndex,
          class: normalizeClass(["handlerCls", _ctx.state.selectedKeys.indexOf(row[_ctx.keys]) > -1 ? "" : "is-disabled"])
        },
        [(openBlock(true), createElementBlock(
          Fragment,
          null,
          renderList(_ctx.columns, function(col, colIndex) {
            return openBlock(), createElementBlock("td", {
              key: colIndex
            }, [createElementVNode("div", {
              class: normalizeClass(["tiny-table-cell", {
                overflow: col.showOverflow
              }]),
              title: col.showOverflow ? row[col.field] : "",
              style: normalizeStyle({
                width: col.width ? col.width + "px" : ""
              })
            }, [col.type === "index" ? (openBlock(), createElementBlock(
              "div",
              _hoisted_8,
              toDisplayString(rowIndex + 1),
              1
              /* TEXT */
            )) : col.type === "radio" ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.state.selectedRow === row ? "icon-radioselected" : "icon-radio"), {
              key: 1,
              class: "tiny-svg-size",
              onClick: function onClick($event) {
                return _ctx.selectRow(row);
              }
            }, null, 8, ["onClick"])) : col.type === "selection" ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.state.selected.indexOf(row) === -1 ? "icon-check" : "icon-checked-sur"), {
              key: 2,
              class: normalizeClass(["tiny-svg-size", {
                "is-check": _ctx.state.selected.indexOf(row) > -1
              }, {
                "is-disabled": _ctx.state.selectedKeys.indexOf(_ctx.keys) > -1
              }]),
              onClick: function onClick($event) {
                return _ctx.togeSelected(row);
              }
            }, null, 8, ["class", "onClick"])) : (openBlock(), createElementBlock(
              Fragment,
              {
                key: 3
              },
              [createTextVNode(
                toDisplayString(row[col.field]),
                1
                /* TEXT */
              )],
              64
              /* STABLE_FRAGMENT */
            ))], 14, _hoisted_7)]);
          }),
          128
          /* KEYED_FRAGMENT */
        ))],
        2
        /* CLASS */
      );
    }),
    128
    /* KEYED_FRAGMENT */
  )), _ctx.data && _ctx.data.length === 0 ? (openBlock(), createElementBlock(
    "p",
    _hoisted_9,
    toDisplayString(_ctx.t("ui.transfer.noData")),
    1
    /* TEXT */
  )) : createCommentVNode("v-if", true)])], 8, _hoisted_2)]);
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  pc as default
};
