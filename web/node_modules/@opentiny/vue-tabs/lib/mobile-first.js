function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
import { renderless as renderless$3, api as api$3 } from "@opentiny/vue-renderless/tabs-mf/vue";
import { defineComponent, $props, setup as _setup, h, props } from "@opentiny/vue-common";
import { renderless as renderless$2, api as api$2 } from "@opentiny/vue-renderless/tabs-mf/vue-bar";
import { IconClose, IconPopup, IconPlus } from "@opentiny/vue-icon";
import Dropdown from "@opentiny/vue-dropdown";
import DropdownMenu from "@opentiny/vue-dropdown-menu";
import DropdownItem from "@opentiny/vue-dropdown-item";
import { renderless as renderless$1, api as api$1 } from "@opentiny/vue-renderless/tabs-mf/vue-nav";
import { renderless, api } from "@opentiny/vue-renderless/tabs-mf/vue-nav-item";
import { resolveComponent, openBlock, createElementBlock, createElementVNode, renderSlot, createVNode, createBlock, KeepAlive, Fragment, renderList, createCommentVNode } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main$4 = defineComponent({
  props: _extends({}, $props, {
    title: String,
    name: String,
    selected: Boolean,
    navItem: Object
  }),
  components: {
    IconClose: IconClose()
  },
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api,
      mono: true
    });
  },
  render: function render() {
    var state = this.state, handleNavItemClick = this.handleNavItemClick, selected = this.selected, title = this.title, handleNavItemClose = this.handleNavItemClose, navItem = this.navItem;
    var settingClick = function settingClick2(e) {
      return e.stopPropagation();
    };
    return h("div", {
      attrs: {
        "data-tag": "tiny-tab-nav-item"
      },
      class: ["w-max h-11 sm:h-10 inline-flex flex-col justify-center group", "first:ml-3 last:mr-3 hover:cursor-pointer sm:first:pl-0 sm:last:pr-0 sm:first:ml-0 sm:last:mr-0", state.tabSize === "big" ? "min-w-[theme(spacing.8)]" : "min-w-[theme(spacing.7)]", state.separator ? "mx-3.5 [&:last-of-type>div>span:last-of-type]:hidden [&:not(:last-of-type)]:mr-px" : "mx-3"],
      on: {
        click: handleNavItemClick
      }
    }, [h("div", {
      class: ["inline-block text-base sm:text-sm group-hover:text-color-brand", selected ? "text-color-brand font-bold" : "text-color-text-primary sm:text-color-text-secondary"],
      style: state.tabSize === "big" ? "font-size: 1rem" : ""
    }, [h("span", {
      class: "w-max relative"
    }, [navItem.slotTitle ? navItem.slotTitle(navItem) : h("span", {}, title)]), navItem.slotSetting || state.withClose ? h("span", {
      class: ["pl-2 inline-flex translate-y-0.5 text-xs fill-color-icon-primary", "hover:fill-color-icon-hover focus:fill-color-icon-focus", navItem.slotSetting ? "-translate-y-0.5" : ""],
      on: {
        click: navItem.slotSetting ? settingClick : handleNavItemClose
      }
    }, [navItem.slotSetting ? navItem.slotSetting(navItem) : h(IconClose())]) : null, state.separator ? h("span", {
      attrs: {
        "data-tag": "tiny-tab-nav-item-separator"
      },
      class: "relative left-3.5 inline-flex bg-color-border-separator w-px h-3"
    }) : null])]);
  }
});
var _sfc_main$3 = defineComponent({
  props: _extends({}, $props, {
    customClass: {
      type: String,
      default: ""
    }
  }),
  setup: function setup2(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless: renderless$1,
      api: api$1,
      mono: true
    });
  },
  render: function render2() {
    var state = this.state, customClass = this.customClass, m = this.m;
    return h("div", {
      attrs: {
        "data-tag": "tiny-tab-nav"
      },
      class: m("relative", customClass)
    }, [].concat(state.navItems.map(function(item) {
      return typeof item.visible === "undefined" || item.visible ? h(_sfc_main$4, {
        key: item.name,
        props: {
          title: item.title,
          name: item.name,
          selected: item.selected,
          navItem: item
        }
      }) : null;
    }), [h("div", {
      class: m("absolute bottom-0.5 h-0.5 bg-color-brand transition-all duration-300", {
        "hidden": !state.currentNav
      }),
      style: {
        width: state.currentWidth + "px",
        left: state.currentPosition + "px"
      }
    })]));
  }
});
var _sfc_main$2 = defineComponent({
  props: [].concat(props),
  setup: function setup3(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless: renderless$2,
      api: api$2,
      mono: true
    });
  },
  render: function render3() {
    var state = this.state, handleClickDropdownItem = this.handleClickDropdownItem, key = this.key, emitAdd = this.emitAdd;
    var tabNavClass = state.moreList.length > 0 ? "w-max inline-block" : "w-full inline-flex justify-around sm:w-max sm:inline-block";
    return h("div", {
      attrs: {
        "data-tag": "tiny-tab-bar"
      },
      class: "w-full h-11 sm:h-10 overflow-hidden relative"
    }, [h("div", {
      ref: "scroll",
      class: ["scrollbar-size-0 w-full overflow-x-auto whitespace-nowrap", "before:block before:absolute before:w-0 before:h-11 sm:before:h-10", "after:block after:absolute after:top-0 after:right-0 after:w-0 after:h-11 sm:after:h-10", "before:shadow-[1px_-10px_4px_4px_rgba(0,0,0,0.08)] after:shadow-[-1px_-10_4px_4px_rgba(0,0,0,0.08)]", !state.moreLeft && !state.moreRight ? "before:hidden after:hidden" : "", !state.moreLeft ? "sm:before:hidden" : "", !state.moreRight ? "sm:after:hidden" : ""]
    }, [h(_sfc_main$3, {
      ref: "tabNav",
      props: {
        customClass: tabNavClass
      },
      style: "margin-right:" + state.navPaddingRight + "px"
    })]), h("div", {
      class: [state.separator ? "sm:invisible" : "invisible sm:visible absolute w-full h-px bottom-px bg-color-border-separator z-10"]
    }), h("div", {
      ref: "tabMore",
      attrs: {
        "data-tag": "tiny-tab-more"
      },
      class: ["inline-flex w-max h-11 sm:h-10 absolute top-0 right-0 z-0 bg-color-bg-1", state.moreRight ? "shadow-[-1px_-10px_4px_4px_rgba(0,0,0,0.08)]" : ""]
    }, [state.moreList.length ? h("div", {
      class: "hidden sm:inline-block w-11 h-11 sm:h-10 text-sm cursor-pointer"
    }, [h("span", {
      class: "inline-flex w-full h-full flex-col justify-center items-center"
    }, [h(Dropdown, {
      on: {
        "item-click": handleClickDropdownItem
      },
      props: {
        showIcon: false
      }
    }, [h("span", {}, [h(IconPopup(), {
      class: "fill-color-icon-focus text-base"
    })]), h(DropdownMenu, {
      slot: "dropdown",
      props: {
        popperClass: "max-h-[theme(spacing.80)] overflow-x-hidden overflow-y-auto"
      }
    }, state.moreOptions.map(function(opt) {
      return h(DropdownItem, {
        key: key(opt),
        props: {
          itemData: opt.name
        }
      }, [opt.slotTitle ? opt.slotTitle() : opt.title]);
    }))])])]) : null, state.withAdd ? h("div", {
      attrs: {
        "data-tag": "tiny-tab-add"
      },
      class: "hidden sm:inline-block w-11 h-11 sm:h-10 text-sm cursor-pointer",
      on: {
        click: emitAdd
      }
    }, [h("span", {
      class: "inline-flex w-full h-full flex-col justify-center items-center"
    }, [h(IconPlus(), {
      class: "fill-color-icon-focus"
    })])]) : null, state.slotCustom ? h("div", {
      attrs: {
        "data-tag": "tiny-tab-custom"
      },
      class: "hidden sm:inline-block w-max h-11 sm:h-10 text-sm"
    }, [h("span", {
      class: "inline-flex w-max h-full flex-col justify-center"
    }, [state.slotCustom()])]) : null])]);
  }
});
var _sfc_main$1 = defineComponent({
  props: _extends({}, $props, {
    item: Object
  }),
  render: function render4() {
    var content = null;
    if (this.item) {
      if (typeof this.item.slotDefault === "function") {
        content = this.item.slotDefault();
      } else if (this.item.slotDefault) {
        content = this.item.slotDefault;
      }
    }
    return h("div", {
      attrs: {
        "data-tag": "tiny-tab-panel"
      }
    }, [content]);
  }
});
var _sfc_main = defineComponent({
  props: [].concat(props, ["activeName", "modelValue", "size", "withClose", "withAdd", "beforeLeave", "separator"]),
  emits: ["update:activeName", "update:modelValue"],
  components: {
    TabBar: _sfc_main$2,
    TabPanel: _sfc_main$1
  },
  setup: function setup4(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless: renderless$3,
      api: api$3
    });
  }
});
var _hoisted_1 = {
  "data-tag": "tiny-tabs"
};
var _hoisted_2 = {
  "data-tag": "tiny-tabs-hidden",
  class: "hidden"
};
function _sfc_render(_ctx, _cache, $props2, $setup, $data, $options) {
  var _component_tab_bar = resolveComponent("tab-bar");
  var _component_tab_panel = resolveComponent("tab-panel");
  return openBlock(), createElementBlock("div", _hoisted_1, [createElementVNode("div", _hoisted_2, [renderSlot(_ctx.$slots, "default")]), createVNode(
    _component_tab_bar,
    {
      ref: "tabbar"
    },
    null,
    512
    /* NEED_PATCH */
  ), (openBlock(), createBlock(
    KeepAlive,
    null,
    [(openBlock(true), createElementBlock(
      Fragment,
      null,
      renderList(_ctx.state.items, function(item) {
        return openBlock(), createElementBlock(
          Fragment,
          null,
          [item === _ctx.state.currentItem ? (openBlock(), createBlock(_component_tab_panel, {
            "data-tag": "tiny-tab-panel",
            class: "w-full",
            item,
            key: item.name
          }, null, 8, ["item"])) : createCommentVNode("v-if", true)],
          64
          /* STABLE_FRAGMENT */
        );
      }),
      256
      /* UNKEYED_FRAGMENT */
    ))],
    1024
    /* DYNAMIC_SLOTS */
  ))]);
}
var mobileFirst = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  mobileFirst as default
};
