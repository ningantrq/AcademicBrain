import { createVNode, resolveComponent } from "vue";
import { renderless, api } from "@opentiny/vue-renderless/tag/vue";
import { defineComponent, props, setup as _setup, h } from "@opentiny/vue-common";
import { iconClose } from "@opentiny/vue-icon";
var _sfc_main = /* @__PURE__ */ defineComponent({
  components: {
    IconClose: iconClose()
  },
  emits: ["click", "close"],
  props: [].concat(props, ["text", "closable", "type", "hit", "disabled", "color", "size", "effect", "value", "beforeDelete"]),
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api,
      h
    });
  },
  render: function render() {
    var type = this.type, size = this.size, hit = this.hit, effect = this.effect, slots = this.slots, closable = this.closable, color = this.color, handleClose = this.handleClose, handleClick = this.handleClick, disabled = this.disabled, state = this.state, value = this.value;
    var classes = ["tiny-tag", type ? "tiny-tag--" + type : "", size ? "tiny-tag--" + size : "", effect ? "tiny-tag--" + effect : "", hit && "is-hit", disabled ? "is-disabled" : ""];
    var tagElement = createVNode("span", {
      "class": classes,
      "style": {
        backgroundColor: color
      },
      "onClick": handleClick
    }, [value ? createVNode("span", null, [value]) : slots.default && slots.default(), closable && createVNode(resolveComponent("icon-close"), {
      "class": "tiny-svg-size tiny-tag__close ",
      "onClick": handleClose
    }, null)]);
    return tagElement;
  }
});
export {
  _sfc_main as default
};
