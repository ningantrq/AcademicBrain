import { renderless, api } from "@opentiny/vue-renderless/time-line/vue";
import { defineComponent, props, setup as _setup } from "@opentiny/vue-common";
import { iconYes, iconClose } from "@opentiny/vue-icon";
import "@opentiny/vue-theme/steps/index.css";
import TimelineItem from "@opentiny/vue-timeline-item";
import { resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, renderSlot, Fragment, renderList, createBlock, withCtx, createCommentVNode } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  emits: ["click"],
  props: [].concat(props, ["vertical", "horizontal", "showNumber", "nameField", "timeField", "start", "data", "space", "active", "reverse", "showStatus", "size", "textPosition", "showDivider", "onlyNumber", "lineWidth", "shape"]),
  components: {
    IconYes: iconYes(),
    IconClose: iconClose(),
    TinyTimelineItem: TimelineItem
  },
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  key: 0,
  class: "tiny-steps__bottom-divider"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_tiny_timeline_item = resolveComponent("tiny-timeline-item");
  return openBlock(), createElementBlock(
    "div",
    {
      class: normalizeClass(["tiny-steps", {
        "is-horizontal": _ctx.horizontal && !_ctx.vertical,
        "tiny-steps--mini": _ctx.size === "mini"
      }])
    },
    [createElementVNode(
      "div",
      {
        class: normalizeClass(_ctx.state.computedWrapperClass),
        onClick: _cache[0] || (_cache[0] = function() {
          return _ctx.contentClick && _ctx.contentClick.apply(_ctx, arguments);
        })
      },
      [renderSlot(_ctx.$slots, "default", {}, function() {
        return [(openBlock(true), createElementBlock(
          Fragment,
          null,
          renderList(_ctx.state.nodes, function(node, index) {
            return openBlock(), createBlock(_component_tiny_timeline_item, {
              key: index,
              node,
              space: _ctx.space,
              "line-width": _ctx.lineWidth,
              shape: _ctx.shape,
              onClick: function onClick($event) {
                return _ctx.handleClick({
                  index,
                  node
                });
              }
            }, {
              "active-node-desc": withCtx(function(slotScoped) {
                return [renderSlot(_ctx.$slots, "active-node-desc", {
                  node: slotScoped.node
                })];
              }),
              top: withCtx(function(node2) {
                return [renderSlot(_ctx.$slots, "top", {
                  slotScope: node2.slotScope
                })];
              }),
              bottom: withCtx(function(node2) {
                return [renderSlot(_ctx.$slots, "bottom", {
                  slotScope: node2.slotScope
                })];
              }),
              left: withCtx(function(node2) {
                return [renderSlot(_ctx.$slots, "left", {
                  slotScope: node2.slotScope
                })];
              }),
              right: withCtx(function(node2) {
                return [renderSlot(_ctx.$slots, "right", {
                  slotScope: node2.slotScope
                })];
              }),
              _: 2
              /* DYNAMIC */
            }, 1032, ["node", "space", "line-width", "shape", "onClick"]);
          }),
          128
          /* KEYED_FRAGMENT */
        ))];
      })],
      2
      /* CLASS */
    ), _ctx.textPosition === "right" && _ctx.showDivider ? (openBlock(), createElementBlock("div", _hoisted_1)) : createCommentVNode("v-if", true)],
    2
    /* CLASS */
  );
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  pc as default
};
