declare const _default: import("@vue/runtime-core").DefineComponent<Readonly<{
    format?: any;
    data?: any;
    props?: any;
    tiny_mode?: any;
    tiny_mode_root?: any;
    tiny_template?: any;
    tiny_renderless?: any;
    _constants?: any;
    tiny_theme?: any;
    tiny_chart_theme?: any;
    modelValue?: any;
    render?: any;
    columns?: any;
    dropConfig?: any;
    renderContent?: any;
    filterable?: any;
    filterMethod?: any;
    renderType?: any;
    treeOp?: any;
    pageVO?: any;
    showPager?: any;
    pagerOp?: any;
    titles?: any;
    buttonTexts?: any;
    filterPlaceholder?: any;
    leftDefaultChecked?: any;
    rightDefaultChecked?: any;
    targetOrder?: any;
    showAllBtn?: any;
    toLeftDisable?: any;
    toRightDisable?: any;
    beforeTransfer?: any;
}>, {
    t: (this: any, path: any, options?: any) => any;
    vm: any;
    f: (props: any, attrs?: {}) => {};
    a: (attrs: any, filters: any, include: any) => {};
    d: (props: any) => void;
    dp: (props: any) => void;
    gcls: (key: any) => any;
}, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<Readonly<{
    format?: any;
    data?: any;
    props?: any;
    tiny_mode?: any;
    tiny_mode_root?: any;
    tiny_template?: any;
    tiny_renderless?: any;
    _constants?: any;
    tiny_theme?: any;
    tiny_chart_theme?: any;
    modelValue?: any;
    render?: any;
    columns?: any;
    dropConfig?: any;
    renderContent?: any;
    filterable?: any;
    filterMethod?: any;
    renderType?: any;
    treeOp?: any;
    pageVO?: any;
    showPager?: any;
    pagerOp?: any;
    titles?: any;
    buttonTexts?: any;
    filterPlaceholder?: any;
    leftDefaultChecked?: any;
    rightDefaultChecked?: any;
    targetOrder?: any;
    showAllBtn?: any;
    toLeftDisable?: any;
    toRightDisable?: any;
    beforeTransfer?: any;
}>>>, {
    readonly format?: any;
    readonly data?: any;
    readonly props?: any;
    readonly tiny_mode?: any;
    readonly tiny_mode_root?: any;
    readonly tiny_template?: any;
    readonly tiny_renderless?: any;
    readonly _constants?: any;
    readonly tiny_theme?: any;
    readonly tiny_chart_theme?: any;
    readonly modelValue?: any;
    readonly render?: any;
    readonly columns?: any;
    readonly dropConfig?: any;
    readonly renderContent?: any;
    readonly filterable?: any;
    readonly filterMethod?: any;
    readonly renderType?: any;
    readonly treeOp?: any;
    readonly pageVO?: any;
    readonly showPager?: any;
    readonly pagerOp?: any;
    readonly titles?: any;
    readonly buttonTexts?: any;
    readonly filterPlaceholder?: any;
    readonly leftDefaultChecked?: any;
    readonly rightDefaultChecked?: any;
    readonly targetOrder?: any;
    readonly showAllBtn?: any;
    readonly toLeftDisable?: any;
    readonly toRightDisable?: any;
    readonly beforeTransfer?: any;
}, {}>;
export default _default;
