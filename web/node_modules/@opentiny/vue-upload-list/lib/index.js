function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
import { defineComponent, $prefix, $setup, $props } from "@opentiny/vue-common";
import PcTemplate from "./pc.js";
import MobileFirstTemplate from "./mobile-first.js";
var template = function template2(mode) {
  var _process$env;
  var tinyMode = typeof process === "object" ? (_process$env = process.env) == null ? void 0 : _process$env.TINY_MODE : null;
  if ("pc" === (tinyMode || mode)) {
    return PcTemplate;
  }
  if ("mobile-first" === (tinyMode || mode)) {
    return MobileFirstTemplate;
  }
  return PcTemplate;
};
var uploadListProps = _extends({}, $props, {
  disabled: {
    type: Boolean,
    default: function _default() {
      return false;
    }
  },
  display: {
    type: Boolean,
    default: function _default2() {
      return true;
    }
  },
  files: {
    type: Array,
    default: function _default3() {
      return [];
    }
  },
  filesIcon: {
    type: Array,
    default: function _default4() {
      return [];
    }
  },
  handlePreview: Function,
  isEdm: {
    type: Boolean,
    default: function _default5() {
      return false;
    }
  },
  isFolder: {
    type: Boolean,
    default: function _default6() {
      return false;
    }
  },
  listType: String,
  openDownloadFile: {
    type: Boolean,
    default: function _default7() {
      return false;
    }
  },
  srcList: {
    type: Array,
    default: function _default8() {
      return [];
    }
  },
  isFolderTitle: {
    type: Boolean,
    default: false
  },
  listOption: {
    type: Object,
    default: function _default9() {
      return {
        showUpdate: true,
        showDel: true
      };
    }
  },
  maxNameLength: {
    type: Number,
    default: 20
  },
  scale: {
    type: [Number, String],
    default: 1
  },
  showName: {
    type: Boolean,
    default: false
  },
  types: Array,
  displayOnly: {
    type: Boolean,
    default: false
  },
  handleDownloadFile: Function,
  handleReUpload: Function,
  isDragover: Boolean,
  selected: Object,
  triggerClick: {
    type: Function,
    default: function _default10() {
    }
  },
  isHwh5: {
    type: Boolean,
    default: false
  },
  triggerPlay: {
    type: Function,
    default: function _default11() {
    }
  },
  mode: String,
  lockScroll: {
    type: Boolean,
    default: true
  },
  reUploadable: Boolean,
  reUploadTip: Function
});
var UploadList = defineComponent({
  name: $prefix + "UploadList",
  props: uploadListProps,
  setup: function setup(props, context) {
    return $setup({
      props,
      context,
      template,
      extend: {
        ref: "upload-list-inner-template"
      }
    });
  }
});
var version = "3.13.0";
UploadList.install = function(Vue) {
  Vue.component(UploadList.name, UploadList);
};
UploadList.version = version;
export {
  UploadList as default
};
