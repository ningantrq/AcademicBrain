import { defineComponent, $prefix, props, setup as _setup } from "@opentiny/vue-common";
import { renderless, api } from "@opentiny/vue-renderless/upload-list/vue";
import Progress from "@opentiny/vue-progress";
import Tooltip from "@opentiny/vue-tooltip";
import Button from "@opentiny/vue-button";
import ImageViewer from "@opentiny/vue-image-viewer";
import { iconAttachment, iconSuccessful, iconClose, iconView, iconDel, iconYes, iconCloseCircle, iconError, iconFileCloudupload, iconDownload, iconRefres, iconOperationfaild, iconFullscreenLeft } from "@opentiny/vue-icon";
import Modal from "@opentiny/vue-modal";
import { resolveComponent, openBlock, createElementBlock, normalizeClass, createVNode, TransitionGroup, withCtx, Fragment, renderList, withKeys, renderSlot, createCommentVNode, createBlock, withModifiers, createElementVNode, toDisplayString, createTextVNode, resolveDynamicComponent } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = /* @__PURE__ */ defineComponent({
  name: $prefix + "UploadList",
  components: {
    Progress,
    TinyTooltip: Tooltip,
    TinyButton: Button,
    TinyImageViewer: ImageViewer,
    IconAttachment: iconAttachment(),
    IconSuccessful: iconSuccessful(),
    IconClose: iconClose(),
    IconView: iconView(),
    IconDel: iconDel(),
    IconYes: iconYes(),
    IconCloseCircle: iconCloseCircle(),
    IconError: iconError(),
    IconFileCloudupload: iconFileCloudupload(),
    IconDownload: iconDownload(),
    IconRefres: iconRefres(),
    IconOperationfaild: iconOperationfaild(),
    IconFullscreenLeft: iconFullscreenLeft()
  },
  props: [].concat(props, ["disabled", "display", "files", "filesIcon", "handlePreview", "isEdm", "isFolder", "listType", "openDownloadFile", "srcList", "isFolderTitle", "listOption", "maxNameLength", "mode", "reUploadable", "reUploadTip"]),
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api,
      extendOptions: {
        Modal
      }
    });
  }
});
var _hoisted_1 = ["onKeydown", "onClick"];
var _hoisted_2 = {
  key: 0,
  class: "tiny-mobile-upload-list__card"
};
var _hoisted_3 = ["src"];
var _hoisted_4 = {
  key: 1,
  class: "tiny-mobile-upload-list__list"
};
var _hoisted_5 = {
  class: "file-type"
};
var _hoisted_6 = ["src"];
var _hoisted_7 = ["onClick"];
var _hoisted_8 = {
  class: "tiny-mobile-upload-list__text-details file-name"
};
var _hoisted_9 = {
  class: "tiny-mobile-upload-list__text-details file-size"
};
var _hoisted_10 = {
  class: "file-delete"
};
var _hoisted_11 = {
  key: 1,
  class: "tiny-upload-list__wrapper"
};
var _hoisted_12 = ["onKeydown"];
var _hoisted_13 = ["src"];
var _hoisted_14 = {
  key: 0,
  class: "tiny-upload-list__item-tooltip"
};
var _hoisted_15 = {
  key: 1,
  class: "tiny-upload-list__item-tooltip"
};
var _hoisted_16 = ["onClick", "title"];
var _hoisted_17 = {
  key: 2,
  class: "tiny-upload-list__item-status-label"
};
var _hoisted_18 = ["title", "onClick"];
var _hoisted_19 = ["title", "onClick"];
var _hoisted_20 = ["title", "onClick"];
var _hoisted_21 = {
  key: 6,
  class: "tiny-icon-close-tip"
};
var _hoisted_22 = ["onClick"];
var _hoisted_23 = {
  class: "tiny-upload-list__item-tooltip"
};
var _hoisted_24 = {
  key: 0,
  class: "tiny-upload-list__item-actions"
};
var _hoisted_25 = ["title", "onClick"];
var _hoisted_26 = ["title", "onClick"];
var _hoisted_27 = ["title", "onClick"];
var _hoisted_28 = ["title", "onClick"];
var _hoisted_29 = ["title"];
var _hoisted_30 = {
  key: 0,
  class: "tiny-upload-list__text-title"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_icon_error = resolveComponent("icon-error");
  var _component_Progress = resolveComponent("Progress");
  var _component_icon_attachment = resolveComponent("icon-attachment");
  var _component_icon_close_circle = resolveComponent("icon-close-circle");
  var _component_tiny_image_viewer = resolveComponent("tiny-image-viewer");
  var _component_icon_operationfaild = resolveComponent("icon-operationfaild");
  var _component_tiny_tooltip = resolveComponent("tiny-tooltip");
  var _component_icon_successful = resolveComponent("icon-successful");
  var _component_icon_yes = resolveComponent("icon-yes");
  var _component_icon_file_cloudupload = resolveComponent("icon-file-cloudupload");
  var _component_icon_refres = resolveComponent("icon-refres");
  var _component_icon_download = resolveComponent("icon-download");
  var _component_icon_fullscreen_left = resolveComponent("icon-fullscreen-left");
  var _component_icon_view = resolveComponent("icon-view");
  var _component_icon_del = resolveComponent("icon-del");
  var _component_tiny_button = resolveComponent("tiny-button");
  return _ctx.state.screenType ? (openBlock(), createElementBlock(
    "div",
    {
      key: 0,
      class: normalizeClass(["tiny-mobile-upload-list", "tiny-mobile-upload-list--" + _ctx.listType, {
        "is-disabled": _ctx.disabled
      }])
    },
    [createVNode(TransitionGroup, {
      tag: "ul",
      name: "tiny-list"
    }, {
      default: withCtx(function() {
        return [(openBlock(true), createElementBlock(
          Fragment,
          null,
          renderList(_ctx.files, function(file, index) {
            return openBlock(), createElementBlock("li", {
              class: normalizeClass(["tiny-mobile-upload-list__item", "is-" + file.status, _ctx.state.focusing ? "focusing" : ""]),
              key: file.uid,
              tabindex: "0",
              onKeydown: withKeys(function($event) {
                return !_ctx.disabled && _ctx.$emit("remove", file);
              }, ["delete"]),
              onClick: function onClick($event) {
                return _ctx.picturefilePreview(index);
              }
            }, [renderSlot(_ctx.$slots, "default", {
              file
            }, function() {
              return [["picture-card"].indexOf(_ctx.listType) > -1 ? (openBlock(), createElementBlock("div", _hoisted_2, [file.status !== "uploading" && ["picture-card"].indexOf(_ctx.listType) > -1 ? (openBlock(), createElementBlock("img", {
                key: 0,
                class: "tiny-mobile-upload-list__item-thumbnail",
                src: file.url,
                alt: ""
              }, null, 8, _hoisted_3)) : createCommentVNode("v-if", true), _ctx.listType === "picture-card" && _ctx.display ? (openBlock(), createBlock(_component_icon_error, {
                key: 1,
                class: "icon-close card-close",
                onClick: withModifiers(function($event) {
                  return _ctx.$emit("remove", file);
                }, ["stop"])
              }, null, 8, ["onClick"])) : createCommentVNode("v-if", true), file.status === "uploading" ? (openBlock(), createBlock(_component_Progress, {
                key: 2,
                type: "circle",
                percentage: _ctx.parsePercentage(file.percentage),
                "stroke-width": 1.4,
                width: 32
              }, null, 8, ["percentage"])) : createCommentVNode("v-if", true)])) : (openBlock(), createElementBlock("div", _hoisted_4, [createElementVNode("div", _hoisted_5, [_ctx.filesIcon.length === 0 ? (openBlock(), createBlock(_component_icon_attachment, {
                key: 0
              })) : createCommentVNode("v-if", true), (openBlock(true), createElementBlock(
                Fragment,
                null,
                renderList(_ctx.filesIcon, function(item, index2) {
                  return openBlock(), createElementBlock(
                    Fragment,
                    null,
                    [_ctx.filesIcon && _ctx.state.screenType && file.fileType === item.type ? (openBlock(), createElementBlock("img", {
                      class: normalizeClass(["file-type-icon", "is-" + item.type]),
                      key: index2,
                      src: item.url
                    }, null, 10, _hoisted_6)) : createCommentVNode("v-if", true)],
                    64
                    /* STABLE_FRAGMENT */
                  );
                }),
                256
                /* UNKEYED_FRAGMENT */
              ))]), createElementVNode("div", {
                class: "tiny-mobile-upload-list__text file-content",
                onClick: function onClick($event) {
                  return _ctx.handleClick(file);
                }
              }, [createElementVNode(
                "p",
                _hoisted_8,
                toDisplayString(file.name),
                1
                /* TEXT */
              ), createElementVNode(
                "p",
                _hoisted_9,
                toDisplayString(file.size),
                1
                /* TEXT */
              ), file.status === "uploading" ? (openBlock(), createBlock(_component_Progress, {
                key: 0,
                "show-text": false,
                "stroke-width": 2,
                percentage: _ctx.parsePercentage(file.percentage)
              }, null, 8, ["percentage"])) : createCommentVNode("v-if", true)], 8, _hoisted_7), createElementVNode("div", _hoisted_10, [_ctx.listType !== "picture-card" && _ctx.display ? (openBlock(), createBlock(_component_icon_close_circle, {
                key: 0,
                class: "icon-close",
                onClick: function onClick($event) {
                  return _ctx.$emit("remove", file);
                }
              }, null, 8, ["onClick"])) : createCommentVNode("v-if", true)])]))];
            })], 42, _hoisted_1);
          }),
          128
          /* KEYED_FRAGMENT */
        ))];
      }),
      _: 3
      /* FORWARDED */
    }), _ctx.listType === "picture-card" ? (openBlock(), createBlock(_component_tiny_image_viewer, {
      key: 0,
      "url-list": _ctx.srcList,
      "close-show": true,
      "show-index": true,
      "start-position": _ctx.state.startPostion,
      "tool-show": "",
      "onUpdate:previewVisible": _cache[0] || (_cache[0] = function($event) {
        return _ctx.state.shows = $event;
      }),
      "delete-button": "",
      onNewImageList: _ctx.getDeleteData
    }, null, 8, ["url-list", "start-position", "onNewImageList"])) : createCommentVNode("v-if", true)],
    2
    /* CLASS */
  )) : (openBlock(), createElementBlock("div", _hoisted_11, [createVNode(TransitionGroup, {
    tag: "ul",
    class: normalizeClass(["tiny-upload-list", "tiny-upload-list--" + _ctx.listType, {
      "is-disabled": _ctx.disabled
    }]),
    name: "tiny-list"
  }, {
    default: withCtx(function() {
      return [(openBlock(true), createElementBlock(
        Fragment,
        null,
        renderList(_ctx.files, function(file) {
          return openBlock(), createElementBlock("li", {
            key: file.uid,
            tabindex: "0",
            class: "tiny-upload-list__li"
          }, [createElementVNode("div", {
            class: normalizeClass(["tiny-upload-list__item", "is-" + file.status, _ctx.state.focusing ? "focusing" : "", {
              isEdm: _ctx.isEdm
            }, {
              showUpdate: _ctx.listOption.showUpdate
            }, {
              showDel: _ctx.listOption.showDel
            }]),
            onKeydown: withKeys(function($event) {
              return !_ctx.disabled && _ctx.$emit("remove", file);
            }, ["delete"]),
            onFocus: _cache[1] || (_cache[1] = function($event) {
              return _ctx.state.focusing = true;
            }),
            onBlur: _cache[2] || (_cache[2] = function($event) {
              return _ctx.state.focusing = false;
            }),
            onClick: _cache[3] || (_cache[3] = function($event) {
              return _ctx.state.focusing = false;
            })
          }, [renderSlot(_ctx.$slots, "default", {
            file
          }, function() {
            return [file.status !== "uploading" && file.status !== "fail" && ["picture-card", "picture"].indexOf(_ctx.listType) > -1 ? (openBlock(), createElementBlock("img", {
              key: 0,
              class: "tiny-upload-list__item-thumbnail",
              src: file.url,
              alt: ""
            }, null, 8, _hoisted_13)) : createCommentVNode("v-if", true), createVNode(_component_tiny_tooltip, {
              placement: "top",
              effect: "light",
              disabled: _ctx.state.tooltipDisabled
            }, {
              content: withCtx(function() {
                return [file.status === "fail" ? (openBlock(), createElementBlock("span", _hoisted_14, [createVNode(_component_icon_operationfaild, {
                  class: "tiny-upload-list__icon-operationfaild"
                }), createTextVNode(
                  toDisplayString(_ctx.t("ui.fileUpload.networkError")),
                  1
                  /* TEXT */
                )])) : (openBlock(), createElementBlock(
                  "span",
                  _hoisted_15,
                  toDisplayString(_ctx.isFolderTitle ? (file.path || "") + file.name : file.name),
                  1
                  /* TEXT */
                ))];
              }),
              default: withCtx(function() {
                return [createElementVNode("a", {
                  class: normalizeClass(["tiny-upload-list__item-name", {
                    isFail: _ctx.isEdm && file.status === "fail"
                  }]),
                  onClick: function onClick($event) {
                    return _ctx.handleClick($event, file);
                  },
                  title: _ctx.state.tooltipDisabled ? _ctx.isFolderTitle ? (file.path || "") + file.name : file.name : ""
                }, [!_ctx.isFolder ? (openBlock(), createBlock(_component_icon_attachment, {
                  key: 0,
                  fill: _ctx.isEdm && file.status === "fail" ? "#f5222d" : "",
                  class: "tiny-svg-size"
                }, null, 8, ["fill"])) : createCommentVNode("v-if", true), createTextVNode(
                  toDisplayString(file.name.length > _ctx.maxNameLength ? file.name.substring(0, _ctx.maxNameLength) + "..." : file.name),
                  1
                  /* TEXT */
                )], 10, _hoisted_16)];
              }),
              _: 2
              /* DYNAMIC */
            }, 1032, ["disabled"]), _ctx.isEdm ? (openBlock(), createElementBlock(
              "div",
              {
                key: 1,
                class: normalizeClass(["tiny-upload-list__item-edminfo", {
                  isFail: _ctx.isEdm && file.status === "fail"
                }])
              },
              [createElementVNode(
                "span",
                null,
                toDisplayString(file.docId),
                1
                /* TEXT */
              ), createElementVNode(
                "span",
                null,
                toDisplayString(file.version),
                1
                /* TEXT */
              ), createElementVNode(
                "span",
                null,
                toDisplayString(file.size),
                1
                /* TEXT */
              ), createElementVNode(
                "span",
                null,
                toDisplayString(file.serverName),
                1
                /* TEXT */
              )],
              2
              /* CLASS */
            )) : createCommentVNode("v-if", true), !_ctx.state.preViewComponent ? (openBlock(), createElementBlock("label", _hoisted_17, [_ctx.listType === "text" ? (openBlock(), createBlock(_component_icon_successful, {
              key: 0,
              class: "tiny-svg-size icon-successful"
            })) : createCommentVNode("v-if", true), ["picture-card", "picture"].indexOf(_ctx.listType) > -1 ? (openBlock(), createBlock(_component_icon_yes, {
              key: 1,
              class: "tiny-svg-size tiny-icon-check"
            })) : createCommentVNode("v-if", true)])) : createCommentVNode("v-if", true), _ctx.isEdm && !_ctx.isFolder && !_ctx.disabled && file.status !== "fail" && _ctx.listOption.showUpdate ? (openBlock(), createElementBlock("span", {
              key: 3,
              title: _ctx.t("ui.fileUpload.updateFile"),
              onClick: function onClick($event) {
                return _ctx.$emit("update", file);
              }
            }, [createVNode(_component_icon_file_cloudupload, {
              class: "tiny-svg-size icon-refres",
              fill: _ctx.isEdm && file.status === "fail" ? "#f5222d" : ""
            }, null, 8, ["fill"])], 8, _hoisted_18)) : createCommentVNode("v-if", true), !_ctx.disabled && _ctx.reUploadable && file.status === "fail" ? (openBlock(), createElementBlock("span", {
              key: 4,
              title: _ctx.t("ui.fileUpload.reUploadFile"),
              onClick: function onClick($event) {
                return _ctx.$emit("reUpload", file);
              }
            }, [createVNode(_component_icon_refres, {
              class: "tiny-svg-size icon-refres",
              fill: _ctx.isEdm ? "#f5222d" : ""
            }, null, 8, ["fill"])], 8, _hoisted_19)) : createCommentVNode("v-if", true), !_ctx.disabled && _ctx.listOption.showDel ? (openBlock(), createElementBlock("span", {
              key: 5,
              title: _ctx.t("ui.fileUpload.deleteFile"),
              onClick: function onClick($event) {
                return _ctx.$emit("remove", file);
              }
            }, [(openBlock(), createBlock(resolveDynamicComponent(_ctx.state.closeComponent), {
              class: "tiny-svg-size icon-close",
              fill: _ctx.isEdm && file.status === "fail" ? "#f5222d" : ""
            }, null, 8, ["fill"]))], 8, _hoisted_20)) : createCommentVNode("v-if", true), !_ctx.disabled && _ctx.listOption.showDel ? (openBlock(), createElementBlock(
              "i",
              _hoisted_21,
              toDisplayString(_ctx.t("ui.fileUpload.deleteTip")),
              1
              /* TEXT */
            )) : createCommentVNode("v-if", true), file.status === "uploading" || file.status === "downloading" ? (openBlock(), createBlock(_component_Progress, {
              key: 7,
              type: _ctx.listType === "picture-card" ? _ctx.state.progressType : "line",
              "stroke-width": _ctx.listType === "picture-card" ? _ctx.state.progressStrokeWidth : 2,
              width: _ctx.state.progressWidth,
              percentage: _ctx.parsePercentage(file.percentage),
              "show-text": !_ctx.state.progressWidth
            }, null, 8, ["type", "stroke-width", "width", "percentage", "show-text"])) : createCommentVNode("v-if", true), file.status === "uploading" && _ctx.listType === "picture-card" && _ctx.state.progressWidth ? (openBlock(), createElementBlock("div", {
              key: 8,
              class: "tiny-upload-list__item-cancel",
              onClick: function onClick($event) {
                return _ctx.$emit("remove", file);
              }
            }, toDisplayString(_ctx.t("ui.fileUpload.cancelFile")), 9, _hoisted_22)) : createCommentVNode("v-if", true), createVNode(_component_tiny_tooltip, {
              placement: "top",
              effect: "light",
              disabled: _ctx.state.tooltipDisabled || file.status !== "fail"
            }, {
              content: withCtx(function() {
                return [createElementVNode("span", _hoisted_23, [createVNode(_component_icon_operationfaild, {
                  class: "tiny-upload-list__icon-operationfaild"
                }), createTextVNode(
                  toDisplayString(_ctx.t("ui.fileUpload.pictureNetworkError")),
                  1
                  /* TEXT */
                )])];
              }),
              default: withCtx(function() {
                return [_ctx.listType === "picture-card" && (_ctx.state.progressWidth ? file.status !== "uploading" : true) ? (openBlock(), createElementBlock("span", _hoisted_24, [_ctx.openDownloadFile ? (openBlock(), createElementBlock("span", {
                  key: 0,
                  class: "tiny-upload-list__item-download",
                  title: _ctx.t("ui.fileUpload.downloadFile"),
                  onClick: function onClick($event) {
                    return _ctx.handleClick(file);
                  }
                }, [createVNode(_component_icon_download, {
                  class: "tiny-svg-size"
                })], 8, _hoisted_25)) : createCommentVNode("v-if", true), _ctx.handlePreview && file.status !== "fail" ? (openBlock(), createElementBlock("span", {
                  key: 1,
                  class: "tiny-upload-list__item-preview",
                  title: _ctx.t("ui.fileUpload.previewFile"),
                  onClick: function onClick($event) {
                    return _ctx.handlePreview(file);
                  }
                }, [_ctx.state.preViewComponent ? (openBlock(), createBlock(_component_icon_fullscreen_left, {
                  key: 0,
                  class: "tiny-svg-size tiny-svg-fullscreen"
                })) : (openBlock(), createBlock(_component_icon_view, {
                  key: 1,
                  class: "tiny-svg-size"
                }))], 8, _hoisted_26)) : createCommentVNode("v-if", true), _ctx.isEdm && !_ctx.isFolder && !_ctx.disabled ? (openBlock(), createElementBlock("span", {
                  key: 2,
                  title: _ctx.t("ui.fileUpload.updateFile"),
                  class: "tiny-upload-list__item-refres",
                  onClick: function onClick($event) {
                    return _ctx.$emit("update", file);
                  }
                }, [createVNode(_component_icon_file_cloudupload, {
                  class: "tiny-svg-size"
                })], 8, _hoisted_27)) : createCommentVNode("v-if", true), !_ctx.disabled ? (openBlock(), createElementBlock("span", {
                  key: 3,
                  class: "tiny-upload-list__item-delete",
                  title: _ctx.t("ui.fileUpload.deleteFile"),
                  onClick: function onClick($event) {
                    return _ctx.$emit("remove", file);
                  }
                }, [createVNode(_component_icon_del, {
                  class: "tiny-svg-size"
                })], 8, _hoisted_28)) : createCommentVNode("v-if", true)])) : createCommentVNode("v-if", true)];
              }),
              _: 2
              /* DYNAMIC */
            }, 1032, ["disabled"])];
          })], 42, _hoisted_12), _ctx.state.preViewComponent && _ctx.listType === "picture-card" ? (openBlock(), createElementBlock("div", {
            key: 0,
            class: normalizeClass(["tiny-upload-list__li-title", file.status === "fail" && "is-fail"]),
            title: _ctx.isFolderTitle ? (file.path || "") + file.name : file.name
          }, toDisplayString(file.name.length > _ctx.maxNameLength ? file.name.substring(0, _ctx.maxNameLength) + "..." : file.name), 11, _hoisted_29)) : createCommentVNode("v-if", true)]);
        }),
        128
        /* KEYED_FRAGMENT */
      ))];
    }),
    _: 3
    /* FORWARDED */
  }, 8, ["class"]), _ctx.reUploadable && _ctx.state.failUploadFileCount && _ctx.listType === "text" ? (openBlock(), createElementBlock("div", _hoisted_30, [createVNode(_component_icon_operationfaild, {
    class: "tiny-upload-list__icon-operationfaild"
  }), createTextVNode(
    toDisplayString(typeof _ctx.reUploadTip === "function" ? _ctx.reUploadTip(_ctx.state.failUploadFileCount) : _ctx.t("ui.fileUpload.reUploadTip", {
      number: _ctx.state.failUploadFileCount
    })) + " ",
    1
    /* TEXT */
  ), createVNode(_component_tiny_button, {
    type: "text",
    onClick: _cache[4] || (_cache[4] = function($event) {
      return _ctx.$emit("ReUploadTotal", _ctx.files);
    })
  }, {
    default: withCtx(function() {
      return [createTextVNode(
        toDisplayString(_ctx.t("ui.fileUpload.reUploadFile")),
        1
        /* TEXT */
      )];
    }),
    _: 1
    /* STABLE */
  })])) : createCommentVNode("v-if", true)]));
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  pc as default
};
