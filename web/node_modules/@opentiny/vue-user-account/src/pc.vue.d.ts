declare const _default: import("@vue/runtime-core").DefineComponent<Readonly<{
    tiny_mode?: any;
    tiny_mode_root?: any;
    tiny_template?: any;
    tiny_renderless?: any;
    _constants?: any;
    tiny_theme?: any;
    tiny_chart_theme?: any;
    popperClass?: any;
    popperAppendToBody?: any;
    showArrow?: any;
    getUserInfo?: any;
    network?: any;
    getLogoutUrl?: any;
    redirectUrl?: any;
    isMock?: any;
    isLocal?: any;
    showLogin?: any;
    guestRole?: any;
    beforeLogout?: any;
    isGuestUser?: any;
    getUserImageUrl?: any;
    getLangData?: any;
}>, {
    t: (this: any, path: any, options?: any) => any;
    vm: any;
    f: (props: any, attrs?: {}) => {};
    a: (attrs: any, filters: any, include: any) => {};
    d: (props: any) => void;
    dp: (props: any) => void;
    gcls: (key: any) => any;
}, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<Readonly<{
    tiny_mode?: any;
    tiny_mode_root?: any;
    tiny_template?: any;
    tiny_renderless?: any;
    _constants?: any;
    tiny_theme?: any;
    tiny_chart_theme?: any;
    popperClass?: any;
    popperAppendToBody?: any;
    showArrow?: any;
    getUserInfo?: any;
    network?: any;
    getLogoutUrl?: any;
    redirectUrl?: any;
    isMock?: any;
    isLocal?: any;
    showLogin?: any;
    guestRole?: any;
    beforeLogout?: any;
    isGuestUser?: any;
    getUserImageUrl?: any;
    getLangData?: any;
}>>>, {
    readonly tiny_mode?: any;
    readonly tiny_mode_root?: any;
    readonly tiny_template?: any;
    readonly tiny_renderless?: any;
    readonly _constants?: any;
    readonly tiny_theme?: any;
    readonly tiny_chart_theme?: any;
    readonly popperClass?: any;
    readonly popperAppendToBody?: any;
    readonly showArrow?: any;
    readonly getUserInfo?: any;
    readonly network?: any;
    readonly getLogoutUrl?: any;
    readonly redirectUrl?: any;
    readonly isMock?: any;
    readonly isLocal?: any;
    readonly showLogin?: any;
    readonly guestRole?: any;
    readonly beforeLogout?: any;
    readonly isGuestUser?: any;
    readonly getUserImageUrl?: any;
    readonly getLangData?: any;
}, {}>;
export default _default;
