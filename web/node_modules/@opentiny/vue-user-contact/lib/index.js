function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
import { defineComponent, $prefix, $props, $setup } from "@opentiny/vue-common";
import PcTemplate from "./pc.js";
import "@opentiny/vue-theme/user-contact/index.css";
var template = function template2(mode) {
  var _process$env;
  typeof process === "object" ? (_process$env = process.env) == null ? void 0 : _process$env.TINY_MODE : null;
  return PcTemplate;
};
var UserContact = defineComponent({
  name: $prefix + "UserContact",
  props: _extends({}, $props, {
    showName: {
      type: Boolean,
      default: true
    },
    showArrow: {
      type: Boolean,
      default: false
    },
    /**
     *  是否显示 roleNumber, colType 为 false 时生效
     */
    showNumber: {
      type: Boolean,
      default: true
    },
    /**
     * 是否显示 头像
     */
    showImg: {
      type: Boolean,
      default: true
    },
    /**
     * 数据
     */
    data: {
      type: Object,
      validator: function validator(value) {
        return typeof value.userName === "string" && value.imgUrl ? typeof value.imgUrl === "string" : typeof value.userDescription === "string" && (!value.values || Array.isArray(value.values));
      }
    },
    popperClass: String,
    popperAppendToBody: {
      type: Boolean,
      default: true
    },
    isNewImMode: {
      type: Boolean,
      default: true
    }
  }),
  setup: function setup(props, context) {
    return $setup({
      context,
      props,
      template
    });
  }
});
var version = "3.13.0";
UserContact.install = function(Vue) {
  Vue.component(UserContact.name, UserContact);
};
UserContact.version = version;
export {
  UserContact as default
};
