function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
import { defineComponent, $prefix, $props, $setup } from "@opentiny/vue-common";
import PcTemplate from "./pc.js";
import MobileTemplate from "./mobile.js";
import MobileFirstTemplate from "./mobile-first.js";
var template = function template2(mode) {
  var _process$env;
  var tinyMode = typeof process === "object" ? (_process$env = process.env) == null ? void 0 : _process$env.TINY_MODE : null;
  if ("pc" === (tinyMode || mode)) {
    return PcTemplate;
  }
  if ("mobile" === (tinyMode || mode)) {
    return MobileTemplate;
  }
  if ("mobile-first" === (tinyMode || mode)) {
    return MobileFirstTemplate;
  }
  return PcTemplate;
};
var $constants = {
  ITEM_NAME: ".user-head-item"
};
var UserHead = defineComponent({
  name: $prefix + "UserHead",
  props: _extends({}, $props, {
    _constants: {
      type: Object,
      default: function _default() {
        return $constants;
      }
    },
    /**
     * @property {Boolean} [min=false] - 小尺寸模式
     */
    min: Boolean,
    /**
     * @property {Boolean} [round=true] - 圆形模式
     */
    round: Boolean,
    /**
     * @property {String} [color=#ffffff] - 文字颜色
     */
    color: {
      type: String,
      default: "#ffffff"
    },
    /**
     * @property {String} [backgroundColor=#BBBBBB] - 背景色
     */
    backgroundColor: {
      type: String,
      default: "#B5BBC1"
    },
    /**
     * @property {String} [type=label] - 头像类型，icon|image|label 可选
     */
    type: {
      type: String,
      default: "label",
      validator: function validator(value) {
        return Boolean(~["icon", "image", "label"].indexOf(value));
      }
    },
    /**
     * @property {String} - 头像资源
     * type=icon 时为图标类名，type=label时为字体串，type=image时为资源路径
     */
    modelValue: {
      type: [Object, String],
      default: null
    },
    /**
     * @property {Number} - 消息计数
     */
    messageTotal: Number,
    /**
     * @property {String} [messageType=details] - 消息类型 details|basic 可选
     */
    messageType: {
      type: String,
      default: "details",
      validator: function validator2(value) {
        return Boolean(~["details", "basic"].indexOf(value));
      }
    },
    /**
     * @property {Number} [messageUpperLimit=0] - 消息显示上限
     */
    messageUpperLimit: {
      type: Number,
      default: 0
    },
    size: {
      type: Number,
      default: 40
    }
  }),
  setup: function setup(props, context) {
    return $setup({
      props,
      context,
      template
    });
  }
});
var version = "3.13.0";
UserHead.install = function(Vue) {
  Vue.component(UserHead.name, UserHead);
};
UserHead.version = version;
export {
  UserHead as default
};
