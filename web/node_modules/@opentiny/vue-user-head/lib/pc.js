import { renderless, api } from "@opentiny/vue-renderless/user-head/vue";
import { defineComponent, props, setup as _setup } from "@opentiny/vue-common";
import { iconUser } from "@opentiny/vue-icon";
import "@opentiny/vue-theme/user-head/index.css";
import { openBlock, createElementBlock, createElementVNode, normalizeStyle, normalizeClass, renderSlot, createBlock, resolveDynamicComponent, createCommentVNode, toDisplayString } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  components: {
    IconUser: iconUser()
  },
  props: [].concat(props, ["min", "round", "color", "backgroundColor", "type", "modelValue", "messageTotal", "messageType", "messageUpperLimit"]),
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  class: "tiny-user-head"
};
var _hoisted_2 = ["title"];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", _hoisted_1, [createElementVNode(
    "div",
    {
      style: normalizeStyle(_ctx.state.style),
      class: normalizeClass(["tiny-user-head__portrait", {
        min: _ctx.min,
        round: _ctx.round
      }, _ctx.type])
    },
    [renderSlot(_ctx.$slots, "default", {}, function() {
      return [_ctx.type === "icon" ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.state.internalValue), {
        key: 0,
        class: "tiny-svg-size"
      })) : createCommentVNode("v-if", true), _ctx.type === "label" ? (openBlock(), createElementBlock("span", {
        key: 1,
        style: normalizeStyle(_ctx.state.fontSize),
        title: _ctx.state.internalValue
      }, toDisplayString(_ctx.state.label), 13, _hoisted_2)) : createCommentVNode("v-if", true)];
    })],
    6
    /* CLASS, STYLE */
  ), _ctx.messageTotal ? (openBlock(), createElementBlock(
    "div",
    {
      key: 0,
      class: normalizeClass(["tiny-user-head__message", {
        min: _ctx.min,
        round: _ctx.round,
        basic: _ctx.messageType === "basic" || _ctx.messageType === "icon"
      }])
    },
    toDisplayString(_ctx.state.message),
    3
    /* TEXT, CLASS */
  )) : createCommentVNode("v-if", true)]);
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  pc as default
};
