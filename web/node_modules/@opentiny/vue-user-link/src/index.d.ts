declare const _default: import("@vue/runtime-core").DefineComponent<{
    modelValue: StringConstructor;
    cache: {
        type: BooleanConstructor;
        default: boolean;
    };
    cacheKey: {
        type: StringConstructor;
        default: string;
    };
    cacheFields: {
        type: ArrayConstructor;
        default: () => never[];
    };
    valueSplit: {
        type: StringConstructor;
        default: () => string;
    };
    textSplit: {
        type: StringConstructor;
        default: () => string;
    };
    valueField: {
        type: StringConstructor;
        default: () => string;
    };
    textField: {
        type: StringConstructor;
        default: () => string;
    };
    card: {
        type: BooleanConstructor;
        default: boolean;
    };
    fetchUser: FunctionConstructor;
    fetchW3Accounts: FunctionConstructor;
    getUserImageUrl: FunctionConstructor;
    fetchUserByUserId: FunctionConstructor;
    UserCache: ObjectConstructor;
    batch: {
        type: (NumberConstructor | BooleanConstructor)[];
        default: number;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    modelValue: StringConstructor;
    cache: {
        type: BooleanConstructor;
        default: boolean;
    };
    cacheKey: {
        type: StringConstructor;
        default: string;
    };
    cacheFields: {
        type: ArrayConstructor;
        default: () => never[];
    };
    valueSplit: {
        type: StringConstructor;
        default: () => string;
    };
    textSplit: {
        type: StringConstructor;
        default: () => string;
    };
    valueField: {
        type: StringConstructor;
        default: () => string;
    };
    textField: {
        type: StringConstructor;
        default: () => string;
    };
    card: {
        type: BooleanConstructor;
        default: boolean;
    };
    fetchUser: FunctionConstructor;
    fetchW3Accounts: FunctionConstructor;
    getUserImageUrl: FunctionConstructor;
    fetchUserByUserId: FunctionConstructor;
    UserCache: ObjectConstructor;
    batch: {
        type: (NumberConstructor | BooleanConstructor)[];
        default: number;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    tiny_mode_root: boolean;
    textField: string;
    valueField: string;
    card: boolean;
    textSplit: string;
    valueSplit: string;
    cacheKey: string;
    batch: number | boolean;
    cacheFields: unknown[];
    cache: boolean;
}, {}>;
export default _default;
