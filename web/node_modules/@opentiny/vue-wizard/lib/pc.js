import { renderless, api } from "@opentiny/vue-renderless/wizard/vue";
import { defineComponent, props, setup as _setup } from "@opentiny/vue-common";
import Button from "@opentiny/vue-button";
import UserContact from "@opentiny/vue-user-contact";
import { iconSuccessful, iconMarkOn, iconTriangleDown } from "@opentiny/vue-icon";
import { resolveComponent, openBlock, createElementBlock, createElementVNode, Fragment, renderList, normalizeClass, createVNode, toDisplayString, renderSlot, withCtx, createTextVNode, createBlock, createCommentVNode } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  props: [].concat(props, ["data", "pageGuide", "timeLineFlow", "vertical"]),
  emits: ["btnPrev", "btnNext", "btnSave", "btnSubmit", "node-click"],
  components: {
    TinyButton: Button,
    TinyUserContact: UserContact,
    TinyIconSuccessful: iconSuccessful(),
    TinyIconMarkOn: iconMarkOn(),
    TinyIconTriangleDown: iconTriangleDown()
  },
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  class: "tiny-wizard"
};
var _hoisted_2 = {
  key: 0,
  class: "tiny-wizard__nomarl"
};
var _hoisted_3 = {
  class: "tiny-wizard__steps"
};
var _hoisted_4 = {
  class: "tiny-wizard__chart"
};
var _hoisted_5 = /* @__PURE__ */ createElementVNode(
  "span",
  {
    class: "tiny-wizard__chart-line"
  },
  null,
  -1
  /* HOISTED */
);
var _hoisted_6 = {
  key: 0,
  class: "tiny-wizard__chart-svg"
};
var _hoisted_7 = ["onClick"];
var _hoisted_8 = /* @__PURE__ */ createElementVNode(
  "span",
  {
    class: "tiny-wizard__chart-line"
  },
  null,
  -1
  /* HOISTED */
);
var _hoisted_9 = {
  class: "tiny-wizard__name"
};
var _hoisted_10 = {
  class: "name"
};
var _hoisted_11 = {
  key: 0,
  class: "tiny-wizard__button"
};
var _hoisted_12 = {
  class: "tiny-wizard__steps"
};
var _hoisted_13 = {
  class: "tiny-wizard__node-wrapper"
};
var _hoisted_14 = ["onClick"];
var _hoisted_15 = {
  class: "tiny-wizard__date-wrapper"
};
var _hoisted_16 = ["onClick"];
var _hoisted_17 = {
  key: 1,
  class: "tiny-wizard__time-wrapper"
};
var _hoisted_18 = ["onClick"];
var _hoisted_19 = {
  class: "name"
};
var _hoisted_20 = {
  key: 0,
  class: "children-name"
};
var _hoisted_21 = {
  key: 0
};
var _hoisted_22 = {
  class: "tiny-wizard__date time-line-text"
};
var _hoisted_23 = {
  class: "tiny-wizard__chart-line"
};
var _hoisted_24 = ["onClick"];
var _hoisted_25 = {
  class: "tiny-wizard__chart-detail"
};
var _hoisted_26 = {
  class: "detail-title"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_tiny_icon_mark_on = resolveComponent("tiny-icon-mark-on");
  var _component_tiny_button = resolveComponent("tiny-button");
  var _component_tiny_icon_triangle_down = resolveComponent("tiny-icon-triangle-down");
  var _component_tiny_icon_successful = resolveComponent("tiny-icon-successful");
  var _component_tiny_user_contact = resolveComponent("tiny-user-contact");
  return openBlock(), createElementBlock("div", _hoisted_1, [!_ctx.vertical ? (openBlock(), createElementBlock("div", _hoisted_2, [createElementVNode("ul", _hoisted_3, [(openBlock(true), createElementBlock(
    Fragment,
    null,
    renderList(_ctx.state.datas, function(item, index) {
      return openBlock(), createElementBlock(
        "li",
        {
          class: normalizeClass(["tiny-wizard__steps-item", [{
            "is-ready": item.status === _ctx.state.ready,
            "is-doing": item.status === _ctx.state.doing
          }]]),
          key: index
        },
        [createElementVNode("div", _hoisted_4, [_hoisted_5, _ctx.pageGuide && item.status === _ctx.state.doing ? (openBlock(), createElementBlock("span", _hoisted_6, [createVNode(_component_tiny_icon_mark_on, {
          onClick: function onClick($event) {
            return _ctx.nodeClick(item, index, $event);
          }
        }, null, 8, ["onClick"])])) : (openBlock(), createElementBlock("span", {
          key: 1,
          class: "tiny-wizard__chart-icon statues",
          onClick: function onClick($event) {
            return _ctx.nodeClick(item, index, $event);
          }
        }, toDisplayString(index + 1), 9, _hoisted_7)), _hoisted_8]), createElementVNode("div", _hoisted_9, [renderSlot(_ctx.$slots, "base", {
          slotScope: item
        }, function() {
          return [createElementVNode(
            "span",
            _hoisted_10,
            toDisplayString(item.name),
            1
            /* TEXT */
          )];
        })])],
        2
        /* CLASS */
      );
    }),
    128
    /* KEYED_FRAGMENT */
  ))]), _ctx.pageGuide ? (openBlock(), createElementBlock("div", _hoisted_11, [renderSlot(_ctx.$slots, "stepbutton", {}, function() {
    return [createVNode(_component_tiny_button, {
      "reset-time": 0,
      onClick: _ctx.lastStepHandle
    }, {
      default: withCtx(function() {
        return [createTextVNode(
          toDisplayString(_ctx.t("ui.wizard.previousStep")),
          1
          /* TEXT */
        )];
      }),
      _: 1
      /* STABLE */
    }, 8, ["onClick"]), createVNode(_component_tiny_button, {
      "reset-time": 0,
      onClick: _ctx.btnSaveHandle
    }, {
      default: withCtx(function() {
        return [createTextVNode(
          toDisplayString(_ctx.t("ui.wizard.save")),
          1
          /* TEXT */
        )];
      }),
      _: 1
      /* STABLE */
    }, 8, ["onClick"]), createVNode(_component_tiny_button, {
      "reset-time": 0,
      onClick: _ctx.nextStepHandle
    }, {
      default: withCtx(function() {
        return [createTextVNode(
          toDisplayString(_ctx.t("ui.wizard.nextStep")),
          1
          /* TEXT */
        )];
      }),
      _: 1
      /* STABLE */
    }, 8, ["onClick"]), _ctx.state.submitShow ? (openBlock(), createBlock(_component_tiny_button, {
      key: 0,
      "reset-time": 0,
      onClick: _ctx.submitHandle
    }, {
      default: withCtx(function() {
        return [createTextVNode(
          toDisplayString(_ctx.t("ui.wizard.submit")),
          1
          /* TEXT */
        )];
      }),
      _: 1
      /* STABLE */
    }, 8, ["onClick"])) : createCommentVNode("v-if", true)];
  })])) : createCommentVNode("v-if", true)])) : createCommentVNode("v-if", true), _ctx.vertical ? (openBlock(), createElementBlock(
    "div",
    {
      key: 1,
      class: normalizeClass(["tiny-wizard__vertical", {
        "is-time-line-flow": _ctx.timeLineFlow
      }])
    },
    [createElementVNode("ul", _hoisted_12, [(openBlock(true), createElementBlock(
      Fragment,
      null,
      renderList(_ctx.state.datas, function(item, index) {
        return openBlock(), createElementBlock(
          "li",
          {
            class: normalizeClass(["tiny-wizard__steps-item", [{
              "is-ready": item.status === _ctx.state.ready,
              "is-doing": item.status === _ctx.state.doing,
              "is-time-line-ready": _ctx.timeLineFlow && item.nodeStatus === _ctx.state.ready,
              "is-time-line-doing": _ctx.timeLineFlow && item.nodeStatus === _ctx.state.doing
            }]]),
            key: index
          },
          [createElementVNode("div", _hoisted_13, [_ctx.timeLineFlow ? (openBlock(), createElementBlock("div", {
            key: 0,
            class: "tiny-wizard__date",
            onClick: function onClick($event) {
              return _ctx.showNode(item, index, $event);
            }
          }, [createElementVNode(
            "span",
            null,
            toDisplayString(item.date),
            1
            /* TEXT */
          ), createElementVNode("span", _hoisted_15, [createVNode(_component_tiny_icon_triangle_down, {
            class: "date-icon"
          })])], 8, _hoisted_14)) : createCommentVNode("v-if", true), createElementVNode(
            "div",
            {
              class: normalizeClass(["tiny-wizard__chart-line", {
                "is-time-line": _ctx.timeLineFlow
              }])
            },
            [!_ctx.timeLineFlow ? (openBlock(), createElementBlock("div", {
              key: 0,
              class: "tiny-wizard__chart-icon",
              onClick: function onClick($event) {
                return _ctx.showNode(item, index, $event);
              }
            }, toDisplayString(index + 1), 9, _hoisted_16)) : createCommentVNode("v-if", true), _ctx.timeLineFlow ? (openBlock(), createElementBlock("span", _hoisted_17, [createVNode(_component_tiny_icon_successful, {
              onClick: function onClick($event) {
                return _ctx.showNode(item, index, $event);
              }
            }, null, 8, ["onClick"])])) : createCommentVNode("v-if", true)],
            2
            /* CLASS */
          ), !_ctx.timeLineFlow ? (openBlock(), createElementBlock("div", {
            key: 1,
            class: "tiny-wizard__chart-name",
            onClick: function onClick($event) {
              return _ctx.showNode(item, index, $event);
            }
          }, [renderSlot(_ctx.$slots, "vertical", {
            slotScope: item
          }, function() {
            return [createElementVNode(
              "span",
              _hoisted_19,
              toDisplayString(item.name),
              1
              /* TEXT */
            ), item.showNode && item.content ? (openBlock(), createElementBlock(
              "span",
              _hoisted_20,
              toDisplayString(item.content),
              1
              /* TEXT */
            )) : createCommentVNode("v-if", true)];
          })], 8, _hoisted_18)) : createCommentVNode("v-if", true)]), _ctx.timeLineFlow ? (openBlock(), createElementBlock("ul", _hoisted_21, [item.showNode ? (openBlock(true), createElementBlock(
            Fragment,
            {
              key: 0
            },
            renderList(item.value, function(value, index2) {
              return openBlock(), createElementBlock(
                "li",
                {
                  class: normalizeClass(["tiny-wizard__chart-children", [{
                    "is-ready": value.status === _ctx.state.ready,
                    "is-doing": value.status === _ctx.state.doing
                  }]]),
                  key: index2
                },
                [createElementVNode(
                  "div",
                  _hoisted_22,
                  toDisplayString(value.time),
                  1
                  /* TEXT */
                ), createElementVNode("div", _hoisted_23, [createElementVNode("div", {
                  class: "tiny-wizard__chart-icon time-line-icon",
                  onClick: function onClick($event) {
                    return _ctx.nodeClick(value, index2, $event);
                  }
                }, null, 8, _hoisted_24)]), createElementVNode("div", _hoisted_25, [createElementVNode(
                  "div",
                  _hoisted_26,
                  toDisplayString(value.name),
                  1
                  /* TEXT */
                ), createVNode(_component_tiny_user_contact, {
                  data: value
                }, null, 8, ["data"])])],
                2
                /* CLASS */
              );
            }),
            128
            /* KEYED_FRAGMENT */
          )) : createCommentVNode("v-if", true)])) : createCommentVNode("v-if", true)],
          2
          /* CLASS */
        );
      }),
      128
      /* KEYED_FRAGMENT */
    ))])],
    2
    /* CLASS */
  )) : createCommentVNode("v-if", true)]);
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  pc as default
};
