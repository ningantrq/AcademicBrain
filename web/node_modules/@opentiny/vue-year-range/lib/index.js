function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
import { renderless, api } from "@opentiny/vue-renderless/year-range/vue";
import { defineComponent, $prefix, directive, $props, setup as _setup } from "@opentiny/vue-common";
import Clickoutside from "@opentiny/vue-renderless/common/deps/clickoutside";
import YearTable from "@opentiny/vue-year-table";
import { IconDoubleRight, IconDoubleLeft } from "@opentiny/vue-icon";
import { resolveComponent, openBlock, createBlock, Transition, withCtx, withDirectives, createElementVNode, normalizeClass, renderSlot, createElementBlock, Fragment, renderList, toDisplayString, createCommentVNode, createVNode, vShow } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  name: $prefix + "YearRange",
  directives: directive({
    Clickoutside
  }),
  components: {
    YearTable,
    IconDoubleRight: IconDoubleRight(),
    IconDoubleLeft: IconDoubleLeft()
  },
  props: _extends({}, $props, {
    emitter: Object
  }),
  emits: ["dodestroy", "pick"],
  setup: function setup(props, context) {
    return _setup({
      props,
      context,
      renderless,
      api,
      mono: true
    });
  }
});
var _hoisted_1 = {
  class: "tiny-picker-panel__body-wrapper"
};
var _hoisted_2 = {
  key: 0,
  class: "tiny-picker-panel__sidebar"
};
var _hoisted_3 = ["onClick"];
var _hoisted_4 = {
  class: "tiny-picker-panel__body"
};
var _hoisted_5 = {
  class: "tiny-picker-panel__content tiny-date-range-picker__content is-left"
};
var _hoisted_6 = {
  class: "tiny-date-range-picker__header"
};
var _hoisted_7 = {
  class: "tiny-picker-panel__content tiny-date-range-picker__content is-right"
};
var _hoisted_8 = {
  class: "tiny-date-range-picker__header"
};
function _sfc_render(_ctx, _cache, $props2, $setup, $data, $options) {
  var _component_icon_double_left = resolveComponent("icon-double-left");
  var _component_year_table = resolveComponent("year-table");
  var _component_icon_double_right = resolveComponent("icon-double-right");
  return openBlock(), createBlock(Transition, {
    name: "tiny-zoom-in-top",
    onAfterLeave: _cache[2] || (_cache[2] = function($event) {
      return _ctx.$emit("dodestroy");
    }),
    persisted: ""
  }, {
    default: withCtx(function() {
      return [withDirectives(createElementVNode(
        "div",
        {
          class: normalizeClass(["tiny-picker-panel tiny-date-range-picker tiny-popper", [{
            "has-sidebar": _ctx.slots.sidebar || _ctx.state.shortcuts
          }, _ctx.state.popperClass]])
        },
        [createElementVNode("div", _hoisted_1, [renderSlot(_ctx.$slots, "sidebar", {
          class: "tiny-picker-panel__sidebar"
        }), _ctx.state.shortcuts ? (openBlock(), createElementBlock("div", _hoisted_2, [(openBlock(true), createElementBlock(
          Fragment,
          null,
          renderList(_ctx.state.shortcuts, function(shortcut, key) {
            return openBlock(), createElementBlock("button", {
              type: "button",
              class: "tiny-picker-panel__shortcut",
              key,
              onClick: function onClick($event) {
                return _ctx.handleShortcutClick(shortcut);
              }
            }, toDisplayString(shortcut.text), 9, _hoisted_3);
          }),
          128
          /* KEYED_FRAGMENT */
        ))])) : createCommentVNode("v-if", true), createElementVNode("div", _hoisted_4, [createElementVNode("div", _hoisted_5, [createElementVNode("div", _hoisted_6, [createElementVNode("button", {
          type: "button",
          onClick: _cache[0] || (_cache[0] = function() {
            return _ctx.leftPrevYear && _ctx.leftPrevYear.apply(_ctx, arguments);
          }),
          class: "tiny-picker-panel__icon-btn tiny-icon-d-arrow-left"
        }, [createVNode(_component_icon_double_left)]), createElementVNode(
          "div",
          null,
          toDisplayString(_ctx.state.leftLabel),
          1
          /* TEXT */
        )]), createVNode(_component_year_table, {
          ref: "leftYearTable",
          "selection-mode": _ctx.state.selectionMode,
          date: _ctx.state.leftDate,
          "default-value": _ctx.state.defaultValue,
          "min-date": _ctx.state.minDate,
          "max-date": _ctx.state.maxDate,
          "range-state": _ctx.state.rangeState,
          "disabled-date": _ctx.state.disabledDate,
          "start-year": _ctx.state.leftStartYear,
          onChangerange: _ctx.handleChangeRange,
          onPick: _ctx.handleRangePick
        }, null, 8, ["selection-mode", "date", "default-value", "min-date", "max-date", "range-state", "disabled-date", "start-year", "onChangerange", "onPick"])]), createElementVNode("div", _hoisted_7, [createElementVNode("div", _hoisted_8, [createElementVNode("button", {
          type: "button",
          onClick: _cache[1] || (_cache[1] = function() {
            return _ctx.rightNextYear && _ctx.rightNextYear.apply(_ctx, arguments);
          }),
          class: "tiny-picker-panel__icon-btn tiny-icon-d-arrow-right"
        }, [createVNode(_component_icon_double_right)]), createElementVNode(
          "div",
          null,
          toDisplayString(_ctx.state.rightLabel),
          1
          /* TEXT */
        )]), createVNode(_component_year_table, {
          ref: "rightRearTable",
          "selection-mode": _ctx.state.selectionMode,
          date: _ctx.state.rightDate,
          "default-value": _ctx.state.defaultValue,
          "min-date": _ctx.state.minDate,
          "max-date": _ctx.state.maxDate,
          "range-state": _ctx.state.rangeState,
          "disabled-date": _ctx.state.disabledDate,
          "start-year": _ctx.state.rightStartYear,
          onChangerange: _ctx.handleChangeRange,
          onPick: _ctx.handleRangePick
        }, null, 8, ["selection-mode", "date", "default-value", "min-date", "max-date", "range-state", "disabled-date", "start-year", "onChangerange", "onPick"])])])])],
        2
        /* CLASS */
      ), [[vShow, _ctx.state.visible]])];
    }),
    _: 3
    /* FORWARDED */
  });
}
var YearRange = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
var version = "3.13.0";
YearRange.install = function(Vue) {
  Vue.component(YearRange.name, YearRange);
};
YearRange.version = version;
export {
  YearRange as default
};
