import { renderless, api } from "@opentiny/vue-renderless/calendar-bar/vue";
import { defineComponent, h, props, setup as _setup } from "@opentiny/vue-common";
import { IconChevronDown } from "@opentiny/vue-icon";
import CascaderSelect from "@opentiny/vue-cascader-select";
import { resolveComponent, openBlock, createElementBlock, createElementVNode, normalizeClass, toDisplayString, createVNode, Fragment, renderList, normalizeStyle, withModifiers, mergeProps } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main$1 = defineComponent({
  name: "CalendarItem",
  props: {
    text: String,
    day: [String, Object],
    config: Object
  },
  emits: ["clickday"],
  render: function render() {
    var _this = this;
    var text = this.text, day = this.day, config = this.config, $emit = this.$emit;
    var renderItem = config.renderItem, render2 = config.render;
    if (typeof render2 === "function") {
      return render2({
        h,
        item: day,
        text,
        config
      });
    }
    var child = typeof renderItem === "function" ? renderItem({
      h,
      item: day,
      text
    }) : "";
    var backgroundColorClass = "";
    var markVnode = null;
    var ons = {};
    child = child || h("span", text);
    if (day && day.disabled) {
      backgroundColorClass = config && config.disabledBackgroundColorClass || "bg-color-bg-4";
    } else {
      ons.click = function() {
        return $emit.apply(_this, ["clickday", day]);
      };
    }
    if (day && day.type === "cur" && day.isCur) {
      backgroundColorClass = config && config.currentBackgroundColorClass || "bg-color-brand";
    }
    var itemClass = ["w-8 h-8 rounded-sm flex justify-center items-center", day && day.disabled ? "cursor-not-allowed" : "cursor-pointer", backgroundColorClass];
    var itemAttrs = {
      class: itemClass,
      on: ons,
      attrs: {}
    };
    itemAttrs.attrs["data-tag"] = "tiny-mobile-calendar-bar-item";
    if (day && day.marked) {
      markVnode = h("div", {
        class: ["absolute w-1.5 h-1.5 left-1/2 bottom-0.5 -translate-x-1/2 rounded-full cursor-pointer", config && config.markBackgroundColorClass || "bg-color-brand"],
        attrs: {
          title: config && config.showMarkMessage ? day.markMsg : ""
        }
      });
    }
    return h("div", {
      class: "w-full h-full flex justify-center items-center relative"
    }, [h("div", itemAttrs, [child]), markVnode]);
  }
});
var _sfc_main = defineComponent({
  emits: ["update:modelValue", "expand"],
  props: [].concat(props, ["modelValue", "config", "cascaderPosition"]),
  components: {
    TinyCascaderSelect: CascaderSelect,
    IconChevronDown: IconChevronDown(),
    CalendarItem: _sfc_main$1
  },
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  "data-tag": "tiny-calendar-bar",
  class: "select-none"
};
var _hoisted_2 = {
  class: "-translate-y-px fill-color-icon-primary"
};
var _hoisted_3 = {
  "data-tag": "tiny-calendar-bar-gridbox",
  class: "w-full h-max overflow-hidden",
  ref: "weekPanel"
};
var _hoisted_4 = {
  class: "grid grid-cols-7"
};
var _hoisted_5 = {
  class: "w-full flex",
  ref: "calendarPanel"
};
var _hoisted_6 = {
  class: "w-full h-4 flex justify-center items-center"
};
var _hoisted_7 = /* @__PURE__ */ createElementVNode(
  "div",
  {
    class: /* @__PURE__ */ normalizeClass(["box-content w-6 h-px cursor-pointer bg-color-border-separator rounded-sm", "border-y border-solid border-color-border-separator"])
  },
  null,
  -1
  /* HOISTED */
);
var _hoisted_8 = [_hoisted_7];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_icon_chevron_down = resolveComponent("icon-chevron-down");
  var _component_calendar_item = resolveComponent("calendar-item");
  var _component_tiny_cascader_select = resolveComponent("tiny-cascader-select");
  return openBlock(), createElementBlock("div", _hoisted_1, [createElementVNode(
    "div",
    {
      "data-tag": "tiny-calendar-bar-content",
      class: normalizeClass(["w-full h-11 flex items-center text-sm text-color-text-primary", "border-b-0.5 border-solid border-color-border-separator", {
        "justify-start": _ctx.cascaderPosition === "start",
        "justify-center": _ctx.cascaderPosition === "center",
        "justify-end": _ctx.cascaderPosition === "end"
      }])
    },
    [createElementVNode("div", {
      "data-tag": "tiny-calendar-bar-visible",
      class: "w-max h-6 flex items-center cursor-pointer space-x-1.5",
      onClick: _cache[0] || (_cache[0] = function($event) {
        return _ctx.setCascaderVisible(true);
      })
    }, [createElementVNode(
      "span",
      null,
      toDisplayString(_ctx.i18nYearMonth()),
      1
      /* TEXT */
    ), createElementVNode("span", _hoisted_2, [createVNode(_component_icon_chevron_down, {
      class: normalizeClass({
        "rotate-180": _ctx.state.cascaderVisible
      })
    }, null, 8, ["class"])])])],
    2
    /* CLASS */
  ), createElementVNode(
    "div",
    _hoisted_3,
    [createElementVNode("div", _hoisted_4, [(openBlock(true), createElementBlock(
      Fragment,
      null,
      renderList(_ctx.state.weekDays, function(weekDay) {
        return openBlock(), createElementBlock(
          "div",
          {
            "data-tag": "tiny-calendar-bar-weekday",
            key: weekDay,
            style: normalizeStyle(_ctx.state.minSize2),
            class: "text-xs"
          },
          [createVNode(_component_calendar_item, {
            text: _ctx.t("ui.calendarBar.week." + weekDay),
            day: "" + weekDay,
            config: _ctx.config
          }, null, 8, ["text", "day", "config"])],
          4
          /* STYLE */
        );
      }),
      128
      /* KEYED_FRAGMENT */
    ))]), createElementVNode(
      "div",
      {
        class: "h-max flex relative right-full will-change-transform",
        onTouchstart: _cache[1] || (_cache[1] = function() {
          return _ctx.touchstart && _ctx.touchstart.apply(_ctx, arguments);
        }),
        onTouchend: _cache[2] || (_cache[2] = function() {
          return _ctx.touchend && _ctx.touchend.apply(_ctx, arguments);
        }),
        onTouchmove: _cache[3] || (_cache[3] = withModifiers(function() {
          return _ctx.touchmove && _ctx.touchmove.apply(_ctx, arguments);
        }, ["prevent"])),
        style: normalizeStyle({
          "width": " 300%",
          "transform": "translateX(" + _ctx.state.delta + "px)",
          "transition-duration": _ctx.state.duration + "ms"
        })
      },
      [createElementVNode(
        "div",
        _hoisted_5,
        [(openBlock(true), createElementBlock(
          Fragment,
          null,
          renderList(_ctx.state.data, function(calendarDays, idx) {
            return openBlock(), createElementBlock("div", {
              class: "grid grid-cols-7",
              key: idx,
              style: {
                "width": "33.33%"
              }
            }, [(openBlock(true), createElementBlock(
              Fragment,
              null,
              renderList(calendarDays, function(calendarDay) {
                var _ctx$m, _ctx$m2;
                return openBlock(), createElementBlock(
                  "div",
                  {
                    key: calendarDay.dateStr,
                    style: normalizeStyle(_ctx.state.minSize3),
                    class: normalizeClass(_ctx.m("text-sm", (calendarDay.isCurMon || _ctx.state.showWeek) && calendarDay.isWorkday ? _ctx.config.workdayColorClass || "text-color-icon-primary" : _ctx.config.holidayColorClass || "text-color-icon-placeholder", (_ctx$m = {}, _ctx$m[_ctx.config.disabledColorClass || "text-color-icon-disabled"] = calendarDay.disabled, _ctx$m), (_ctx$m2 = {}, _ctx$m2[_ctx.config.currentColorClass || "text-color-icon-inverse"] = calendarDay.type === "cur" && calendarDay.isCur, _ctx$m2)))
                  },
                  [createVNode(_component_calendar_item, {
                    text: "" + calendarDay.dateArr[2],
                    day: calendarDay,
                    config: _ctx.config,
                    onClickday: _ctx.handleClickDay
                  }, null, 8, ["text", "day", "config", "onClickday"])],
                  6
                  /* CLASS, STYLE */
                );
              }),
              128
              /* KEYED_FRAGMENT */
            ))]);
          }),
          128
          /* KEYED_FRAGMENT */
        ))],
        512
        /* NEED_PATCH */
      )],
      36
      /* STYLE, NEED_HYDRATION */
    ), createElementVNode("div", _hoisted_6, [createElementVNode(
      "div",
      {
        class: "w-6 h-full flex justify-center items-center",
        onClick: _cache[4] || (_cache[4] = function() {
          return _ctx.handleDraggerClick && _ctx.handleDraggerClick.apply(_ctx, arguments);
        }),
        onMousedown: _cache[5] || (_cache[5] = function() {
          return _ctx.handleDraggerMousedown && _ctx.handleDraggerMousedown.apply(_ctx, arguments);
        }),
        onTouchstart: _cache[6] || (_cache[6] = function() {
          return _ctx.handleDraggerTouchstart && _ctx.handleDraggerTouchstart.apply(_ctx, arguments);
        }),
        onTouchend: _cache[7] || (_cache[7] = function() {
          return _ctx.handleDraggerTouchend && _ctx.handleDraggerTouchend.apply(_ctx, arguments);
        }),
        onTouchmove: _cache[8] || (_cache[8] = withModifiers(function() {
          return _ctx.throttledHandleDraggerTouchmove && _ctx.throttledHandleDraggerTouchmove.apply(_ctx, arguments);
        }, ["prevent"]))
      },
      _hoisted_8,
      32
      /* NEED_HYDRATION */
    )])],
    512
    /* NEED_PATCH */
  ), createVNode(_component_tiny_cascader_select, mergeProps({
    modelValue: _ctx.state.cascaderCurrent,
    "onUpdate:modelValue": [_cache[9] || (_cache[9] = function($event) {
      return _ctx.state.cascaderCurrent = $event;
    }), _ctx.handleCascaderChange],
    "cycle-roll": "",
    options: _ctx.state.cascaderOptions,
    visible: _ctx.state.cascaderVisible,
    "onUpdate:visible": _ctx.setCascaderVisible
  }, _ctx.config.cascaderOp), null, 16, ["modelValue", "options", "visible", "onUpdate:modelValue", "onUpdate:visible"])]);
}
var mobileFirst = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  mobileFirst as default
};
