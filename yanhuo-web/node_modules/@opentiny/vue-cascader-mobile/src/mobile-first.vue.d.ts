declare const _default: import("@vue/runtime-core").DefineComponent<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            defaultNodeConfig: {
                lazy: boolean;
                load: null;
                isLeaf: string;
                afterLoad: null;
                currentNodeKey: null;
                checkStrictly: boolean;
                checkDescendants: null;
                defaultCheckedKeys: null;
                defaultExpandedKeys: null;
                autoExpandParent: null;
                defaultExpandAll: null;
                filterNodeMethod: null;
            };
        };
    };
    data: {
        type: ArrayConstructor;
        default: () => never[];
    };
    modelValue: (StringConstructor | ArrayConstructor | NumberConstructor)[];
    visible: {
        type: BooleanConstructor;
        default: boolean;
    };
    ellipsis: {
        type: BooleanConstructor;
        default: boolean;
    };
    valueField: {
        type: StringConstructor;
        default: string;
    };
    placeholder: {
        type: (StringConstructor | ArrayConstructor)[];
        default: any;
    };
    childrenField: {
        type: StringConstructor;
        default: string;
    };
    textField: {
        type: StringConstructor;
        default: string;
    };
    textField2: {
        type: StringConstructor;
        default: string;
    };
    textField3: {
        type: StringConstructor;
        default: string;
    };
    title: StringConstructor;
    textSplit: {
        type: StringConstructor;
        default: string;
    };
    showHeader: {
        type: BooleanConstructor;
        default: boolean;
    };
    showFooter: {
        type: BooleanConstructor;
        default: boolean;
    };
    multiple: BooleanConstructor;
    searchConfig: {
        type: ObjectConstructor;
        default: () => {
            options: never[];
            searchMethod: null;
            openSearchSlot: boolean;
        };
    };
    nodeConfig: {
        type: ObjectConstructor;
        default: () => {
            lazy: boolean;
            load: null;
            isLeaf: string;
            afterLoad: null;
            currentNodeKey: null;
            checkStrictly: boolean;
            checkDescendants: null;
            defaultCheckedKeys: null;
            defaultExpandedKeys: null;
            autoExpandParent: null;
            defaultExpandAll: null;
            filterNodeMethod: null;
        };
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, {
    t: (this: any, path: any, options?: any) => any;
    vm: any;
    f: (props: any, attrs?: {}) => {};
    a: (attrs: any, filters: any, include: any) => {};
    d: (props: any) => void;
    dp: (props: any) => void;
    gcls: (key: any) => any;
}, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, ("update:visible" | "click" | "update:text" | "search-click")[], "update:visible" | "click" | "update:text" | "search-click", import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            defaultNodeConfig: {
                lazy: boolean;
                load: null;
                isLeaf: string;
                afterLoad: null;
                currentNodeKey: null;
                checkStrictly: boolean;
                checkDescendants: null;
                defaultCheckedKeys: null;
                defaultExpandedKeys: null;
                autoExpandParent: null;
                defaultExpandAll: null;
                filterNodeMethod: null;
            };
        };
    };
    data: {
        type: ArrayConstructor;
        default: () => never[];
    };
    modelValue: (StringConstructor | ArrayConstructor | NumberConstructor)[];
    visible: {
        type: BooleanConstructor;
        default: boolean;
    };
    ellipsis: {
        type: BooleanConstructor;
        default: boolean;
    };
    valueField: {
        type: StringConstructor;
        default: string;
    };
    placeholder: {
        type: (StringConstructor | ArrayConstructor)[];
        default: any;
    };
    childrenField: {
        type: StringConstructor;
        default: string;
    };
    textField: {
        type: StringConstructor;
        default: string;
    };
    textField2: {
        type: StringConstructor;
        default: string;
    };
    textField3: {
        type: StringConstructor;
        default: string;
    };
    title: StringConstructor;
    textSplit: {
        type: StringConstructor;
        default: string;
    };
    showHeader: {
        type: BooleanConstructor;
        default: boolean;
    };
    showFooter: {
        type: BooleanConstructor;
        default: boolean;
    };
    multiple: BooleanConstructor;
    searchConfig: {
        type: ObjectConstructor;
        default: () => {
            options: never[];
            searchMethod: null;
            openSearchSlot: boolean;
        };
    };
    nodeConfig: {
        type: ObjectConstructor;
        default: () => {
            lazy: boolean;
            load: null;
            isLeaf: string;
            afterLoad: null;
            currentNodeKey: null;
            checkStrictly: boolean;
            checkDescendants: null;
            defaultCheckedKeys: null;
            defaultExpandedKeys: null;
            autoExpandParent: null;
            defaultExpandAll: null;
            filterNodeMethod: null;
        };
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>> & {
    onClick?: ((...args: any[]) => any) | undefined;
    "onUpdate:visible"?: ((...args: any[]) => any) | undefined;
    "onUpdate:text"?: ((...args: any[]) => any) | undefined;
    "onSearch-click"?: ((...args: any[]) => any) | undefined;
}, {
    data: unknown[];
    ellipsis: boolean;
    tiny_mode_root: boolean;
    _constants: Record<string, any>;
    textField: string;
    valueField: string;
    visible: boolean;
    showHeader: boolean;
    showFooter: boolean;
    placeholder: string | unknown[];
    multiple: boolean;
    textSplit: string;
    childrenField: string;
    searchConfig: Record<string, any>;
    nodeConfig: Record<string, any>;
    textField2: string;
    textField3: string;
}, {}>;
export default _default;
