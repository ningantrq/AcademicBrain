function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
import * as echarts from "echarts/core";
import { PieChart } from "echarts/charts";
import { LabelLayout } from "echarts/features";
import { CanvasRenderer } from "echarts/renderers";
import { ring } from "@opentiny/vue-renderless/chart-pie/index";
import Core from "@opentiny/vue-chart-core";
import { defineComponent, $prefix } from "@opentiny/vue-common";
echarts.use([PieChart, LabelLayout, CanvasRenderer]);
var Ring = defineComponent(_extends({}, Core, {
  name: $prefix + "ChartRing",
  data: function data() {
    this.chartHandler = ring;
    return {};
  }
}));
var version = "3.12.0";
Ring.install = function(Vue) {
  Vue.component(Ring.name, Ring);
};
Ring.version = version;
export {
  Ring as default
};
