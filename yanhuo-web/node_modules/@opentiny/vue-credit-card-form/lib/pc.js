import { renderless, api } from "@opentiny/vue-renderless/credit-card-form/vue";
import { defineComponent, directive, props, setup as _setup } from "@opentiny/vue-common";
import LetterOnly from "@opentiny/vue-renderless/common/deps/letter-only";
import NumberOnly from "@opentiny/vue-renderless/common/deps/number-only";
import CreditCard from "@opentiny/vue-credit-card";
import { resolveComponent, resolveDirective, openBlock, createElementBlock, createElementVNode, createVNode, normalizeClass, withDirectives, Fragment, renderList, toDisplayString, vModelSelect } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  components: {
    TinyCreditCard: CreditCard
  },
  directives: directive({
    LetterOnly,
    NumberOnly
  }),
  props: [].concat(props, ["formData", "backgroundImage"]),
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  class: "credit-card-form"
};
var _hoisted_2 = {
  class: "credit-card-list"
};
var _hoisted_3 = {
  class: "credit-card-form__inner"
};
var _hoisted_4 = {
  class: "credit-card-input"
};
var _hoisted_5 = /* @__PURE__ */ createElementVNode(
  "label",
  {
    for: "cardNumber",
    class: "credit-card-input__label"
  },
  "Card Number",
  -1
  /* HOISTED */
);
var _hoisted_6 = ["id", "value", "maxlength"];
var _hoisted_7 = ["disabled"];
var _hoisted_8 = {
  class: "credit-card-input"
};
var _hoisted_9 = /* @__PURE__ */ createElementVNode(
  "label",
  {
    for: "cardName",
    class: "credit-card-input__label"
  },
  "Card Holder",
  -1
  /* HOISTED */
);
var _hoisted_10 = ["id", "value"];
var _hoisted_11 = {
  class: "credit-card-form__row"
};
var _hoisted_12 = {
  class: "credit-card-form__col"
};
var _hoisted_13 = {
  class: "credit-card-form__group"
};
var _hoisted_14 = /* @__PURE__ */ createElementVNode(
  "label",
  {
    for: "cardMonth",
    class: "credit-card-input__label"
  },
  "Expiration Date",
  -1
  /* HOISTED */
);
var _hoisted_15 = ["id"];
var _hoisted_16 = /* @__PURE__ */ createElementVNode(
  "option",
  {
    value: "",
    disabled: "",
    selected: ""
  },
  "Month",
  -1
  /* HOISTED */
);
var _hoisted_17 = ["value", "disabled"];
var _hoisted_18 = ["id"];
var _hoisted_19 = /* @__PURE__ */ createElementVNode(
  "option",
  {
    value: "",
    disabled: "",
    selected: ""
  },
  "Year",
  -1
  /* HOISTED */
);
var _hoisted_20 = ["value"];
var _hoisted_21 = {
  class: "credit-card-form__col -cvv"
};
var _hoisted_22 = {
  class: "credit-card-input"
};
var _hoisted_23 = /* @__PURE__ */ createElementVNode(
  "label",
  {
    for: "cardCvv",
    class: "credit-card-input__label"
  },
  "CVV",
  -1
  /* HOISTED */
);
var _hoisted_24 = ["id", "value"];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_tiny_credit_card = resolveComponent("tiny-credit-card");
  var _directive_letter_only = resolveDirective("letter-only");
  var _directive_number_only = resolveDirective("number-only");
  return openBlock(), createElementBlock("div", _hoisted_1, [createElementVNode("div", _hoisted_2, [createVNode(_component_tiny_credit_card, {
    fields: _ctx.state.fields,
    labels: _ctx.formData,
    isCardNumberMasked: _ctx.state.isCardNumberMasked,
    backgroundImage: _ctx.backgroundImage
  }, null, 8, ["fields", "labels", "isCardNumberMasked", "backgroundImage"])]), createElementVNode("div", _hoisted_3, [createElementVNode("div", _hoisted_4, [_hoisted_5, createElementVNode("input", {
    type: "tel",
    id: _ctx.state.fields.cardNumber,
    onInput: _cache[0] || (_cache[0] = function() {
      return _ctx.changeNumber && _ctx.changeNumber.apply(_ctx, arguments);
    }),
    onFocus: _cache[1] || (_cache[1] = function() {
      return _ctx.focusCardNumber && _ctx.focusCardNumber.apply(_ctx, arguments);
    }),
    onBlur: _cache[2] || (_cache[2] = function() {
      return _ctx.blurCardNumber && _ctx.blurCardNumber.apply(_ctx, arguments);
    }),
    class: "credit-card-input__input",
    value: _ctx.state.formData.cardNumber,
    maxlength: _ctx.state.cardNumberMaxLength,
    "data-credit-card-field": "",
    autocomplete: "off"
  }, null, 40, _hoisted_6), createElementVNode("button", {
    type: "button",
    class: normalizeClass(["credit-card-input__eye", {
      "-active": !_ctx.state.isCardNumberMasked
    }]),
    title: "Show/Hide card number",
    tabindex: "-1",
    disabled: _ctx.formData.cardNumber === "",
    onClick: _cache[3] || (_cache[3] = function() {
      return _ctx.toggleMask && _ctx.toggleMask.apply(_ctx, arguments);
    })
  }, null, 10, _hoisted_7)]), createElementVNode("div", _hoisted_8, [_hoisted_9, withDirectives(createElementVNode("input", {
    type: "text",
    id: _ctx.state.fields.cardName,
    onInput: _cache[4] || (_cache[4] = function() {
      return _ctx.changeName && _ctx.changeName.apply(_ctx, arguments);
    }),
    class: "credit-card-input__input",
    value: _ctx.state.formData.cardName,
    "data-credit-card-field": "",
    autocomplete: "off"
  }, null, 40, _hoisted_10), [[_directive_letter_only]])]), createElementVNode("div", _hoisted_11, [createElementVNode("div", _hoisted_12, [createElementVNode("div", _hoisted_13, [_hoisted_14, withDirectives(createElementVNode("select", {
    class: "credit-card-input__input -select",
    id: _ctx.state.fields.cardMonth,
    "onUpdate:modelValue": _cache[5] || (_cache[5] = function($event) {
      return _ctx.state.cardMonth = $event;
    }),
    onChange: _cache[6] || (_cache[6] = function() {
      return _ctx.changeMonth && _ctx.changeMonth.apply(_ctx, arguments);
    }),
    "data-credit-card-field": ""
  }, [_hoisted_16, (openBlock(), createElementBlock(
    Fragment,
    null,
    renderList(12, function(n) {
      return createElementVNode("option", {
        value: n < 10 ? "0" + n : n,
        disabled: n < _ctx.state.minCardMonth,
        key: n
      }, toDisplayString(_ctx.generateMonthValue(n)), 9, _hoisted_17);
    }),
    64
    /* STABLE_FRAGMENT */
  ))], 40, _hoisted_15), [[vModelSelect, _ctx.state.cardMonth]]), withDirectives(createElementVNode("select", {
    class: "credit-card-input__input -select",
    id: _ctx.state.fields.cardYear,
    "onUpdate:modelValue": _cache[7] || (_cache[7] = function($event) {
      return _ctx.state.cardYear = $event;
    }),
    onChange: _cache[8] || (_cache[8] = function() {
      return _ctx.changeYear && _ctx.changeYear.apply(_ctx, arguments);
    }),
    "data-credit-card-field": ""
  }, [_hoisted_19, (openBlock(), createElementBlock(
    Fragment,
    null,
    renderList(12, function(n, $index) {
      return createElementVNode("option", {
        value: $index + _ctx.state.minCardYear,
        key: n
      }, toDisplayString($index + _ctx.state.minCardYear), 9, _hoisted_20);
    }),
    64
    /* STABLE_FRAGMENT */
  ))], 40, _hoisted_18), [[vModelSelect, _ctx.state.cardYear]])])]), createElementVNode("div", _hoisted_21, [createElementVNode("div", _hoisted_22, [_hoisted_23, withDirectives(createElementVNode("input", {
    type: "tel",
    class: "credit-card-input__input",
    id: _ctx.state.fields.cardCvv,
    maxlength: "4",
    value: _ctx.state.formData.cardCvv,
    onInput: _cache[9] || (_cache[9] = function() {
      return _ctx.changeCvv && _ctx.changeCvv.apply(_ctx, arguments);
    }),
    "data-credit-card-field": "",
    autocomplete: "off"
  }, null, 40, _hoisted_24), [[_directive_number_only]])])])]), createElementVNode(
    "button",
    {
      type: "button",
      class: "credit-card-form__button",
      onClick: _cache[10] || (_cache[10] = function() {
        return _ctx.handleSubmit && _ctx.handleSubmit.apply(_ctx, arguments);
      })
    },
    toDisplayString(_ctx.t("ui.creditCardForm.submit")),
    1
    /* TEXT */
  )])]);
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  pc as default
};
