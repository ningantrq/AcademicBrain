function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
import Picker from "@opentiny/vue-picker";
import { $props } from "@opentiny/vue-common";
import { extend } from "@opentiny/vue-renderless/common/object";
var DatePicker = extend(true, {
  props: _extends({}, $props, {
    _constants: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    componentName: {
      type: String,
      default: "DatePicker"
    }
  })
}, Picker);
export {
  DatePicker as default
};
