/**
 * Copyright (c) 2022 - present TinyVue Authors.
 * Copyright (c) 2022 - present Huawei Cloud Computing Technologies Co., Ltd.
 *
 * Use of this source code is governed by an MIT-style license.
 *
 * THE OPEN SOURCE SOFTWARE IN THIS PRODUCT IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL,
 * BUT WITHOUT ANY WARRANTY, WITHOUT EVEN THE IMPLIED WARRANTY OF MERCHANTABILITY OR FITNESS FOR
 * A PARTICULAR PURPOSE. SEE THE APPLICABLE LICENSES FOR MORE DETAILS.
 *
 */
export declare const $constants: {
    DIALOG_SLIDER_RIGHT: string;
    DIALOG_FADE: string;
    SELECT_DROPDOWN: string;
    DROPDOWN_MENU: string;
    DIALOG_BOX_CLASS: string;
    PC_SCROLL_LOCK_CLASS: string;
    MOBILE_SCROLL_LOCK_CLASS: string;
    Mode: string;
    scrollLockClass(mode: any): string;
};
export declare const dialogBoxProps: {
    _constants: {
        type: ObjectConstructor;
        default: () => {
            DIALOG_SLIDER_RIGHT: string;
            DIALOG_FADE: string;
            SELECT_DROPDOWN: string;
            DROPDOWN_MENU: string;
            DIALOG_BOX_CLASS: string;
            PC_SCROLL_LOCK_CLASS: string;
            MOBILE_SCROLL_LOCK_CLASS: string;
            Mode: string;
            scrollLockClass(mode: any): string;
        };
    };
    appendToBody: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    beforeClose: FunctionConstructor;
    center: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    closeOnClickModal: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    closeOnPressEscape: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    destroyOnClose: {
        Boolean: BooleanConstructor;
        default: () => boolean;
    };
    dialogClass: {
        type: StringConstructor;
        default: () => string;
    };
    draggable: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    fullscreen: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    isFormReset: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    lockScroll: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    modal: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    modalAppendToBody: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    resize: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    rightSlide: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    showClose: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    showHeader: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    title: {
        type: StringConstructor;
        default: () => string;
    };
    top: StringConstructor;
    visible: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    width: {
        type: StringConstructor;
        default: () => string;
    };
    maxHeight: {
        type: StringConstructor;
        default: () => string;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
};
declare const _default: import("@vue/runtime-core").DefineComponent<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            DIALOG_SLIDER_RIGHT: string;
            DIALOG_FADE: string;
            SELECT_DROPDOWN: string;
            DROPDOWN_MENU: string;
            DIALOG_BOX_CLASS: string;
            PC_SCROLL_LOCK_CLASS: string;
            MOBILE_SCROLL_LOCK_CLASS: string;
            Mode: string;
            scrollLockClass(mode: any): string;
        };
    };
    appendToBody: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    beforeClose: FunctionConstructor;
    center: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    closeOnClickModal: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    closeOnPressEscape: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    destroyOnClose: {
        Boolean: BooleanConstructor;
        default: () => boolean;
    };
    dialogClass: {
        type: StringConstructor;
        default: () => string;
    };
    draggable: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    fullscreen: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    isFormReset: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    lockScroll: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    modal: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    modalAppendToBody: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    resize: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    rightSlide: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    showClose: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    showHeader: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    title: {
        type: StringConstructor;
        default: () => string;
    };
    top: StringConstructor;
    visible: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    width: {
        type: StringConstructor;
        default: () => string;
    };
    maxHeight: {
        type: StringConstructor;
        default: () => string;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    _constants: {
        type: ObjectConstructor;
        default: () => {
            DIALOG_SLIDER_RIGHT: string;
            DIALOG_FADE: string;
            SELECT_DROPDOWN: string;
            DROPDOWN_MENU: string;
            DIALOG_BOX_CLASS: string;
            PC_SCROLL_LOCK_CLASS: string;
            MOBILE_SCROLL_LOCK_CLASS: string;
            Mode: string;
            scrollLockClass(mode: any): string;
        };
    };
    appendToBody: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    beforeClose: FunctionConstructor;
    center: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    closeOnClickModal: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    closeOnPressEscape: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    destroyOnClose: {
        Boolean: BooleanConstructor;
        default: () => boolean;
    };
    dialogClass: {
        type: StringConstructor;
        default: () => string;
    };
    draggable: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    fullscreen: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    isFormReset: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    lockScroll: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    modal: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    modalAppendToBody: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    resize: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    rightSlide: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    showClose: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    showHeader: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    title: {
        type: StringConstructor;
        default: () => string;
    };
    top: StringConstructor;
    visible: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    width: {
        type: StringConstructor;
        default: () => string;
    };
    maxHeight: {
        type: StringConstructor;
        default: () => string;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    title: string;
    center: boolean;
    tiny_mode_root: boolean;
    _constants: Record<string, any>;
    width: string;
    maxHeight: string;
    appendToBody: boolean;
    visible: boolean;
    showHeader: boolean;
    resize: boolean;
    fullscreen: boolean;
    showClose: boolean;
    lockScroll: boolean;
    closeOnClickModal: boolean;
    closeOnPressEscape: boolean;
    destroyOnClose: boolean;
    dialogClass: string;
    draggable: boolean;
    isFormReset: boolean;
    modal: boolean;
    modalAppendToBody: boolean;
    rightSlide: boolean;
}, {}>;
export default _default;
