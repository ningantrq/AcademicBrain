import { renderless, api } from "@opentiny/vue-renderless/drawer/vue";
import { props, setup as _setup } from "@opentiny/vue-common";
import { IconClose } from "@opentiny/vue-icon";
import Button from "@opentiny/vue-button";
import { resolveComponent, withDirectives, openBlock, createElementBlock, normalizeClass, createCommentVNode, createElementVNode, normalizeStyle, renderSlot, toDisplayString, createVNode, withCtx, createTextVNode, vShow } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = {
  components: {
    TinyButton: Button,
    IconClose: IconClose()
  },
  props: [].concat(props, ["visible", "title", "showHeader", "showFooter", "customClass", "placement", "width", "mask", "dragable", "maskClosable", "lockScroll", "flex"]),
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
};
var _hoisted_1 = {
  "data-tag": "tiny-drawer",
  class: "text-sm"
};
var _hoisted_2 = {
  class: /* @__PURE__ */ normalizeClass(["flex-auto flex-col flex max-h-full overflow-hidden"])
};
var _hoisted_3 = {
  key: 0,
  "data-tag": "drawer-header",
  ref: "header",
  class: "flex-none flex leading-6 p-4 text-base items-center"
};
var _hoisted_4 = {
  key: 0,
  class: "max-w-[80%] pr-4 text-left truncate"
};
var _hoisted_5 = {
  class: "flex-1 flex items-center justify-end"
};
var _hoisted_6 = {
  key: 1,
  "data-tag": "drawer-footer",
  ref: "footer",
  class: "px-4 py-3"
};
var _hoisted_7 = {
  class: "flex-1 text-right"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_IconClose = resolveComponent("IconClose");
  var _component_tiny_button = resolveComponent("tiny-button");
  return withDirectives((openBlock(), createElementBlock(
    "div",
    _hoisted_1,
    [$props.mask ? (openBlock(), createElementBlock(
      "div",
      {
        key: 0,
        ref: "mask",
        class: normalizeClass(_ctx.m("fixed z-50 left-0 right-0 top-0 bottom-0 w-full h-full transition-opacity ease-linear duration-200", {
          "bg-color-bg-7": _ctx.state.toggle
        })),
        onClick: _cache[0] || (_cache[0] = function($event) {
          return $props.maskClosable && _ctx.close();
        })
      },
      null,
      2
      /* CLASS */
    )) : createCommentVNode("v-if", true), createElementVNode(
      "div",
      {
        "data-tag": "tiny-drawer-main",
        ref: "drawerBox",
        class: normalizeClass(_ctx.m("fixed w-full max-w-full flex flex-col bg-color-bg-1 z-50 shadow-sm border-color-border-separator", {
          "transition-all ease-linear duration-200": !_ctx.state.dragEvent.isDrag
        }, {
          "h-full": ["left", "right"].includes($props.placement)
        }, {
          "max-h-full": ["top", "bottom"].includes($props.placement)
        }, {
          "left-0 bottom-0 translate-y-full border-t-0.5": $props.placement === "bottom"
        }, {
          "left-0 top-0 -translate-y-full border-b-0.5": $props.placement === "top"
        }, {
          "translate-y-0": ["top", "bottom"].includes($props.placement) && _ctx.state.toggle
        }, {
          "left-0 top-0 -translate-x-full border-r-0.5": $props.placement === "left"
        }, {
          "right-0 top-0 translate-x-full border-l-0.5": $props.placement === "right"
        }, {
          "translate-x-0": ["left", "right"].includes($props.placement) && _ctx.state.toggle
        }, $props.customClass)),
        style: normalizeStyle({
          width: ["left", "right"].includes($props.placement) ? _ctx.state.computedWidth : null
        })
      },
      [$props.dragable ? (openBlock(), createElementBlock(
        "div",
        {
          key: 0,
          "data-tag": "drawer-drag-bar",
          ref: "dragBar",
          class: normalizeClass(["h-full absolute top-0 w-2 cursor-e-resize", $props.placement === "left" ? "-right-1" : "-left-1"])
        },
        null,
        2
        /* CLASS */
      )) : createCommentVNode("v-if", true), createElementVNode("div", _hoisted_2, [$props.showHeader ? (openBlock(), createElementBlock(
        "div",
        _hoisted_3,
        [renderSlot(_ctx.$slots, "header", {}, function() {
          return [$props.title ? (openBlock(), createElementBlock(
            "div",
            _hoisted_4,
            toDisplayString($props.title),
            1
            /* TEXT */
          )) : createCommentVNode("v-if", true), createElementVNode("div", _hoisted_5, [renderSlot(_ctx.$slots, "header-right", {}, function() {
            return [createVNode(_component_IconClose, {
              "custom-class": "h-5 w-5 cursor-pointer",
              onClick: _ctx.close
            }, null, 8, ["onClick"])];
          })])];
        })],
        512
        /* NEED_PATCH */
      )) : createCommentVNode("v-if", true), createElementVNode(
        "div",
        {
          "data-tag": "drawer-body",
          ref: "body",
          class: normalizeClass(["flex-auto overflow-auto", {
            "flex flex-col": $props.flex
          }])
        },
        [renderSlot(_ctx.$slots, "default")],
        2
        /* CLASS */
      ), $props.showFooter ? (openBlock(), createElementBlock(
        "div",
        _hoisted_6,
        [createElementVNode("div", _hoisted_7, [renderSlot(_ctx.$slots, "footer", {}, function() {
          return [createVNode(_component_tiny_button, {
            tiny_mode: "mobile-first",
            onClick: _ctx.close
          }, {
            default: withCtx(function() {
              return [createTextVNode(
                toDisplayString(_ctx.t("ui.button.cancel")),
                1
                /* TEXT */
              )];
            }),
            _: 1
            /* STABLE */
          }, 8, ["onClick"]), createVNode(_component_tiny_button, {
            tiny_mode: "mobile-first",
            class: "ml-2",
            type: "primary",
            onClick: _ctx.confirm
          }, {
            default: withCtx(function() {
              return [createTextVNode(
                toDisplayString(_ctx.t("ui.button.confirm")),
                1
                /* TEXT */
              )];
            }),
            _: 1
            /* STABLE */
          }, 8, ["onClick"])];
        })])],
        512
        /* NEED_PATCH */
      )) : createCommentVNode("v-if", true)])],
      6
      /* CLASS, STYLE */
    )],
    512
    /* NEED_PATCH */
  )), [[vShow, $props.visible]]);
}
var mobileFirst = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  mobileFirst as default
};
