import type { IDropdownItemApi } from '@opentiny/vue-renderless/types/dropdown-item.type';
declare const _default: import("@vue/runtime-core").DefineComponent<Readonly<{
    type?: any;
    label?: any;
    title?: any;
    selected?: any;
    disabled?: any;
    tiny_mode?: any;
    tiny_mode_root?: any;
    tiny_template?: any;
    tiny_renderless?: any;
    _constants?: any;
    tiny_theme?: any;
    tiny_chart_theme?: any;
    multiStage?: any;
    options?: any;
    textField?: any;
    icon?: any;
    divided?: any;
    itemData?: any;
    titleClass?: any;
    selectedField?: any;
    currentIndex?: any;
    appendToBody?: any;
    tip?: any;
    tipPosition?: any;
}>, IDropdownItemApi, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, "item-click"[], "item-click", import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<Readonly<{
    type?: any;
    label?: any;
    title?: any;
    selected?: any;
    disabled?: any;
    tiny_mode?: any;
    tiny_mode_root?: any;
    tiny_template?: any;
    tiny_renderless?: any;
    _constants?: any;
    tiny_theme?: any;
    tiny_chart_theme?: any;
    multiStage?: any;
    options?: any;
    textField?: any;
    icon?: any;
    divided?: any;
    itemData?: any;
    titleClass?: any;
    selectedField?: any;
    currentIndex?: any;
    appendToBody?: any;
    tip?: any;
    tipPosition?: any;
}>>> & {
    "onItem-click"?: ((...args: any[]) => any) | undefined;
}, {
    readonly type?: any;
    readonly label?: any;
    readonly title?: any;
    readonly selected?: any;
    readonly disabled?: any;
    readonly tiny_mode?: any;
    readonly tiny_mode_root?: any;
    readonly tiny_template?: any;
    readonly tiny_renderless?: any;
    readonly _constants?: any;
    readonly tiny_theme?: any;
    readonly tiny_chart_theme?: any;
    readonly multiStage?: any;
    readonly options?: any;
    readonly textField?: any;
    readonly icon?: any;
    readonly divided?: any;
    readonly itemData?: any;
    readonly titleClass?: any;
    readonly selectedField?: any;
    readonly currentIndex?: any;
    readonly appendToBody?: any;
    readonly tip?: any;
    readonly tipPosition?: any;
}, {}>;
export default _default;
