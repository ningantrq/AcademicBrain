import { renderless, api } from "@opentiny/vue-renderless/dropdown-menu/vue";
import { defineComponent, props, directive, setup as _setup } from "@opentiny/vue-common";
import { iconUp, iconDown, iconUnfilter, iconSort, iconDeltaDown, iconDeltaUp } from "@opentiny/vue-icon";
import Clickoutside from "@opentiny/vue-renderless/common/deps/clickoutside";
import "@opentiny/vue-theme-mobile/dropdown-menu/index.css";
import { resolveComponent, resolveDirective, openBlock, createElementBlock, createElementVNode, Fragment, renderList, withDirectives, normalizeClass, normalizeStyle, toDisplayString, createVNode, createBlock, resolveDynamicComponent, renderSlot } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  props: [].concat(props, ["activeColor", "closeOnClickOutside", "closeOnClickOverlay", "direction", "duration", "overlay", "zIndex"]),
  components: {
    IconUp: iconUp(),
    IconDown: iconDown(),
    IconUnfilter: iconUnfilter(),
    IconSort: iconSort(),
    IconDeltaDown: iconDeltaDown(),
    IconDeltaUp: iconDeltaUp()
  },
  directives: directive({
    Clickoutside
  }),
  emits: ["open", "created"],
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  ref: "menu",
  class: "tiny-mobile-dropdown-menu"
};
var _hoisted_2 = {
  class: "tiny-mobile-dropdown-menu__bar tiny-mobile-dropdown-menu__bar--opened"
};
var _hoisted_3 = ["tabindex", "onClick"];
var _hoisted_4 = {
  class: "tiny-mobile-dropdown-menu__title-wrap"
};
var _hoisted_5 = {
  key: 0
};
var _hoisted_6 = {
  class: "tiny-mobile-dropdown-menu__title-text"
};
var _hoisted_7 = {
  key: 0,
  class: "tiny-mobile-dropdown-menu__title-icon"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_icon_delta_up = resolveComponent("icon-delta-up");
  var _component_icon_delta_down = resolveComponent("icon-delta-down");
  var _directive_clickoutside = resolveDirective("clickoutside");
  return openBlock(), createElementBlock(
    "div",
    _hoisted_1,
    [createElementVNode("div", _hoisted_2, [(openBlock(true), createElementBlock(
      Fragment,
      null,
      renderList(_ctx.state.children, function(item, index) {
        return withDirectives((openBlock(), createElementBlock("div", {
          key: index,
          role: "button",
          tabindex: item.disabled ? -1 : 0,
          class: normalizeClass(["tiny-mobile-dropdown-menu__item", [item.disabled ? "is-disabled" : "", item.titleClass]]),
          onClick: function onClick($event) {
            return _ctx.toggleItem(index, item);
          }
        }, [createElementVNode(
          "div",
          {
            class: normalizeClass(["tiny-mobile-dropdown-menu__title", {
              "is-active": item.state.showPopup,
              "is-down": item.state.showPopup === (_ctx.direction === "down")
            }]),
            style: normalizeStyle({
              color: item.state.showPopup ? _ctx.activeColor : ""
            })
          },
          [createElementVNode("div", _hoisted_4, [!_ctx.slots.title ? (openBlock(), createElementBlock("span", _hoisted_5, [createElementVNode(
            "span",
            _hoisted_6,
            toDisplayString(item.state.displayTitle),
            1
            /* TEXT */
          ), item.type === "sort" ? (openBlock(), createElementBlock("span", _hoisted_7, [createVNode(_component_icon_delta_up, {
            class: "up",
            fill: item.state.sort === "asc" ? _ctx.activeColor ? _ctx.activeColor : "#f36f64" : "#ccc"
          }, null, 8, ["fill"]), createVNode(_component_icon_delta_down, {
            class: "down",
            fill: item.state.sort === "desc" ? _ctx.activeColor ? _ctx.activeColor : "#f36f64" : "#ccc"
          }, null, 8, ["fill"])])) : (openBlock(), createBlock(resolveDynamicComponent(item.type === "filter" ? "IconUnfilter" : item.type === "selection" && item.state.showPopup ? "IconUp" : "IconDown"), {
            key: 1,
            fill: item.state.showPopup ? _ctx.activeColor ? _ctx.activeColor : "#f36f64" : "#ccc",
            class: normalizeClass([item.type === "filter" ? "filter-icon" : ""])
          }, null, 8, ["fill", "class"]))])) : renderSlot(_ctx.$slots, "title", {
            key: 1
          })])],
          6
          /* CLASS, STYLE */
        )], 10, _hoisted_3)), [[_directive_clickoutside, _ctx.clickOutside]]);
      }),
      128
      /* KEYED_FRAGMENT */
    ))]), renderSlot(_ctx.$slots, "default")],
    512
    /* NEED_PATCH */
  );
}
var mobile = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  mobile as default
};
