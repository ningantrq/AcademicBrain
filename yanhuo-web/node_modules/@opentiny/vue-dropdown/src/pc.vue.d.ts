declare const _default: import("@vue/runtime-core").DefineComponent<{
    type: StringConstructor;
    trigger: {
        type: StringConstructor;
        default: string;
    };
    size: {
        type: StringConstructor;
        default: string;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    splitButton: BooleanConstructor;
    showTimeout: {
        type: NumberConstructor;
        default: number;
    };
    hideTimeout: {
        type: NumberConstructor;
        default: number;
    };
    hideOnClick: {
        type: BooleanConstructor;
        default: boolean;
    };
    tabindex: {
        type: NumberConstructor;
        default: number;
    };
    border: {
        type: BooleanConstructor;
        default: boolean;
    };
    round: {
        type: BooleanConstructor;
        default: boolean;
    };
    showIcon: {
        type: BooleanConstructor;
        default: boolean;
    };
    menuOptions: {
        type: ObjectConstructor;
        default: () => {
            options: never[];
            textField: string;
            popperClass: string;
            placement: string;
        };
    };
    title: {
        type: StringConstructor;
        default: string;
    };
    inheritWidth: {
        type: BooleanConstructor;
        default: boolean;
    };
    suffixIcon: ObjectConstructor;
}, {
    t: (this: any, path: any, options?: any) => any;
    vm: any;
    f: (props: any, attrs?: {}) => {};
    a: (attrs: any, filters: any, include: any) => {};
    d: (props: any) => void;
    dp: (props: any) => void;
    gcls: (key: any) => any;
}, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, ("item-click" | "visible-change" | "handle-click" | "menu-item-click" | "button-click")[], "item-click" | "visible-change" | "handle-click" | "menu-item-click" | "button-click", import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    type: StringConstructor;
    trigger: {
        type: StringConstructor;
        default: string;
    };
    size: {
        type: StringConstructor;
        default: string;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    splitButton: BooleanConstructor;
    showTimeout: {
        type: NumberConstructor;
        default: number;
    };
    hideTimeout: {
        type: NumberConstructor;
        default: number;
    };
    hideOnClick: {
        type: BooleanConstructor;
        default: boolean;
    };
    tabindex: {
        type: NumberConstructor;
        default: number;
    };
    border: {
        type: BooleanConstructor;
        default: boolean;
    };
    round: {
        type: BooleanConstructor;
        default: boolean;
    };
    showIcon: {
        type: BooleanConstructor;
        default: boolean;
    };
    menuOptions: {
        type: ObjectConstructor;
        default: () => {
            options: never[];
            textField: string;
            popperClass: string;
            placement: string;
        };
    };
    title: {
        type: StringConstructor;
        default: string;
    };
    inheritWidth: {
        type: BooleanConstructor;
        default: boolean;
    };
    suffixIcon: ObjectConstructor;
}>> & {
    "onItem-click"?: ((...args: any[]) => any) | undefined;
    "onVisible-change"?: ((...args: any[]) => any) | undefined;
    "onMenu-item-click"?: ((...args: any[]) => any) | undefined;
    "onButton-click"?: ((...args: any[]) => any) | undefined;
    "onHandle-click"?: ((...args: any[]) => any) | undefined;
}, {
    title: string;
    disabled: boolean;
    trigger: string;
    size: string;
    splitButton: boolean;
    showTimeout: number;
    hideTimeout: number;
    hideOnClick: boolean;
    tabindex: number;
    border: boolean;
    round: boolean;
    showIcon: boolean;
    menuOptions: Record<string, any>;
    inheritWidth: boolean;
}, {}>;
export default _default;
