import { renderless, api } from "@opentiny/vue-renderless/exception/vue";
import { defineComponent, $prefix, setup as _setup } from "@opentiny/vue-common";
import Button from "@opentiny/vue-button";
import { resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, renderSlot, toDisplayString, createCommentVNode, createVNode, withCtx, createTextVNode } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = /* @__PURE__ */ defineComponent({
  name: $prefix + "Exception",
  components: {
    TinyButton: Button
  },
  props: {
    type: {
      type: String,
      default: "nodata"
    },
    message: String,
    subMessage: String,
    exceptionClass: String,
    buttonText: String,
    imageUrl: String
  },
  setup: function setup(props, context) {
    return _setup({
      props,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  class: "tiny-mobile-exception__content"
};
var _hoisted_2 = ["src"];
var _hoisted_3 = {
  class: "tiny-mobile-exception__content-message"
};
var _hoisted_4 = {
  class: "main-message"
};
var _hoisted_5 = {
  key: 0,
  class: "sub-message"
};
var _hoisted_6 = {
  class: "tiny-mobile-exception__footer"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_tiny_button = resolveComponent("tiny-button");
  return openBlock(), createElementBlock(
    "div",
    {
      class: normalizeClass(["tiny-mobile-exception", _ctx.exceptionClass])
    },
    [createElementVNode("div", _hoisted_1, [_ctx.imageUrl ? (openBlock(), createElementBlock("img", {
      key: 0,
      src: _ctx.imageUrl,
      class: "tiny-mobile-exception__image"
    }, null, 8, _hoisted_2)) : (openBlock(), createElementBlock(
      "div",
      {
        key: 1,
        class: normalizeClass(["tiny-mobile-exception__content-view", ["tiny-mobile-exception__content-" + _ctx.type]])
      },
      null,
      2
      /* CLASS */
    )), renderSlot(_ctx.$slots, "content", {}, function() {
      return [createElementVNode("div", _hoisted_3, [createElementVNode(
        "div",
        _hoisted_4,
        toDisplayString(_ctx.state.message),
        1
        /* TEXT */
      ), _ctx.subMessage ? (openBlock(), createElementBlock(
        "div",
        _hoisted_5,
        toDisplayString(_ctx.subMessage),
        1
        /* TEXT */
      )) : createCommentVNode("v-if", true), _ctx.type === "nodata" ? renderSlot(_ctx.$slots, "default", {
        key: 1
      }, function() {
        return [createVNode(_component_tiny_button, {
          onClick: _ctx.create,
          type: "primary",
          size: "medium",
          round: ""
        }, {
          default: withCtx(function() {
            return [createTextVNode(
              toDisplayString(_ctx.buttonText ? _ctx.buttonText : _ctx.t("ui.exception.create")),
              1
              /* TEXT */
            )];
          }),
          _: 1
          /* STABLE */
        }, 8, ["onClick"])];
      }) : createCommentVNode("v-if", true)])];
    })]), createElementVNode("div", _hoisted_6, [renderSlot(_ctx.$slots, "footer")])],
    2
    /* CLASS */
  );
}
var mobile = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  mobile as default
};
