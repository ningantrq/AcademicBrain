import { GridAdapter } from "@opentiny/vue-grid";
function useAntd() {
  function handleClearEvent(params, event) {
    if (!params) {
      return;
    }
    var getTarget = params.$table.getEventTargetNode;
    var bodyEl = document.body;
    if (getTarget(event, bodyEl, "ant-select-dropdown").flag || getTarget(event, bodyEl, "ant-cascader-menus").flag || getTarget(event, bodyEl, "ant-calendar-picker-container").flag || getTarget(event, bodyEl, "ant-time-picker-panel").flag) {
      return false;
    }
  }
  GridAdapter.interceptor.add("event.clear_actived", handleClearEvent);
  GridAdapter.interceptor.add("event.clear_filter", handleClearEvent);
}
function useiView() {
  function handleClearEvent(params, event) {
    if (!params) {
      return;
    }
    var getTarget = params.$table.getEventTargetNode;
    var bodyEl = document.body;
    if (getTarget(event, bodyEl, "ivu-select-dropdown").flag) {
      return false;
    }
  }
  GridAdapter.interceptor.add("event.clear_actived", handleClearEvent);
  GridAdapter.interceptor.add("event.clear_filter", handleClearEvent);
}
function useElementUI() {
  function handleClearEvent(params, event) {
    if (!params) {
      return;
    }
    var getTarget = params.$table.getEventTargetNode;
    var bodyEl = document.body;
    if (getTarget(event, bodyEl, "el-autocomplete-suggestion").flag || getTarget(event, bodyEl, "el-select-dropdown").flag || getTarget(event, bodyEl, "el-cascader__dropdown").flag || getTarget(event, bodyEl, "el-cascader-menus").flag || getTarget(event, bodyEl, "el-picker-panel").flag) {
      return false;
    }
  }
  GridAdapter.interceptor.add("event.clear_actived", handleClearEvent);
  GridAdapter.interceptor.add("event.clear_filter", handleClearEvent);
}
var GridManager = {
  useAntd,
  useiView,
  useElementUI,
  Interceptor: GridAdapter
};
export {
  GridManager as default
};
