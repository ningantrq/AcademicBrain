declare const _default: import("@vue/runtime-core").DefineComponent<{
    local: {
        type: BooleanConstructor;
        default: boolean;
    };
    changeLang: FunctionConstructor;
    getLocale: FunctionConstructor;
    getDomain: FunctionConstructor;
    getCurrentLocale: FunctionConstructor;
    getChangeLocaleUrl: FunctionConstructor;
    fetchSsoUpdate: FunctionConstructor;
    popperClass: StringConstructor;
    popperAppendToBody: {
        type: BooleanConstructor;
        default: boolean;
    };
}, {
    t: (this: any, path: any, options?: any) => any;
    vm: any;
    f: (props: any, attrs?: {}) => {};
    a: (attrs: any, filters: any, include: any) => {};
    d: (props: any) => void;
    dp: (props: any) => void;
    gcls: (key: any) => any;
}, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    local: {
        type: BooleanConstructor;
        default: boolean;
    };
    changeLang: FunctionConstructor;
    getLocale: FunctionConstructor;
    getDomain: FunctionConstructor;
    getCurrentLocale: FunctionConstructor;
    getChangeLocaleUrl: FunctionConstructor;
    fetchSsoUpdate: FunctionConstructor;
    popperClass: StringConstructor;
    popperAppendToBody: {
        type: BooleanConstructor;
        default: boolean;
    };
}>>, {
    popperAppendToBody: boolean;
    local: boolean;
}, {}>;
export default _default;
