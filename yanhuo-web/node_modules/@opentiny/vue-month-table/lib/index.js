import { renderless, api } from "@opentiny/vue-renderless/month-table/vue";
import { defineComponent, $prefix, setup as _setup } from "@opentiny/vue-common";
import { isDate } from "@opentiny/vue-renderless/common/deps/date-util";
import { openBlock, createElementBlock, createElementVNode, Fragment, renderList, normalizeClass, toDisplayString } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

import "@opentiny/vue-theme/month-table/index.css";
var _sfc_main = defineComponent({
  name: $prefix + "MonthTable",
  emits: ["changerange", "pick"],
  props: {
    date: {},
    defaultValue: {
      validator: function validator(val) {
        return val === null || isDate(val) || Array.isArray(val) && val.every(isDate);
      }
    },
    disabledDate: {},
    maxDate: {},
    minDate: {},
    rangeState: {
      default: function _default() {
        return {
          endDate: null,
          selecting: false
        };
      }
    },
    selectionMode: {
      default: "month"
    },
    value: {}
  },
  setup: function setup(props, context) {
    return _setup({
      props,
      context,
      renderless,
      api,
      mono: true
    });
  }
});
var _hoisted_1 = ["textContent"];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock(
    "table",
    {
      class: "tiny-month-table",
      onMousemove: _cache[0] || (_cache[0] = function() {
        return _ctx.handleMouseMove && _ctx.handleMouseMove.apply(_ctx, arguments);
      }),
      onClick: _cache[1] || (_cache[1] = function() {
        return _ctx.handleMonthTableClick && _ctx.handleMonthTableClick.apply(_ctx, arguments);
      })
    },
    [createElementVNode("tbody", null, [(openBlock(true), createElementBlock(
      Fragment,
      null,
      renderList(_ctx.state.rows, function(row, key) {
        return openBlock(), createElementBlock("tr", {
          key
        }, [(openBlock(true), createElementBlock(
          Fragment,
          null,
          renderList(row, function(cell, key2) {
            return openBlock(), createElementBlock(
              "td",
              {
                class: normalizeClass(_ctx.getCellStyle(cell)),
                key: key2
              },
              [createElementVNode("div", null, [createElementVNode("a", {
                class: "cell",
                textContent: toDisplayString(_ctx.t("ui.datepicker.months." + _ctx.state.months[cell.text]))
              }, null, 8, _hoisted_1)])],
              2
              /* CLASS */
            );
          }),
          128
          /* KEYED_FRAGMENT */
        ))]);
      }),
      128
      /* KEYED_FRAGMENT */
    ))])],
    32
    /* NEED_HYDRATION */
  );
}
var MonthTable = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
var version = "3.13.0";
MonthTable.install = function(Vue) {
  Vue.component(MonthTable.name, MonthTable);
};
MonthTable.version = version;
export {
  MonthTable as default
};
