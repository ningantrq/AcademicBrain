import "../chunk-G2ADBYYC.js";
import { created, handleClick, confirm, reset, wheelChange, clickWheelItem, loadDefault } from "./index";
const api = [
  "state",
  "created",
  "handleClick",
  "confirm",
  "reset",
  "wheelChange",
  "clickWheelItem",
  "loadDefault"
];
const initState = (reactive) => {
  const state = reactive({
    dataSource: [],
    wheelData: [],
    headerIndex: -1,
    showWheel: false,
    labelLevelsInfo: [],
    labelsStyle: [],
    wheelIndex: [],
    wheelText: "",
    headerInfo: [],
    defaultSelectedIndexs: [],
    defaultSelectedArray: []
  });
  return state;
};
const initApi = ({ api: api2, props, state, emit, nextTick, refs }) => {
  Object.assign(api2, {
    state,
    created: created({ props, state, refs, nextTick }),
    handleClick: handleClick({ api: api2, props, state }),
    confirm: confirm({ state, emit }),
    reset: reset({ api: api2, props, state, emit }),
    wheelChange: wheelChange(state),
    clickWheelItem: clickWheelItem({ state, emit }),
    loadDefault: loadDefault({ props, state })
  });
};
const initWatch = ({ watch, props, state, refs, nextTick }) => {
  watch(
    () => props.dataSource,
    () => {
      api.created({ props, state, refs, nextTick });
    }
  );
  watch(
    () => props.defaultSelectedArray,
    () => {
      api.created({ props, state, refs, nextTick });
    }
  );
};
const renderless = (props, { onMounted, reactive, watch }, { emit, nextTick, refs }) => {
  const api2 = {};
  const state = initState(reactive);
  initApi({ api: api2, props, state, emit, nextTick, refs });
  initWatch({ watch, props, state, refs, nextTick });
  onMounted(() => {
    api2.created({ props, state, refs, nextTick });
  });
  return api2;
};
export {
  api,
  renderless
};
