import "../chunk-G2ADBYYC.js";
import { optionMethod, watchModelValue, watchVisible, confirm, updateVisible } from "./index";
const api = ["state", "confirm", "updateVisible"];
const renderless = (props, { reactive, watch }, { emit }) => {
  const api2 = {};
  const state = reactive({
    visible: false,
    dateArr: [],
    optionList: [
      { range: [0, 23], optionMethod },
      { range: [0, 59], optionMethod },
      { range: [0, 59], optionMethod }
    ]
  });
  Object.assign(api2, {
    state,
    watchModelValue: watchModelValue({ props, state }),
    watchVisible: watchVisible({ api: api2, state }),
    confirm: confirm({ emit, state }),
    updateVisible: updateVisible({ emit, state }),
    optionMethod
  });
  watch(() => props.visible, api2.watchVisible);
  watch(() => props.modelValue, api2.watchModelValue, { immediate: true });
  return api2;
};
export {
  api,
  renderless
};
