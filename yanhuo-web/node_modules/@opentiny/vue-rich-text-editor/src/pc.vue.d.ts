export declare const richTextEditorProps: {
    modelValue: {
        type: StringConstructor;
        default: string;
    };
    placeholder: {
        type: StringConstructor;
        default: string;
    };
    customToolBar: {
        type: ArrayConstructor;
        default: never[];
    };
    options: {
        type: ObjectConstructor;
        default: {};
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
};
declare const _default: import("@vue/runtime-core").DefineComponent<{
    modelValue: {
        type: StringConstructor;
        default: string;
    };
    placeholder: {
        type: StringConstructor;
        default: string;
    };
    customToolBar: {
        type: ArrayConstructor;
        default: never[];
    };
    options: {
        type: ObjectConstructor;
        default: {};
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, {
    t: (this: any, path: any, options?: any) => any;
    vm: any;
    f: (props: any, attrs?: {}) => {};
    a: (attrs: any, filters: any, include: any) => {};
    d: (props: any) => void;
    dp: (props: any) => void;
    gcls: (key: any) => any;
}, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, ("update" | "create" | "update:modelValue" | "blur" | "focus" | "destroy" | "beforeCreate" | "transaction" | "selectionUpdate")[], "update" | "create" | "update:modelValue" | "blur" | "focus" | "destroy" | "beforeCreate" | "transaction" | "selectionUpdate", import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    modelValue: {
        type: StringConstructor;
        default: string;
    };
    placeholder: {
        type: StringConstructor;
        default: string;
    };
    customToolBar: {
        type: ArrayConstructor;
        default: never[];
    };
    options: {
        type: ObjectConstructor;
        default: {};
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>> & {
    onFocus?: ((...args: any[]) => any) | undefined;
    onBlur?: ((...args: any[]) => any) | undefined;
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
    onUpdate?: ((...args: any[]) => any) | undefined;
    onCreate?: ((...args: any[]) => any) | undefined;
    onDestroy?: ((...args: any[]) => any) | undefined;
    onBeforeCreate?: ((...args: any[]) => any) | undefined;
    onTransaction?: ((...args: any[]) => any) | undefined;
    onSelectionUpdate?: ((...args: any[]) => any) | undefined;
}, {
    tiny_mode_root: boolean;
    modelValue: string;
    options: Record<string, any>;
    placeholder: string;
    customToolBar: unknown[];
}, {}>;
export default _default;
