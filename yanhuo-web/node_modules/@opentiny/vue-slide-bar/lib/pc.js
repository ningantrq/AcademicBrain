import { renderless, api } from "@opentiny/vue-renderless/slide-bar/vue";
import { defineComponent, props, setup as _setup } from "@opentiny/vue-common";
import { iconChevronLeft, iconChevronRight, iconRadio } from "@opentiny/vue-icon";
import { resolveComponent, openBlock, createElementBlock, withModifiers, createVNode, normalizeClass, createElementVNode, Transition, withCtx, createBlock, resolveDynamicComponent, normalizeStyle, Fragment, renderList, renderSlot, toDisplayString } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  components: {
    IconChevronLeft: iconChevronLeft(),
    IconChevronRight: iconChevronRight(),
    IconRadio: iconRadio()
  },
  props: [].concat(props, ["initBlocks", "wheelBlocks", "modelValue", "tag", "subTag"]),
  emits: ["before-click", "click"],
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  class: "tiny-slide-bar__content"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_icon_chevron_left = resolveComponent("icon-chevron-left");
  var _component_icon_radio = resolveComponent("icon-radio");
  var _component_icon_chevron_right = resolveComponent("icon-chevron-right");
  return openBlock(), createElementBlock(
    "div",
    {
      class: "tiny-slide-bar",
      onMousewheel: _cache[0] || (_cache[0] = withModifiers(function() {
        return _ctx.mouseEvent && _ctx.mouseEvent.apply(_ctx, arguments);
      }, ["prevent"])),
      ref: "wrapper"
    },
    [createVNode(_component_icon_chevron_left, {
      class: normalizeClass([[_ctx.state.showLeft ? "" : "tiny-disabled"], "tiny-svg-size icon-chevron-left"]),
      onClick: _ctx.leftClick
    }, null, 8, ["class", "onClick"]), createElementVNode("div", _hoisted_1, [createVNode(Transition, null, {
      default: withCtx(function() {
        return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.tag), {
          class: "tiny-slide-bar__list tiny-repeat rightAni-enter-active",
          style: normalizeStyle({
            width: _ctx.state.blockWrapper + "px"
          }),
          ref: "insider"
        }, {
          default: withCtx(function() {
            return [(openBlock(true), createElementBlock(
              Fragment,
              null,
              renderList(_ctx.modelValue, function(item, key) {
                return openBlock(), createBlock(resolveDynamicComponent(_ctx.subTag), {
                  key,
                  class: normalizeClass([[_ctx.state.currentIndex === key ? "tiny-slide-bar__select" : ""], "block"]),
                  style: normalizeStyle({
                    width: _ctx.state.blockWidth + "px",
                    "margin-left": key === 0 ? 0 : _ctx.state.blockMargin + "px"
                  }),
                  onClick: function onClick($event) {
                    return _ctx.blockClick({
                      item,
                      index: key
                    });
                  }
                }, {
                  default: withCtx(function() {
                    return [createElementVNode("ul", null, [createElementVNode("li", null, [renderSlot(_ctx.$slots, "default", {
                      slotData: item
                    }, function() {
                      return [createElementVNode(
                        "div",
                        null,
                        toDisplayString(item.title),
                        1
                        /* TEXT */
                      ), createElementVNode("div", null, [createVNode(_component_icon_radio, {
                        class: "tiny-svg-size"
                      })]), createElementVNode(
                        "div",
                        null,
                        toDisplayString(item.lang),
                        1
                        /* TEXT */
                      )];
                    })])])];
                  }),
                  _: 2
                  /* DYNAMIC */
                }, 1032, ["class", "style", "onClick"]);
              }),
              128
              /* KEYED_FRAGMENT */
            ))];
          }),
          _: 3
          /* FORWARDED */
        }, 8, ["style"]))];
      }),
      _: 3
      /* FORWARDED */
    })]), createVNode(_component_icon_chevron_right, {
      class: normalizeClass([[_ctx.state.showRight ? "tiny-disabled" : ""], "tiny-svg-size icon-chevron-right"]),
      onClick: _ctx.rightClick
    }, null, 8, ["class", "onClick"])],
    544
    /* NEED_HYDRATION, NEED_PATCH */
  );
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  pc as default
};
