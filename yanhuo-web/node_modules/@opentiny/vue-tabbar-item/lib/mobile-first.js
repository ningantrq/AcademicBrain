function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
import { defineComponent, $prefix, $props, setup as _setup } from "@opentiny/vue-common";
import { renderless, api } from "@opentiny/vue-renderless/tabbar-item/vue";
import Badge from "@opentiny/vue-badge";
import { resolveComponent, openBlock, createElementBlock, normalizeClass, normalizeStyle, createElementVNode, renderSlot, createBlock, withCtx, resolveDynamicComponent, createTextVNode, toDisplayString, createCommentVNode } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  name: $prefix + "TabbarItem",
  componentName: "TabbarItem",
  props: _extends({}, $props, {
    dot: Boolean,
    icon: Object,
    name: [Number, String],
    badge: [Number, String],
    text: String
  }),
  components: {
    TinyBadge: Badge
  },
  setup: function setup(props, context) {
    return _setup({
      props,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  "data-tag": "tiny-tabbar-item-icon",
  class: "relative mt-1 pointer-events-none w-6 h-6 [&_svg]:w-6 [&_svg]:h-6"
};
function _sfc_render(_ctx, _cache, $props2, $setup, $data, $options) {
  var _component_tiny_badge = resolveComponent("tiny-badge");
  return _ctx.state.showVm ? (openBlock(), createElementBlock(
    "div",
    {
      key: 0,
      "data-tag": "tiny-tabbar-item",
      class: normalizeClass(_ctx.m("flex flex-1 flex-col items-center justify-center cursor-pointer my-1 mx-0.5 [&:first-of-type]:ml-1 [&:last-of-type]:mr-1")),
      style: normalizeStyle({
        color: _ctx.state.renderColor
      }),
      onClick: _cache[0] || (_cache[0] = function() {
        return _ctx.onClick && _ctx.onClick.apply(_ctx, arguments);
      })
    },
    [createElementVNode("div", _hoisted_1, [renderSlot(_ctx.$slots, "icon", {
      active: _ctx.state.renderActive
    }, function() {
      return [_ctx.badge ? (openBlock(), createBlock(_component_tiny_badge, {
        key: 0,
        type: "icon",
        value: _ctx.badge
      }, {
        default: withCtx(function() {
          return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.icon), {
            class: normalizeClass({
              "fill-color-brand": _ctx.state.renderActive
            }),
            style: normalizeStyle({
              fill: _ctx.state.renderColor
            })
          }, null, 8, ["class", "style"]))];
        }),
        _: 1
        /* STABLE */
      }, 8, ["value"])) : _ctx.dot ? (openBlock(), createBlock(_component_tiny_badge, {
        key: 1,
        type: "icon",
        "is-dot": _ctx.dot
      }, {
        default: withCtx(function() {
          return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.icon), {
            class: normalizeClass({
              "fill-color-brand": _ctx.state.renderActive
            }),
            style: normalizeStyle({
              fill: _ctx.state.renderColor
            })
          }, null, 8, ["class", "style"]))];
        }),
        _: 1
        /* STABLE */
      }, 8, ["is-dot"])) : (openBlock(), createBlock(resolveDynamicComponent(_ctx.icon), {
        key: 2,
        class: normalizeClass({
          "fill-color-brand": _ctx.state.renderActive
        }),
        style: normalizeStyle({
          fill: _ctx.state.renderColor
        })
      }, null, 8, ["class", "style"]))];
    })]), createElementVNode(
      "div",
      {
        "data-tag": "tiny-tabbar-item-title",
        class: normalizeClass(["my-1 pointer-events-none overflow-hidden whitespace-nowrap text-ellipsis text-xs text-center leading-3", {
          "text-color-brand": _ctx.state.renderActive
        }]),
        style: normalizeStyle({
          color: _ctx.state.renderColor,
          width: _ctx.state.itemWidth
        })
      },
      [renderSlot(_ctx.$slots, "default", {}, function() {
        return [createTextVNode(
          toDisplayString(_ctx.text || _ctx.name),
          1
          /* TEXT */
        )];
      })],
      6
      /* CLASS, STYLE */
    )],
    6
    /* CLASS, STYLE */
  )) : createCommentVNode("v-if", true);
}
var mobileFirst = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  mobileFirst as default
};
