import { defineComponent, $prefix, props, setup as _setup } from "@opentiny/vue-common";
import { renderless, api } from "@opentiny/vue-renderless/tag-group/vue";
import { IconEllipsis } from "@opentiny/vue-icon";
import Popover from "@opentiny/vue-popover";
import Tag from "@opentiny/vue-tag";
import "@opentiny/vue-theme/tag-group/index.css";
import { resolveComponent, openBlock, createElementBlock, Fragment, renderList, createBlock, withCtx, createTextVNode, toDisplayString, createVNode, createElementVNode, createCommentVNode } from "vue";
function _createForOfIteratorHelperLoose_tiny(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray_tiny(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return { done: true };
      return { done: false, value: o[i++] };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray_tiny(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray_tiny(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray_tiny(o, minLen);
}
function _arrayLikeToArray_tiny(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _export_sfc = function _export_sfc2(sfc, props) {
  var target = sfc.__vccOpts || sfc;
  for (var _iterator = _createForOfIteratorHelperLoose_tiny(props), _step; !(_step = _iterator()).done; ) {
    var _step$value = _step.value, key = _step$value[0], val = _step$value[1];
    target[key] = val;
  }
  return target;
};

var _sfc_main = defineComponent({
  name: $prefix + "TagGroup",
  components: {
    TinyTag: Tag,
    TinyPopover: Popover,
    IconEllipsis: IconEllipsis()
  },
  props: [].concat(props, ["size", "data", "effect"]),
  emits: ["item-click"],
  setup: function setup(props2, context) {
    return _setup({
      props: props2,
      context,
      renderless,
      api
    });
  }
});
var _hoisted_1 = {
  ref: "tagGroup",
  class: "tiny-tag-group"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_tiny_tag = resolveComponent("tiny-tag");
  var _component_icon_ellipsis = resolveComponent("icon-ellipsis");
  var _component_tiny_popover = resolveComponent("tiny-popover");
  return openBlock(), createElementBlock(
    "div",
    _hoisted_1,
    [(openBlock(true), createElementBlock(
      Fragment,
      null,
      renderList(_ctx.data, function(item, i) {
        return openBlock(), createBlock(_component_tiny_tag, {
          key: item.name + i,
          size: _ctx.size,
          type: item.type,
          style: {
            "margin-right": "8px",
            "margin-bottom": "8px"
          },
          effect: _ctx.effect,
          onClick: function onClick($event) {
            return _ctx.handelItemClick(item, i, $event);
          }
        }, {
          default: withCtx(function() {
            return [createTextVNode(
              toDisplayString(item.name),
              1
              /* TEXT */
            )];
          }),
          _: 2
          /* DYNAMIC */
        }, 1032, ["size", "type", "effect", "onClick"]);
      }),
      128
      /* KEYED_FRAGMENT */
    )), _ctx.state.showMore ? (openBlock(), createBlock(_component_tiny_popover, {
      key: 0,
      placement: "top-start",
      trigger: "hover",
      width: "auto"
    }, {
      reference: withCtx(function() {
        return [createVNode(_component_tiny_tag, {
          ref: "more",
          size: _ctx.size,
          class: "tiny-tag-group_icon"
        }, {
          default: withCtx(function() {
            return [createVNode(_component_icon_ellipsis)];
          }),
          _: 1
          /* STABLE */
        }, 8, ["size"])];
      }),
      default: withCtx(function() {
        return [createElementVNode("div", null, [(openBlock(true), createElementBlock(
          Fragment,
          null,
          renderList(_ctx.state.hiddenTags, function(tag, i) {
            return openBlock(), createBlock(_component_tiny_tag, {
              key: tag.name + i,
              size: _ctx.size,
              type: tag.type,
              style: {
                "margin-right": "8px",
                "margin-bottom": "8px"
              },
              onClick: function onClick($event) {
                return _ctx.handelItemClick(tag, _ctx.data.length - _ctx.state.hiddenTags.length + i, $event);
              }
            }, {
              default: withCtx(function() {
                return [createTextVNode(
                  toDisplayString(tag.name),
                  1
                  /* TEXT */
                )];
              }),
              _: 2
              /* DYNAMIC */
            }, 1032, ["size", "type", "onClick"]);
          }),
          128
          /* KEYED_FRAGMENT */
        ))])];
      }),
      _: 1
      /* STABLE */
    })) : createCommentVNode("v-if", true)],
    512
    /* NEED_PATCH */
  );
}
var pc = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  pc as default
};
