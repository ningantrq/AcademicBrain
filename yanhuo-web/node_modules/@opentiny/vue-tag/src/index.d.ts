export declare const tagProps: {
    hit: BooleanConstructor;
    text: StringConstructor;
    type: StringConstructor;
    theme: StringConstructor;
    size: StringConstructor;
    color: StringConstructor;
    closable: BooleanConstructor;
    operable: BooleanConstructor;
    disabled: BooleanConstructor;
    selectable: BooleanConstructor;
    customClass: {
        type: StringConstructor;
        default: string;
    };
    effect: {
        type: StringConstructor;
        default: string;
        validator: (value: string) => boolean;
    };
    beforeDelete: FunctionConstructor;
    value: (StringConstructor | NumberConstructor)[];
    mini: {
        type: BooleanConstructor;
        default: boolean;
    };
    maxWidth: {
        type: (StringConstructor | NumberConstructor)[];
        default: null;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
};
declare const _default: import("@vue/runtime-core").DefineComponent<{
    hit: BooleanConstructor;
    text: StringConstructor;
    type: StringConstructor;
    theme: StringConstructor;
    size: StringConstructor;
    color: StringConstructor;
    closable: BooleanConstructor;
    operable: BooleanConstructor;
    disabled: BooleanConstructor;
    selectable: BooleanConstructor;
    customClass: {
        type: StringConstructor;
        default: string;
    };
    effect: {
        type: StringConstructor;
        default: string;
        validator: (value: string) => boolean;
    };
    beforeDelete: FunctionConstructor;
    value: (StringConstructor | NumberConstructor)[];
    mini: {
        type: BooleanConstructor;
        default: boolean;
    };
    maxWidth: {
        type: (StringConstructor | NumberConstructor)[];
        default: null;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    hit: BooleanConstructor;
    text: StringConstructor;
    type: StringConstructor;
    theme: StringConstructor;
    size: StringConstructor;
    color: StringConstructor;
    closable: BooleanConstructor;
    operable: BooleanConstructor;
    disabled: BooleanConstructor;
    selectable: BooleanConstructor;
    customClass: {
        type: StringConstructor;
        default: string;
    };
    effect: {
        type: StringConstructor;
        default: string;
        validator: (value: string) => boolean;
    };
    beforeDelete: FunctionConstructor;
    value: (StringConstructor | NumberConstructor)[];
    mini: {
        type: BooleanConstructor;
        default: boolean;
    };
    maxWidth: {
        type: (StringConstructor | NumberConstructor)[];
        default: null;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    disabled: boolean;
    tiny_mode_root: boolean;
    effect: string;
    mini: boolean;
    customClass: string;
    closable: boolean;
    maxWidth: string | number;
    hit: boolean;
    operable: boolean;
    selectable: boolean;
}, {}>;
export default _default;
