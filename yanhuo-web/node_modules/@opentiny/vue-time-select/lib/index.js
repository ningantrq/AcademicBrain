function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
import Picker from "@opentiny/vue-picker";
import { extend } from "@opentiny/vue-renderless/common/object";
import { $props, $prefix } from "@opentiny/vue-common";
import "@opentiny/vue-theme/time-select/index.css";
var version = "3.13.0";
var TimeSelect = extend(true, {
  props: {
    componentName: {
      type: String,
      default: "TimeSelect"
    }
  }
}, Picker, {
  props: _extends({}, $props, {
    type: {
      type: String,
      default: "time"
    }
  }),
  name: $prefix + "TimeSelect"
});
TimeSelect.install = function(Vue) {
  Vue.component(TimeSelect.name, TimeSelect);
};
TimeSelect.version = version;
export {
  TimeSelect as default
};
