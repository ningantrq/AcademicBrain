export declare const uploadListProps: {
    disabled: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    display: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    files: {
        type: ArrayConstructor;
        default: () => never[];
    };
    filesIcon: {
        type: ArrayConstructor;
        default: () => never[];
    };
    handlePreview: FunctionConstructor;
    isEdm: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    isFolder: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    listType: StringConstructor;
    openDownloadFile: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    srcList: {
        type: ArrayConstructor;
        default: () => never[];
    };
    isFolderTitle: {
        type: BooleanConstructor;
        default: boolean;
    };
    listOption: {
        type: ObjectConstructor;
        default: () => {
            showUpdate: boolean;
            showDel: boolean;
        };
    };
    maxNameLength: {
        type: NumberConstructor;
        default: number;
    };
    scale: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    showName: {
        type: BooleanConstructor;
        default: boolean;
    };
    types: ArrayConstructor;
    displayOnly: {
        type: BooleanConstructor;
        default: boolean;
    };
    handleDownloadFile: FunctionConstructor;
    handleReUpload: FunctionConstructor;
    isDragover: BooleanConstructor;
    selected: ObjectConstructor;
    triggerClick: {
        type: FunctionConstructor;
        default: () => void;
    };
    isHwh5: {
        type: BooleanConstructor;
        default: boolean;
    };
    triggerPlay: {
        type: FunctionConstructor;
        default: () => void;
    };
    mode: StringConstructor;
    lockScroll: {
        type: BooleanConstructor;
        default: boolean;
    };
    reUploadable: BooleanConstructor;
    reUploadTip: FunctionConstructor;
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
};
declare const _default: import("@vue/runtime-core").DefineComponent<{
    disabled: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    display: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    files: {
        type: ArrayConstructor;
        default: () => never[];
    };
    filesIcon: {
        type: ArrayConstructor;
        default: () => never[];
    };
    handlePreview: FunctionConstructor;
    isEdm: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    isFolder: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    listType: StringConstructor;
    openDownloadFile: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    srcList: {
        type: ArrayConstructor;
        default: () => never[];
    };
    isFolderTitle: {
        type: BooleanConstructor;
        default: boolean;
    };
    listOption: {
        type: ObjectConstructor;
        default: () => {
            showUpdate: boolean;
            showDel: boolean;
        };
    };
    maxNameLength: {
        type: NumberConstructor;
        default: number;
    };
    scale: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    showName: {
        type: BooleanConstructor;
        default: boolean;
    };
    types: ArrayConstructor;
    displayOnly: {
        type: BooleanConstructor;
        default: boolean;
    };
    handleDownloadFile: FunctionConstructor;
    handleReUpload: FunctionConstructor;
    isDragover: BooleanConstructor;
    selected: ObjectConstructor;
    triggerClick: {
        type: FunctionConstructor;
        default: () => void;
    };
    isHwh5: {
        type: BooleanConstructor;
        default: boolean;
    };
    triggerPlay: {
        type: FunctionConstructor;
        default: () => void;
    };
    mode: StringConstructor;
    lockScroll: {
        type: BooleanConstructor;
        default: boolean;
    };
    reUploadable: BooleanConstructor;
    reUploadTip: FunctionConstructor;
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").VNodeProps & import("@vue/runtime-core").AllowedComponentProps & import("@vue/runtime-core").ComponentCustomProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    disabled: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    display: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    files: {
        type: ArrayConstructor;
        default: () => never[];
    };
    filesIcon: {
        type: ArrayConstructor;
        default: () => never[];
    };
    handlePreview: FunctionConstructor;
    isEdm: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    isFolder: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    listType: StringConstructor;
    openDownloadFile: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    srcList: {
        type: ArrayConstructor;
        default: () => never[];
    };
    isFolderTitle: {
        type: BooleanConstructor;
        default: boolean;
    };
    listOption: {
        type: ObjectConstructor;
        default: () => {
            showUpdate: boolean;
            showDel: boolean;
        };
    };
    maxNameLength: {
        type: NumberConstructor;
        default: number;
    };
    scale: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    showName: {
        type: BooleanConstructor;
        default: boolean;
    };
    types: ArrayConstructor;
    displayOnly: {
        type: BooleanConstructor;
        default: boolean;
    };
    handleDownloadFile: FunctionConstructor;
    handleReUpload: FunctionConstructor;
    isDragover: BooleanConstructor;
    selected: ObjectConstructor;
    triggerClick: {
        type: FunctionConstructor;
        default: () => void;
    };
    isHwh5: {
        type: BooleanConstructor;
        default: boolean;
    };
    triggerPlay: {
        type: FunctionConstructor;
        default: () => void;
    };
    mode: StringConstructor;
    lockScroll: {
        type: BooleanConstructor;
        default: boolean;
    };
    reUploadable: BooleanConstructor;
    reUploadTip: FunctionConstructor;
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    disabled: boolean;
    tiny_mode_root: boolean;
    display: boolean;
    scale: string | number;
    displayOnly: boolean;
    lockScroll: boolean;
    isHwh5: boolean;
    files: unknown[];
    filesIcon: unknown[];
    isEdm: boolean;
    isFolder: boolean;
    openDownloadFile: boolean;
    srcList: unknown[];
    isFolderTitle: boolean;
    listOption: Record<string, any>;
    maxNameLength: number;
    showName: boolean;
    isDragover: boolean;
    triggerClick: Function;
    triggerPlay: Function;
    reUploadable: boolean;
}, {}>;
export default _default;
